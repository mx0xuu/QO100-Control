

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Aug 27 23:24:15 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	16F18444
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK2,global,class=CODE,delta=2,noexec
     6                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,noexec
    12                           	psect	inittext,global,class=CODE,delta=2
    13                           	psect	clrtext,global,class=CODE,delta=2
    14                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    16                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    17                           	psect	text1,local,class=CODE,merge=1,delta=2
    18                           	psect	text2,local,class=CODE,merge=1,delta=2
    19                           	psect	text3,local,class=CODE,merge=1,delta=2
    20                           	psect	text4,local,class=CODE,merge=1,delta=2
    21                           	psect	text5,local,class=CODE,merge=1,delta=2
    22                           	psect	text6,local,class=CODE,merge=1,delta=2
    23                           	psect	text7,local,class=CODE,merge=1,delta=2
    24                           	psect	text8,local,class=CODE,merge=1,delta=2
    25                           	psect	text9,local,class=CODE,merge=1,delta=2
    26                           	psect	text10,local,class=CODE,merge=1,delta=2
    27                           	psect	text11,local,class=CODE,merge=1,delta=2
    28                           	psect	text12,local,class=CODE,merge=1,delta=2
    29                           	psect	text13,local,class=CODE,merge=1,delta=2
    30                           	psect	text14,local,class=CODE,merge=1,delta=2
    31                           	psect	text15,local,class=CODE,merge=1,delta=2
    32                           	psect	text16,local,class=CODE,merge=1,delta=2
    33                           	psect	text17,local,class=CODE,merge=1,delta=2
    34                           	psect	text18,local,class=CODE,merge=1,delta=2
    35                           	psect	text19,local,class=CODE,merge=1,delta=2
    36                           	psect	text20,local,class=CODE,merge=1,delta=2
    37                           	psect	intentry,global,class=CODE,delta=2
    38                           	psect	text22,local,class=CODE,merge=1,delta=2
    39                           	psect	text23,local,class=CODE,merge=1,delta=2
    40                           	psect	text24,local,class=CODE,merge=1,delta=2
    41                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    42                           	dabs	1,0x7E,2
    43  0000                     
    44                           ; Version 2.20
    45                           ; Generated 30/04/2020 GMT
    46                           ; 
    47                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    48                           ; All rights reserved.
    49                           ; 
    50                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    51                           ; 
    52                           ; Redistribution and use in source and binary forms, with or without modification, are
    53                           ; permitted provided that the following conditions are met:
    54                           ; 
    55                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    56                           ;        conditions and the following disclaimer.
    57                           ; 
    58                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    59                           ;        of conditions and the following disclaimer in the documentation and/or other
    60                           ;        materials provided with the distribution.
    61                           ; 
    62                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    63                           ;        software without specific prior written permission.
    64                           ; 
    65                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    66                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    67                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    68                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    69                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    70                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    71                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    72                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    73                           ; 
    74                           ; 
    75                           ; Code-generator required, PIC16F18444 Definitions
    76                           ; 
    77                           ; SFR Addresses
    78  0000                     	;# 
    79  0001                     	;# 
    80  0002                     	;# 
    81  0003                     	;# 
    82  0004                     	;# 
    83  0005                     	;# 
    84  0006                     	;# 
    85  0007                     	;# 
    86  0008                     	;# 
    87  0009                     	;# 
    88  000A                     	;# 
    89  000B                     	;# 
    90  000C                     	;# 
    91  000D                     	;# 
    92  000E                     	;# 
    93  0012                     	;# 
    94  0013                     	;# 
    95  0014                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  001A                     	;# 
    99  008C                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0090                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0094                     	;# 
   113  0095                     	;# 
   114  0096                     	;# 
   115  0096                     	;# 
   116  0097                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009A                     	;# 
   120  009B                     	;# 
   121  009B                     	;# 
   122  009C                     	;# 
   123  009D                     	;# 
   124  009D                     	;# 
   125  009E                     	;# 
   126  009F                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  010F                     	;# 
   133  0110                     	;# 
   134  0111                     	;# 
   135  0112                     	;# 
   136  0113                     	;# 
   137  0114                     	;# 
   138  0115                     	;# 
   139  0116                     	;# 
   140  0117                     	;# 
   141  0118                     	;# 
   142  0119                     	;# 
   143  0119                     	;# 
   144  0119                     	;# 
   145  011A                     	;# 
   146  011A                     	;# 
   147  011A                     	;# 
   148  011B                     	;# 
   149  011B                     	;# 
   150  011B                     	;# 
   151  011B                     	;# 
   152  011B                     	;# 
   153  011C                     	;# 
   154  011C                     	;# 
   155  011C                     	;# 
   156  011D                     	;# 
   157  011D                     	;# 
   158  011D                     	;# 
   159  011E                     	;# 
   160  011E                     	;# 
   161  011E                     	;# 
   162  011F                     	;# 
   163  011F                     	;# 
   164  011F                     	;# 
   165  011F                     	;# 
   166  011F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  018E                     	;# 
   170  018F                     	;# 
   171  0190                     	;# 
   172  0191                     	;# 
   173  0192                     	;# 
   174  020C                     	;# 
   175  020D                     	;# 
   176  020E                     	;# 
   177  020E                     	;# 
   178  020F                     	;# 
   179  020F                     	;# 
   180  0210                     	;# 
   181  0210                     	;# 
   182  0211                     	;# 
   183  0211                     	;# 
   184  0212                     	;# 
   185  0213                     	;# 
   186  0214                     	;# 
   187  0214                     	;# 
   188  0215                     	;# 
   189  0215                     	;# 
   190  0216                     	;# 
   191  0216                     	;# 
   192  0217                     	;# 
   193  0217                     	;# 
   194  0218                     	;# 
   195  0219                     	;# 
   196  021A                     	;# 
   197  021A                     	;# 
   198  021B                     	;# 
   199  021B                     	;# 
   200  021C                     	;# 
   201  021C                     	;# 
   202  021D                     	;# 
   203  021D                     	;# 
   204  021E                     	;# 
   205  021F                     	;# 
   206  028C                     	;# 
   207  028C                     	;# 
   208  028D                     	;# 
   209  028D                     	;# 
   210  028E                     	;# 
   211  028F                     	;# 
   212  0290                     	;# 
   213  0291                     	;# 
   214  0292                     	;# 
   215  0292                     	;# 
   216  0293                     	;# 
   217  0293                     	;# 
   218  0294                     	;# 
   219  0295                     	;# 
   220  0296                     	;# 
   221  0297                     	;# 
   222  0298                     	;# 
   223  0298                     	;# 
   224  0299                     	;# 
   225  0299                     	;# 
   226  029A                     	;# 
   227  029B                     	;# 
   228  029C                     	;# 
   229  029D                     	;# 
   230  029F                     	;# 
   231  030C                     	;# 
   232  030C                     	;# 
   233  030D                     	;# 
   234  030E                     	;# 
   235  030F                     	;# 
   236  0310                     	;# 
   237  0310                     	;# 
   238  0311                     	;# 
   239  0312                     	;# 
   240  0313                     	;# 
   241  0314                     	;# 
   242  0314                     	;# 
   243  0315                     	;# 
   244  0316                     	;# 
   245  0317                     	;# 
   246  0318                     	;# 
   247  0318                     	;# 
   248  0319                     	;# 
   249  031A                     	;# 
   250  031B                     	;# 
   251  038C                     	;# 
   252  038C                     	;# 
   253  038D                     	;# 
   254  038E                     	;# 
   255  0390                     	;# 
   256  0390                     	;# 
   257  0391                     	;# 
   258  0392                     	;# 
   259  048C                     	;# 
   260  048C                     	;# 
   261  048D                     	;# 
   262  048E                     	;# 
   263  048F                     	;# 
   264  048F                     	;# 
   265  0490                     	;# 
   266  0491                     	;# 
   267  0492                     	;# 
   268  0492                     	;# 
   269  0493                     	;# 
   270  0494                     	;# 
   271  0495                     	;# 
   272  0495                     	;# 
   273  0496                     	;# 
   274  0497                     	;# 
   275  0498                     	;# 
   276  0499                     	;# 
   277  049A                     	;# 
   278  049B                     	;# 
   279  049C                     	;# 
   280  049D                     	;# 
   281  058C                     	;# 
   282  058C                     	;# 
   283  058D                     	;# 
   284  058E                     	;# 
   285  058F                     	;# 
   286  058F                     	;# 
   287  0590                     	;# 
   288  0591                     	;# 
   289  0592                     	;# 
   290  0593                     	;# 
   291  059C                     	;# 
   292  059C                     	;# 
   293  059D                     	;# 
   294  059D                     	;# 
   295  059E                     	;# 
   296  059F                     	;# 
   297  060C                     	;# 
   298  060C                     	;# 
   299  060D                     	;# 
   300  060D                     	;# 
   301  060E                     	;# 
   302  060F                     	;# 
   303  0610                     	;# 
   304  0611                     	;# 
   305  0612                     	;# 
   306  0613                     	;# 
   307  0614                     	;# 
   308  0616                     	;# 
   309  0616                     	;# 
   310  0617                     	;# 
   311  0617                     	;# 
   312  0618                     	;# 
   313  0619                     	;# 
   314  061A                     	;# 
   315  061B                     	;# 
   316  061C                     	;# 
   317  061D                     	;# 
   318  061E                     	;# 
   319  070C                     	;# 
   320  070D                     	;# 
   321  070E                     	;# 
   322  070F                     	;# 
   323  0710                     	;# 
   324  0711                     	;# 
   325  0712                     	;# 
   326  0713                     	;# 
   327  0714                     	;# 
   328  0716                     	;# 
   329  0717                     	;# 
   330  0718                     	;# 
   331  0719                     	;# 
   332  071A                     	;# 
   333  071B                     	;# 
   334  071C                     	;# 
   335  071D                     	;# 
   336  071E                     	;# 
   337  0796                     	;# 
   338  0797                     	;# 
   339  0798                     	;# 
   340  0799                     	;# 
   341  079A                     	;# 
   342  079B                     	;# 
   343  079C                     	;# 
   344  079D                     	;# 
   345  080C                     	;# 
   346  080D                     	;# 
   347  080E                     	;# 
   348  080F                     	;# 
   349  0810                     	;# 
   350  0811                     	;# 
   351  0812                     	;# 
   352  0813                     	;# 
   353  0814                     	;# 
   354  081A                     	;# 
   355  081A                     	;# 
   356  081B                     	;# 
   357  081C                     	;# 
   358  081C                     	;# 
   359  081D                     	;# 
   360  081E                     	;# 
   361  081F                     	;# 
   362  088C                     	;# 
   363  088D                     	;# 
   364  088E                     	;# 
   365  088F                     	;# 
   366  0890                     	;# 
   367  0891                     	;# 
   368  0892                     	;# 
   369  0893                     	;# 
   370  0895                     	;# 
   371  0896                     	;# 
   372  0897                     	;# 
   373  0898                     	;# 
   374  0899                     	;# 
   375  089A                     	;# 
   376  089B                     	;# 
   377  090C                     	;# 
   378  090E                     	;# 
   379  090F                     	;# 
   380  091F                     	;# 
   381  098F                     	;# 
   382  098F                     	;# 
   383  0990                     	;# 
   384  0991                     	;# 
   385  0992                     	;# 
   386  0993                     	;# 
   387  0994                     	;# 
   388  0995                     	;# 
   389  0996                     	;# 
   390  0997                     	;# 
   391  1E0F                     	;# 
   392  1E10                     	;# 
   393  1E11                     	;# 
   394  1E12                     	;# 
   395  1E13                     	;# 
   396  1E14                     	;# 
   397  1E15                     	;# 
   398  1E16                     	;# 
   399  1E17                     	;# 
   400  1E18                     	;# 
   401  1E19                     	;# 
   402  1E1A                     	;# 
   403  1E1B                     	;# 
   404  1E1C                     	;# 
   405  1E1D                     	;# 
   406  1E1E                     	;# 
   407  1E1F                     	;# 
   408  1E20                     	;# 
   409  1E21                     	;# 
   410  1E22                     	;# 
   411  1E23                     	;# 
   412  1E24                     	;# 
   413  1E25                     	;# 
   414  1E26                     	;# 
   415  1E27                     	;# 
   416  1E28                     	;# 
   417  1E29                     	;# 
   418  1E2A                     	;# 
   419  1E2B                     	;# 
   420  1E2C                     	;# 
   421  1E2D                     	;# 
   422  1E2E                     	;# 
   423  1E2F                     	;# 
   424  1E30                     	;# 
   425  1E31                     	;# 
   426  1E32                     	;# 
   427  1E33                     	;# 
   428  1E34                     	;# 
   429  1E35                     	;# 
   430  1E36                     	;# 
   431  1E37                     	;# 
   432  1E8F                     	;# 
   433  1E90                     	;# 
   434  1E91                     	;# 
   435  1E92                     	;# 
   436  1E93                     	;# 
   437  1E94                     	;# 
   438  1E95                     	;# 
   439  1E96                     	;# 
   440  1E97                     	;# 
   441  1E9C                     	;# 
   442  1E9D                     	;# 
   443  1E9E                     	;# 
   444  1EA1                     	;# 
   445  1EA2                     	;# 
   446  1EA3                     	;# 
   447  1EA4                     	;# 
   448  1EA9                     	;# 
   449  1EAA                     	;# 
   450  1EB1                     	;# 
   451  1EB2                     	;# 
   452  1EB8                     	;# 
   453  1EB9                     	;# 
   454  1EBA                     	;# 
   455  1EBB                     	;# 
   456  1EBC                     	;# 
   457  1EBD                     	;# 
   458  1EBE                     	;# 
   459  1EC3                     	;# 
   460  1EC5                     	;# 
   461  1EC6                     	;# 
   462  1EC7                     	;# 
   463  1ECB                     	;# 
   464  1ECB                     	;# 
   465  1ECB                     	;# 
   466  1ECC                     	;# 
   467  1ECC                     	;# 
   468  1ECC                     	;# 
   469  1F10                     	;# 
   470  1F11                     	;# 
   471  1F12                     	;# 
   472  1F14                     	;# 
   473  1F15                     	;# 
   474  1F1C                     	;# 
   475  1F1D                     	;# 
   476  1F1E                     	;# 
   477  1F1F                     	;# 
   478  1F20                     	;# 
   479  1F21                     	;# 
   480  1F22                     	;# 
   481  1F23                     	;# 
   482  1F24                     	;# 
   483  1F25                     	;# 
   484  1F26                     	;# 
   485  1F27                     	;# 
   486  1F38                     	;# 
   487  1F39                     	;# 
   488  1F3A                     	;# 
   489  1F3B                     	;# 
   490  1F3C                     	;# 
   491  1F3D                     	;# 
   492  1F3E                     	;# 
   493  1F3F                     	;# 
   494  1F43                     	;# 
   495  1F44                     	;# 
   496  1F45                     	;# 
   497  1F46                     	;# 
   498  1F47                     	;# 
   499  1F48                     	;# 
   500  1F49                     	;# 
   501  1F4A                     	;# 
   502  1F4E                     	;# 
   503  1F4F                     	;# 
   504  1F50                     	;# 
   505  1F51                     	;# 
   506  1F52                     	;# 
   507  1F53                     	;# 
   508  1F54                     	;# 
   509  1F55                     	;# 
   510  1FE4                     	;# 
   511  1FE5                     	;# 
   512  1FE6                     	;# 
   513  1FE7                     	;# 
   514  1FE8                     	;# 
   515  1FE8                     	;# 
   516  1FE9                     	;# 
   517  1FEA                     	;# 
   518  1FEB                     	;# 
   519  1FED                     	;# 
   520  1FEE                     	;# 
   521  1FEF                     	;# 
   522  0000                     	;# 
   523  0001                     	;# 
   524  0002                     	;# 
   525  0003                     	;# 
   526  0004                     	;# 
   527  0005                     	;# 
   528  0006                     	;# 
   529  0007                     	;# 
   530  0008                     	;# 
   531  0009                     	;# 
   532  000A                     	;# 
   533  000B                     	;# 
   534  000C                     	;# 
   535  000D                     	;# 
   536  000E                     	;# 
   537  0012                     	;# 
   538  0013                     	;# 
   539  0014                     	;# 
   540  0018                     	;# 
   541  0019                     	;# 
   542  001A                     	;# 
   543  008C                     	;# 
   544  008C                     	;# 
   545  008D                     	;# 
   546  008E                     	;# 
   547  008E                     	;# 
   548  008F                     	;# 
   549  0090                     	;# 
   550  0090                     	;# 
   551  0091                     	;# 
   552  0092                     	;# 
   553  0092                     	;# 
   554  0093                     	;# 
   555  0094                     	;# 
   556  0094                     	;# 
   557  0095                     	;# 
   558  0096                     	;# 
   559  0096                     	;# 
   560  0097                     	;# 
   561  0098                     	;# 
   562  0099                     	;# 
   563  009A                     	;# 
   564  009B                     	;# 
   565  009B                     	;# 
   566  009C                     	;# 
   567  009D                     	;# 
   568  009D                     	;# 
   569  009E                     	;# 
   570  009F                     	;# 
   571  010C                     	;# 
   572  010C                     	;# 
   573  010D                     	;# 
   574  010E                     	;# 
   575  010F                     	;# 
   576  010F                     	;# 
   577  0110                     	;# 
   578  0111                     	;# 
   579  0112                     	;# 
   580  0113                     	;# 
   581  0114                     	;# 
   582  0115                     	;# 
   583  0116                     	;# 
   584  0117                     	;# 
   585  0118                     	;# 
   586  0119                     	;# 
   587  0119                     	;# 
   588  0119                     	;# 
   589  011A                     	;# 
   590  011A                     	;# 
   591  011A                     	;# 
   592  011B                     	;# 
   593  011B                     	;# 
   594  011B                     	;# 
   595  011B                     	;# 
   596  011B                     	;# 
   597  011C                     	;# 
   598  011C                     	;# 
   599  011C                     	;# 
   600  011D                     	;# 
   601  011D                     	;# 
   602  011D                     	;# 
   603  011E                     	;# 
   604  011E                     	;# 
   605  011E                     	;# 
   606  011F                     	;# 
   607  011F                     	;# 
   608  011F                     	;# 
   609  011F                     	;# 
   610  011F                     	;# 
   611  018C                     	;# 
   612  018D                     	;# 
   613  018E                     	;# 
   614  018F                     	;# 
   615  0190                     	;# 
   616  0191                     	;# 
   617  0192                     	;# 
   618  020C                     	;# 
   619  020D                     	;# 
   620  020E                     	;# 
   621  020E                     	;# 
   622  020F                     	;# 
   623  020F                     	;# 
   624  0210                     	;# 
   625  0210                     	;# 
   626  0211                     	;# 
   627  0211                     	;# 
   628  0212                     	;# 
   629  0213                     	;# 
   630  0214                     	;# 
   631  0214                     	;# 
   632  0215                     	;# 
   633  0215                     	;# 
   634  0216                     	;# 
   635  0216                     	;# 
   636  0217                     	;# 
   637  0217                     	;# 
   638  0218                     	;# 
   639  0219                     	;# 
   640  021A                     	;# 
   641  021A                     	;# 
   642  021B                     	;# 
   643  021B                     	;# 
   644  021C                     	;# 
   645  021C                     	;# 
   646  021D                     	;# 
   647  021D                     	;# 
   648  021E                     	;# 
   649  021F                     	;# 
   650  028C                     	;# 
   651  028C                     	;# 
   652  028D                     	;# 
   653  028D                     	;# 
   654  028E                     	;# 
   655  028F                     	;# 
   656  0290                     	;# 
   657  0291                     	;# 
   658  0292                     	;# 
   659  0292                     	;# 
   660  0293                     	;# 
   661  0293                     	;# 
   662  0294                     	;# 
   663  0295                     	;# 
   664  0296                     	;# 
   665  0297                     	;# 
   666  0298                     	;# 
   667  0298                     	;# 
   668  0299                     	;# 
   669  0299                     	;# 
   670  029A                     	;# 
   671  029B                     	;# 
   672  029C                     	;# 
   673  029D                     	;# 
   674  029F                     	;# 
   675  030C                     	;# 
   676  030C                     	;# 
   677  030D                     	;# 
   678  030E                     	;# 
   679  030F                     	;# 
   680  0310                     	;# 
   681  0310                     	;# 
   682  0311                     	;# 
   683  0312                     	;# 
   684  0313                     	;# 
   685  0314                     	;# 
   686  0314                     	;# 
   687  0315                     	;# 
   688  0316                     	;# 
   689  0317                     	;# 
   690  0318                     	;# 
   691  0318                     	;# 
   692  0319                     	;# 
   693  031A                     	;# 
   694  031B                     	;# 
   695  038C                     	;# 
   696  038C                     	;# 
   697  038D                     	;# 
   698  038E                     	;# 
   699  0390                     	;# 
   700  0390                     	;# 
   701  0391                     	;# 
   702  0392                     	;# 
   703  048C                     	;# 
   704  048C                     	;# 
   705  048D                     	;# 
   706  048E                     	;# 
   707  048F                     	;# 
   708  048F                     	;# 
   709  0490                     	;# 
   710  0491                     	;# 
   711  0492                     	;# 
   712  0492                     	;# 
   713  0493                     	;# 
   714  0494                     	;# 
   715  0495                     	;# 
   716  0495                     	;# 
   717  0496                     	;# 
   718  0497                     	;# 
   719  0498                     	;# 
   720  0499                     	;# 
   721  049A                     	;# 
   722  049B                     	;# 
   723  049C                     	;# 
   724  049D                     	;# 
   725  058C                     	;# 
   726  058C                     	;# 
   727  058D                     	;# 
   728  058E                     	;# 
   729  058F                     	;# 
   730  058F                     	;# 
   731  0590                     	;# 
   732  0591                     	;# 
   733  0592                     	;# 
   734  0593                     	;# 
   735  059C                     	;# 
   736  059C                     	;# 
   737  059D                     	;# 
   738  059D                     	;# 
   739  059E                     	;# 
   740  059F                     	;# 
   741  060C                     	;# 
   742  060C                     	;# 
   743  060D                     	;# 
   744  060D                     	;# 
   745  060E                     	;# 
   746  060F                     	;# 
   747  0610                     	;# 
   748  0611                     	;# 
   749  0612                     	;# 
   750  0613                     	;# 
   751  0614                     	;# 
   752  0616                     	;# 
   753  0616                     	;# 
   754  0617                     	;# 
   755  0617                     	;# 
   756  0618                     	;# 
   757  0619                     	;# 
   758  061A                     	;# 
   759  061B                     	;# 
   760  061C                     	;# 
   761  061D                     	;# 
   762  061E                     	;# 
   763  070C                     	;# 
   764  070D                     	;# 
   765  070E                     	;# 
   766  070F                     	;# 
   767  0710                     	;# 
   768  0711                     	;# 
   769  0712                     	;# 
   770  0713                     	;# 
   771  0714                     	;# 
   772  0716                     	;# 
   773  0717                     	;# 
   774  0718                     	;# 
   775  0719                     	;# 
   776  071A                     	;# 
   777  071B                     	;# 
   778  071C                     	;# 
   779  071D                     	;# 
   780  071E                     	;# 
   781  0796                     	;# 
   782  0797                     	;# 
   783  0798                     	;# 
   784  0799                     	;# 
   785  079A                     	;# 
   786  079B                     	;# 
   787  079C                     	;# 
   788  079D                     	;# 
   789  080C                     	;# 
   790  080D                     	;# 
   791  080E                     	;# 
   792  080F                     	;# 
   793  0810                     	;# 
   794  0811                     	;# 
   795  0812                     	;# 
   796  0813                     	;# 
   797  0814                     	;# 
   798  081A                     	;# 
   799  081A                     	;# 
   800  081B                     	;# 
   801  081C                     	;# 
   802  081C                     	;# 
   803  081D                     	;# 
   804  081E                     	;# 
   805  081F                     	;# 
   806  088C                     	;# 
   807  088D                     	;# 
   808  088E                     	;# 
   809  088F                     	;# 
   810  0890                     	;# 
   811  0891                     	;# 
   812  0892                     	;# 
   813  0893                     	;# 
   814  0895                     	;# 
   815  0896                     	;# 
   816  0897                     	;# 
   817  0898                     	;# 
   818  0899                     	;# 
   819  089A                     	;# 
   820  089B                     	;# 
   821  090C                     	;# 
   822  090E                     	;# 
   823  090F                     	;# 
   824  091F                     	;# 
   825  098F                     	;# 
   826  098F                     	;# 
   827  0990                     	;# 
   828  0991                     	;# 
   829  0992                     	;# 
   830  0993                     	;# 
   831  0994                     	;# 
   832  0995                     	;# 
   833  0996                     	;# 
   834  0997                     	;# 
   835  1E0F                     	;# 
   836  1E10                     	;# 
   837  1E11                     	;# 
   838  1E12                     	;# 
   839  1E13                     	;# 
   840  1E14                     	;# 
   841  1E15                     	;# 
   842  1E16                     	;# 
   843  1E17                     	;# 
   844  1E18                     	;# 
   845  1E19                     	;# 
   846  1E1A                     	;# 
   847  1E1B                     	;# 
   848  1E1C                     	;# 
   849  1E1D                     	;# 
   850  1E1E                     	;# 
   851  1E1F                     	;# 
   852  1E20                     	;# 
   853  1E21                     	;# 
   854  1E22                     	;# 
   855  1E23                     	;# 
   856  1E24                     	;# 
   857  1E25                     	;# 
   858  1E26                     	;# 
   859  1E27                     	;# 
   860  1E28                     	;# 
   861  1E29                     	;# 
   862  1E2A                     	;# 
   863  1E2B                     	;# 
   864  1E2C                     	;# 
   865  1E2D                     	;# 
   866  1E2E                     	;# 
   867  1E2F                     	;# 
   868  1E30                     	;# 
   869  1E31                     	;# 
   870  1E32                     	;# 
   871  1E33                     	;# 
   872  1E34                     	;# 
   873  1E35                     	;# 
   874  1E36                     	;# 
   875  1E37                     	;# 
   876  1E8F                     	;# 
   877  1E90                     	;# 
   878  1E91                     	;# 
   879  1E92                     	;# 
   880  1E93                     	;# 
   881  1E94                     	;# 
   882  1E95                     	;# 
   883  1E96                     	;# 
   884  1E97                     	;# 
   885  1E9C                     	;# 
   886  1E9D                     	;# 
   887  1E9E                     	;# 
   888  1EA1                     	;# 
   889  1EA2                     	;# 
   890  1EA3                     	;# 
   891  1EA4                     	;# 
   892  1EA9                     	;# 
   893  1EAA                     	;# 
   894  1EB1                     	;# 
   895  1EB2                     	;# 
   896  1EB8                     	;# 
   897  1EB9                     	;# 
   898  1EBA                     	;# 
   899  1EBB                     	;# 
   900  1EBC                     	;# 
   901  1EBD                     	;# 
   902  1EBE                     	;# 
   903  1EC3                     	;# 
   904  1EC5                     	;# 
   905  1EC6                     	;# 
   906  1EC7                     	;# 
   907  1ECB                     	;# 
   908  1ECB                     	;# 
   909  1ECB                     	;# 
   910  1ECC                     	;# 
   911  1ECC                     	;# 
   912  1ECC                     	;# 
   913  1F10                     	;# 
   914  1F11                     	;# 
   915  1F12                     	;# 
   916  1F14                     	;# 
   917  1F15                     	;# 
   918  1F1C                     	;# 
   919  1F1D                     	;# 
   920  1F1E                     	;# 
   921  1F1F                     	;# 
   922  1F20                     	;# 
   923  1F21                     	;# 
   924  1F22                     	;# 
   925  1F23                     	;# 
   926  1F24                     	;# 
   927  1F25                     	;# 
   928  1F26                     	;# 
   929  1F27                     	;# 
   930  1F38                     	;# 
   931  1F39                     	;# 
   932  1F3A                     	;# 
   933  1F3B                     	;# 
   934  1F3C                     	;# 
   935  1F3D                     	;# 
   936  1F3E                     	;# 
   937  1F3F                     	;# 
   938  1F43                     	;# 
   939  1F44                     	;# 
   940  1F45                     	;# 
   941  1F46                     	;# 
   942  1F47                     	;# 
   943  1F48                     	;# 
   944  1F49                     	;# 
   945  1F4A                     	;# 
   946  1F4E                     	;# 
   947  1F4F                     	;# 
   948  1F50                     	;# 
   949  1F51                     	;# 
   950  1F52                     	;# 
   951  1F53                     	;# 
   952  1F54                     	;# 
   953  1F55                     	;# 
   954  1FE4                     	;# 
   955  1FE5                     	;# 
   956  1FE6                     	;# 
   957  1FE7                     	;# 
   958  1FE8                     	;# 
   959  1FE8                     	;# 
   960  1FE9                     	;# 
   961  1FEA                     	;# 
   962  1FEB                     	;# 
   963  1FED                     	;# 
   964  1FEE                     	;# 
   965  1FEF                     	;# 
   966  0000                     	;# 
   967  0001                     	;# 
   968  0002                     	;# 
   969  0003                     	;# 
   970  0004                     	;# 
   971  0005                     	;# 
   972  0006                     	;# 
   973  0007                     	;# 
   974  0008                     	;# 
   975  0009                     	;# 
   976  000A                     	;# 
   977  000B                     	;# 
   978  000C                     	;# 
   979  000D                     	;# 
   980  000E                     	;# 
   981  0012                     	;# 
   982  0013                     	;# 
   983  0014                     	;# 
   984  0018                     	;# 
   985  0019                     	;# 
   986  001A                     	;# 
   987  008C                     	;# 
   988  008C                     	;# 
   989  008D                     	;# 
   990  008E                     	;# 
   991  008E                     	;# 
   992  008F                     	;# 
   993  0090                     	;# 
   994  0090                     	;# 
   995  0091                     	;# 
   996  0092                     	;# 
   997  0092                     	;# 
   998  0093                     	;# 
   999  0094                     	;# 
  1000  0094                     	;# 
  1001  0095                     	;# 
  1002  0096                     	;# 
  1003  0096                     	;# 
  1004  0097                     	;# 
  1005  0098                     	;# 
  1006  0099                     	;# 
  1007  009A                     	;# 
  1008  009B                     	;# 
  1009  009B                     	;# 
  1010  009C                     	;# 
  1011  009D                     	;# 
  1012  009D                     	;# 
  1013  009E                     	;# 
  1014  009F                     	;# 
  1015  010C                     	;# 
  1016  010C                     	;# 
  1017  010D                     	;# 
  1018  010E                     	;# 
  1019  010F                     	;# 
  1020  010F                     	;# 
  1021  0110                     	;# 
  1022  0111                     	;# 
  1023  0112                     	;# 
  1024  0113                     	;# 
  1025  0114                     	;# 
  1026  0115                     	;# 
  1027  0116                     	;# 
  1028  0117                     	;# 
  1029  0118                     	;# 
  1030  0119                     	;# 
  1031  0119                     	;# 
  1032  0119                     	;# 
  1033  011A                     	;# 
  1034  011A                     	;# 
  1035  011A                     	;# 
  1036  011B                     	;# 
  1037  011B                     	;# 
  1038  011B                     	;# 
  1039  011B                     	;# 
  1040  011B                     	;# 
  1041  011C                     	;# 
  1042  011C                     	;# 
  1043  011C                     	;# 
  1044  011D                     	;# 
  1045  011D                     	;# 
  1046  011D                     	;# 
  1047  011E                     	;# 
  1048  011E                     	;# 
  1049  011E                     	;# 
  1050  011F                     	;# 
  1051  011F                     	;# 
  1052  011F                     	;# 
  1053  011F                     	;# 
  1054  011F                     	;# 
  1055  018C                     	;# 
  1056  018D                     	;# 
  1057  018E                     	;# 
  1058  018F                     	;# 
  1059  0190                     	;# 
  1060  0191                     	;# 
  1061  0192                     	;# 
  1062  020C                     	;# 
  1063  020D                     	;# 
  1064  020E                     	;# 
  1065  020E                     	;# 
  1066  020F                     	;# 
  1067  020F                     	;# 
  1068  0210                     	;# 
  1069  0210                     	;# 
  1070  0211                     	;# 
  1071  0211                     	;# 
  1072  0212                     	;# 
  1073  0213                     	;# 
  1074  0214                     	;# 
  1075  0214                     	;# 
  1076  0215                     	;# 
  1077  0215                     	;# 
  1078  0216                     	;# 
  1079  0216                     	;# 
  1080  0217                     	;# 
  1081  0217                     	;# 
  1082  0218                     	;# 
  1083  0219                     	;# 
  1084  021A                     	;# 
  1085  021A                     	;# 
  1086  021B                     	;# 
  1087  021B                     	;# 
  1088  021C                     	;# 
  1089  021C                     	;# 
  1090  021D                     	;# 
  1091  021D                     	;# 
  1092  021E                     	;# 
  1093  021F                     	;# 
  1094  028C                     	;# 
  1095  028C                     	;# 
  1096  028D                     	;# 
  1097  028D                     	;# 
  1098  028E                     	;# 
  1099  028F                     	;# 
  1100  0290                     	;# 
  1101  0291                     	;# 
  1102  0292                     	;# 
  1103  0292                     	;# 
  1104  0293                     	;# 
  1105  0293                     	;# 
  1106  0294                     	;# 
  1107  0295                     	;# 
  1108  0296                     	;# 
  1109  0297                     	;# 
  1110  0298                     	;# 
  1111  0298                     	;# 
  1112  0299                     	;# 
  1113  0299                     	;# 
  1114  029A                     	;# 
  1115  029B                     	;# 
  1116  029C                     	;# 
  1117  029D                     	;# 
  1118  029F                     	;# 
  1119  030C                     	;# 
  1120  030C                     	;# 
  1121  030D                     	;# 
  1122  030E                     	;# 
  1123  030F                     	;# 
  1124  0310                     	;# 
  1125  0310                     	;# 
  1126  0311                     	;# 
  1127  0312                     	;# 
  1128  0313                     	;# 
  1129  0314                     	;# 
  1130  0314                     	;# 
  1131  0315                     	;# 
  1132  0316                     	;# 
  1133  0317                     	;# 
  1134  0318                     	;# 
  1135  0318                     	;# 
  1136  0319                     	;# 
  1137  031A                     	;# 
  1138  031B                     	;# 
  1139  038C                     	;# 
  1140  038C                     	;# 
  1141  038D                     	;# 
  1142  038E                     	;# 
  1143  0390                     	;# 
  1144  0390                     	;# 
  1145  0391                     	;# 
  1146  0392                     	;# 
  1147  048C                     	;# 
  1148  048C                     	;# 
  1149  048D                     	;# 
  1150  048E                     	;# 
  1151  048F                     	;# 
  1152  048F                     	;# 
  1153  0490                     	;# 
  1154  0491                     	;# 
  1155  0492                     	;# 
  1156  0492                     	;# 
  1157  0493                     	;# 
  1158  0494                     	;# 
  1159  0495                     	;# 
  1160  0495                     	;# 
  1161  0496                     	;# 
  1162  0497                     	;# 
  1163  0498                     	;# 
  1164  0499                     	;# 
  1165  049A                     	;# 
  1166  049B                     	;# 
  1167  049C                     	;# 
  1168  049D                     	;# 
  1169  058C                     	;# 
  1170  058C                     	;# 
  1171  058D                     	;# 
  1172  058E                     	;# 
  1173  058F                     	;# 
  1174  058F                     	;# 
  1175  0590                     	;# 
  1176  0591                     	;# 
  1177  0592                     	;# 
  1178  0593                     	;# 
  1179  059C                     	;# 
  1180  059C                     	;# 
  1181  059D                     	;# 
  1182  059D                     	;# 
  1183  059E                     	;# 
  1184  059F                     	;# 
  1185  060C                     	;# 
  1186  060C                     	;# 
  1187  060D                     	;# 
  1188  060D                     	;# 
  1189  060E                     	;# 
  1190  060F                     	;# 
  1191  0610                     	;# 
  1192  0611                     	;# 
  1193  0612                     	;# 
  1194  0613                     	;# 
  1195  0614                     	;# 
  1196  0616                     	;# 
  1197  0616                     	;# 
  1198  0617                     	;# 
  1199  0617                     	;# 
  1200  0618                     	;# 
  1201  0619                     	;# 
  1202  061A                     	;# 
  1203  061B                     	;# 
  1204  061C                     	;# 
  1205  061D                     	;# 
  1206  061E                     	;# 
  1207  070C                     	;# 
  1208  070D                     	;# 
  1209  070E                     	;# 
  1210  070F                     	;# 
  1211  0710                     	;# 
  1212  0711                     	;# 
  1213  0712                     	;# 
  1214  0713                     	;# 
  1215  0714                     	;# 
  1216  0716                     	;# 
  1217  0717                     	;# 
  1218  0718                     	;# 
  1219  0719                     	;# 
  1220  071A                     	;# 
  1221  071B                     	;# 
  1222  071C                     	;# 
  1223  071D                     	;# 
  1224  071E                     	;# 
  1225  0796                     	;# 
  1226  0797                     	;# 
  1227  0798                     	;# 
  1228  0799                     	;# 
  1229  079A                     	;# 
  1230  079B                     	;# 
  1231  079C                     	;# 
  1232  079D                     	;# 
  1233  080C                     	;# 
  1234  080D                     	;# 
  1235  080E                     	;# 
  1236  080F                     	;# 
  1237  0810                     	;# 
  1238  0811                     	;# 
  1239  0812                     	;# 
  1240  0813                     	;# 
  1241  0814                     	;# 
  1242  081A                     	;# 
  1243  081A                     	;# 
  1244  081B                     	;# 
  1245  081C                     	;# 
  1246  081C                     	;# 
  1247  081D                     	;# 
  1248  081E                     	;# 
  1249  081F                     	;# 
  1250  088C                     	;# 
  1251  088D                     	;# 
  1252  088E                     	;# 
  1253  088F                     	;# 
  1254  0890                     	;# 
  1255  0891                     	;# 
  1256  0892                     	;# 
  1257  0893                     	;# 
  1258  0895                     	;# 
  1259  0896                     	;# 
  1260  0897                     	;# 
  1261  0898                     	;# 
  1262  0899                     	;# 
  1263  089A                     	;# 
  1264  089B                     	;# 
  1265  090C                     	;# 
  1266  090E                     	;# 
  1267  090F                     	;# 
  1268  091F                     	;# 
  1269  098F                     	;# 
  1270  098F                     	;# 
  1271  0990                     	;# 
  1272  0991                     	;# 
  1273  0992                     	;# 
  1274  0993                     	;# 
  1275  0994                     	;# 
  1276  0995                     	;# 
  1277  0996                     	;# 
  1278  0997                     	;# 
  1279  1E0F                     	;# 
  1280  1E10                     	;# 
  1281  1E11                     	;# 
  1282  1E12                     	;# 
  1283  1E13                     	;# 
  1284  1E14                     	;# 
  1285  1E15                     	;# 
  1286  1E16                     	;# 
  1287  1E17                     	;# 
  1288  1E18                     	;# 
  1289  1E19                     	;# 
  1290  1E1A                     	;# 
  1291  1E1B                     	;# 
  1292  1E1C                     	;# 
  1293  1E1D                     	;# 
  1294  1E1E                     	;# 
  1295  1E1F                     	;# 
  1296  1E20                     	;# 
  1297  1E21                     	;# 
  1298  1E22                     	;# 
  1299  1E23                     	;# 
  1300  1E24                     	;# 
  1301  1E25                     	;# 
  1302  1E26                     	;# 
  1303  1E27                     	;# 
  1304  1E28                     	;# 
  1305  1E29                     	;# 
  1306  1E2A                     	;# 
  1307  1E2B                     	;# 
  1308  1E2C                     	;# 
  1309  1E2D                     	;# 
  1310  1E2E                     	;# 
  1311  1E2F                     	;# 
  1312  1E30                     	;# 
  1313  1E31                     	;# 
  1314  1E32                     	;# 
  1315  1E33                     	;# 
  1316  1E34                     	;# 
  1317  1E35                     	;# 
  1318  1E36                     	;# 
  1319  1E37                     	;# 
  1320  1E8F                     	;# 
  1321  1E90                     	;# 
  1322  1E91                     	;# 
  1323  1E92                     	;# 
  1324  1E93                     	;# 
  1325  1E94                     	;# 
  1326  1E95                     	;# 
  1327  1E96                     	;# 
  1328  1E97                     	;# 
  1329  1E9C                     	;# 
  1330  1E9D                     	;# 
  1331  1E9E                     	;# 
  1332  1EA1                     	;# 
  1333  1EA2                     	;# 
  1334  1EA3                     	;# 
  1335  1EA4                     	;# 
  1336  1EA9                     	;# 
  1337  1EAA                     	;# 
  1338  1EB1                     	;# 
  1339  1EB2                     	;# 
  1340  1EB8                     	;# 
  1341  1EB9                     	;# 
  1342  1EBA                     	;# 
  1343  1EBB                     	;# 
  1344  1EBC                     	;# 
  1345  1EBD                     	;# 
  1346  1EBE                     	;# 
  1347  1EC3                     	;# 
  1348  1EC5                     	;# 
  1349  1EC6                     	;# 
  1350  1EC7                     	;# 
  1351  1ECB                     	;# 
  1352  1ECB                     	;# 
  1353  1ECB                     	;# 
  1354  1ECC                     	;# 
  1355  1ECC                     	;# 
  1356  1ECC                     	;# 
  1357  1F10                     	;# 
  1358  1F11                     	;# 
  1359  1F12                     	;# 
  1360  1F14                     	;# 
  1361  1F15                     	;# 
  1362  1F1C                     	;# 
  1363  1F1D                     	;# 
  1364  1F1E                     	;# 
  1365  1F1F                     	;# 
  1366  1F20                     	;# 
  1367  1F21                     	;# 
  1368  1F22                     	;# 
  1369  1F23                     	;# 
  1370  1F24                     	;# 
  1371  1F25                     	;# 
  1372  1F26                     	;# 
  1373  1F27                     	;# 
  1374  1F38                     	;# 
  1375  1F39                     	;# 
  1376  1F3A                     	;# 
  1377  1F3B                     	;# 
  1378  1F3C                     	;# 
  1379  1F3D                     	;# 
  1380  1F3E                     	;# 
  1381  1F3F                     	;# 
  1382  1F43                     	;# 
  1383  1F44                     	;# 
  1384  1F45                     	;# 
  1385  1F46                     	;# 
  1386  1F47                     	;# 
  1387  1F48                     	;# 
  1388  1F49                     	;# 
  1389  1F4A                     	;# 
  1390  1F4E                     	;# 
  1391  1F4F                     	;# 
  1392  1F50                     	;# 
  1393  1F51                     	;# 
  1394  1F52                     	;# 
  1395  1F53                     	;# 
  1396  1F54                     	;# 
  1397  1F55                     	;# 
  1398  1FE4                     	;# 
  1399  1FE5                     	;# 
  1400  1FE6                     	;# 
  1401  1FE7                     	;# 
  1402  1FE8                     	;# 
  1403  1FE8                     	;# 
  1404  1FE9                     	;# 
  1405  1FEA                     	;# 
  1406  1FEB                     	;# 
  1407  1FED                     	;# 
  1408  1FEE                     	;# 
  1409  1FEF                     	;# 
  1410  0000                     	;# 
  1411  0001                     	;# 
  1412  0002                     	;# 
  1413  0003                     	;# 
  1414  0004                     	;# 
  1415  0005                     	;# 
  1416  0006                     	;# 
  1417  0007                     	;# 
  1418  0008                     	;# 
  1419  0009                     	;# 
  1420  000A                     	;# 
  1421  000B                     	;# 
  1422  000C                     	;# 
  1423  000D                     	;# 
  1424  000E                     	;# 
  1425  0012                     	;# 
  1426  0013                     	;# 
  1427  0014                     	;# 
  1428  0018                     	;# 
  1429  0019                     	;# 
  1430  001A                     	;# 
  1431  008C                     	;# 
  1432  008C                     	;# 
  1433  008D                     	;# 
  1434  008E                     	;# 
  1435  008E                     	;# 
  1436  008F                     	;# 
  1437  0090                     	;# 
  1438  0090                     	;# 
  1439  0091                     	;# 
  1440  0092                     	;# 
  1441  0092                     	;# 
  1442  0093                     	;# 
  1443  0094                     	;# 
  1444  0094                     	;# 
  1445  0095                     	;# 
  1446  0096                     	;# 
  1447  0096                     	;# 
  1448  0097                     	;# 
  1449  0098                     	;# 
  1450  0099                     	;# 
  1451  009A                     	;# 
  1452  009B                     	;# 
  1453  009B                     	;# 
  1454  009C                     	;# 
  1455  009D                     	;# 
  1456  009D                     	;# 
  1457  009E                     	;# 
  1458  009F                     	;# 
  1459  010C                     	;# 
  1460  010C                     	;# 
  1461  010D                     	;# 
  1462  010E                     	;# 
  1463  010F                     	;# 
  1464  010F                     	;# 
  1465  0110                     	;# 
  1466  0111                     	;# 
  1467  0112                     	;# 
  1468  0113                     	;# 
  1469  0114                     	;# 
  1470  0115                     	;# 
  1471  0116                     	;# 
  1472  0117                     	;# 
  1473  0118                     	;# 
  1474  0119                     	;# 
  1475  0119                     	;# 
  1476  0119                     	;# 
  1477  011A                     	;# 
  1478  011A                     	;# 
  1479  011A                     	;# 
  1480  011B                     	;# 
  1481  011B                     	;# 
  1482  011B                     	;# 
  1483  011B                     	;# 
  1484  011B                     	;# 
  1485  011C                     	;# 
  1486  011C                     	;# 
  1487  011C                     	;# 
  1488  011D                     	;# 
  1489  011D                     	;# 
  1490  011D                     	;# 
  1491  011E                     	;# 
  1492  011E                     	;# 
  1493  011E                     	;# 
  1494  011F                     	;# 
  1495  011F                     	;# 
  1496  011F                     	;# 
  1497  011F                     	;# 
  1498  011F                     	;# 
  1499  018C                     	;# 
  1500  018D                     	;# 
  1501  018E                     	;# 
  1502  018F                     	;# 
  1503  0190                     	;# 
  1504  0191                     	;# 
  1505  0192                     	;# 
  1506  020C                     	;# 
  1507  020D                     	;# 
  1508  020E                     	;# 
  1509  020E                     	;# 
  1510  020F                     	;# 
  1511  020F                     	;# 
  1512  0210                     	;# 
  1513  0210                     	;# 
  1514  0211                     	;# 
  1515  0211                     	;# 
  1516  0212                     	;# 
  1517  0213                     	;# 
  1518  0214                     	;# 
  1519  0214                     	;# 
  1520  0215                     	;# 
  1521  0215                     	;# 
  1522  0216                     	;# 
  1523  0216                     	;# 
  1524  0217                     	;# 
  1525  0217                     	;# 
  1526  0218                     	;# 
  1527  0219                     	;# 
  1528  021A                     	;# 
  1529  021A                     	;# 
  1530  021B                     	;# 
  1531  021B                     	;# 
  1532  021C                     	;# 
  1533  021C                     	;# 
  1534  021D                     	;# 
  1535  021D                     	;# 
  1536  021E                     	;# 
  1537  021F                     	;# 
  1538  028C                     	;# 
  1539  028C                     	;# 
  1540  028D                     	;# 
  1541  028D                     	;# 
  1542  028E                     	;# 
  1543  028F                     	;# 
  1544  0290                     	;# 
  1545  0291                     	;# 
  1546  0292                     	;# 
  1547  0292                     	;# 
  1548  0293                     	;# 
  1549  0293                     	;# 
  1550  0294                     	;# 
  1551  0295                     	;# 
  1552  0296                     	;# 
  1553  0297                     	;# 
  1554  0298                     	;# 
  1555  0298                     	;# 
  1556  0299                     	;# 
  1557  0299                     	;# 
  1558  029A                     	;# 
  1559  029B                     	;# 
  1560  029C                     	;# 
  1561  029D                     	;# 
  1562  029F                     	;# 
  1563  030C                     	;# 
  1564  030C                     	;# 
  1565  030D                     	;# 
  1566  030E                     	;# 
  1567  030F                     	;# 
  1568  0310                     	;# 
  1569  0310                     	;# 
  1570  0311                     	;# 
  1571  0312                     	;# 
  1572  0313                     	;# 
  1573  0314                     	;# 
  1574  0314                     	;# 
  1575  0315                     	;# 
  1576  0316                     	;# 
  1577  0317                     	;# 
  1578  0318                     	;# 
  1579  0318                     	;# 
  1580  0319                     	;# 
  1581  031A                     	;# 
  1582  031B                     	;# 
  1583  038C                     	;# 
  1584  038C                     	;# 
  1585  038D                     	;# 
  1586  038E                     	;# 
  1587  0390                     	;# 
  1588  0390                     	;# 
  1589  0391                     	;# 
  1590  0392                     	;# 
  1591  048C                     	;# 
  1592  048C                     	;# 
  1593  048D                     	;# 
  1594  048E                     	;# 
  1595  048F                     	;# 
  1596  048F                     	;# 
  1597  0490                     	;# 
  1598  0491                     	;# 
  1599  0492                     	;# 
  1600  0492                     	;# 
  1601  0493                     	;# 
  1602  0494                     	;# 
  1603  0495                     	;# 
  1604  0495                     	;# 
  1605  0496                     	;# 
  1606  0497                     	;# 
  1607  0498                     	;# 
  1608  0499                     	;# 
  1609  049A                     	;# 
  1610  049B                     	;# 
  1611  049C                     	;# 
  1612  049D                     	;# 
  1613  058C                     	;# 
  1614  058C                     	;# 
  1615  058D                     	;# 
  1616  058E                     	;# 
  1617  058F                     	;# 
  1618  058F                     	;# 
  1619  0590                     	;# 
  1620  0591                     	;# 
  1621  0592                     	;# 
  1622  0593                     	;# 
  1623  059C                     	;# 
  1624  059C                     	;# 
  1625  059D                     	;# 
  1626  059D                     	;# 
  1627  059E                     	;# 
  1628  059F                     	;# 
  1629  060C                     	;# 
  1630  060C                     	;# 
  1631  060D                     	;# 
  1632  060D                     	;# 
  1633  060E                     	;# 
  1634  060F                     	;# 
  1635  0610                     	;# 
  1636  0611                     	;# 
  1637  0612                     	;# 
  1638  0613                     	;# 
  1639  0614                     	;# 
  1640  0616                     	;# 
  1641  0616                     	;# 
  1642  0617                     	;# 
  1643  0617                     	;# 
  1644  0618                     	;# 
  1645  0619                     	;# 
  1646  061A                     	;# 
  1647  061B                     	;# 
  1648  061C                     	;# 
  1649  061D                     	;# 
  1650  061E                     	;# 
  1651  070C                     	;# 
  1652  070D                     	;# 
  1653  070E                     	;# 
  1654  070F                     	;# 
  1655  0710                     	;# 
  1656  0711                     	;# 
  1657  0712                     	;# 
  1658  0713                     	;# 
  1659  0714                     	;# 
  1660  0716                     	;# 
  1661  0717                     	;# 
  1662  0718                     	;# 
  1663  0719                     	;# 
  1664  071A                     	;# 
  1665  071B                     	;# 
  1666  071C                     	;# 
  1667  071D                     	;# 
  1668  071E                     	;# 
  1669  0796                     	;# 
  1670  0797                     	;# 
  1671  0798                     	;# 
  1672  0799                     	;# 
  1673  079A                     	;# 
  1674  079B                     	;# 
  1675  079C                     	;# 
  1676  079D                     	;# 
  1677  080C                     	;# 
  1678  080D                     	;# 
  1679  080E                     	;# 
  1680  080F                     	;# 
  1681  0810                     	;# 
  1682  0811                     	;# 
  1683  0812                     	;# 
  1684  0813                     	;# 
  1685  0814                     	;# 
  1686  081A                     	;# 
  1687  081A                     	;# 
  1688  081B                     	;# 
  1689  081C                     	;# 
  1690  081C                     	;# 
  1691  081D                     	;# 
  1692  081E                     	;# 
  1693  081F                     	;# 
  1694  088C                     	;# 
  1695  088D                     	;# 
  1696  088E                     	;# 
  1697  088F                     	;# 
  1698  0890                     	;# 
  1699  0891                     	;# 
  1700  0892                     	;# 
  1701  0893                     	;# 
  1702  0895                     	;# 
  1703  0896                     	;# 
  1704  0897                     	;# 
  1705  0898                     	;# 
  1706  0899                     	;# 
  1707  089A                     	;# 
  1708  089B                     	;# 
  1709  090C                     	;# 
  1710  090E                     	;# 
  1711  090F                     	;# 
  1712  091F                     	;# 
  1713  098F                     	;# 
  1714  098F                     	;# 
  1715  0990                     	;# 
  1716  0991                     	;# 
  1717  0992                     	;# 
  1718  0993                     	;# 
  1719  0994                     	;# 
  1720  0995                     	;# 
  1721  0996                     	;# 
  1722  0997                     	;# 
  1723  1E0F                     	;# 
  1724  1E10                     	;# 
  1725  1E11                     	;# 
  1726  1E12                     	;# 
  1727  1E13                     	;# 
  1728  1E14                     	;# 
  1729  1E15                     	;# 
  1730  1E16                     	;# 
  1731  1E17                     	;# 
  1732  1E18                     	;# 
  1733  1E19                     	;# 
  1734  1E1A                     	;# 
  1735  1E1B                     	;# 
  1736  1E1C                     	;# 
  1737  1E1D                     	;# 
  1738  1E1E                     	;# 
  1739  1E1F                     	;# 
  1740  1E20                     	;# 
  1741  1E21                     	;# 
  1742  1E22                     	;# 
  1743  1E23                     	;# 
  1744  1E24                     	;# 
  1745  1E25                     	;# 
  1746  1E26                     	;# 
  1747  1E27                     	;# 
  1748  1E28                     	;# 
  1749  1E29                     	;# 
  1750  1E2A                     	;# 
  1751  1E2B                     	;# 
  1752  1E2C                     	;# 
  1753  1E2D                     	;# 
  1754  1E2E                     	;# 
  1755  1E2F                     	;# 
  1756  1E30                     	;# 
  1757  1E31                     	;# 
  1758  1E32                     	;# 
  1759  1E33                     	;# 
  1760  1E34                     	;# 
  1761  1E35                     	;# 
  1762  1E36                     	;# 
  1763  1E37                     	;# 
  1764  1E8F                     	;# 
  1765  1E90                     	;# 
  1766  1E91                     	;# 
  1767  1E92                     	;# 
  1768  1E93                     	;# 
  1769  1E94                     	;# 
  1770  1E95                     	;# 
  1771  1E96                     	;# 
  1772  1E97                     	;# 
  1773  1E9C                     	;# 
  1774  1E9D                     	;# 
  1775  1E9E                     	;# 
  1776  1EA1                     	;# 
  1777  1EA2                     	;# 
  1778  1EA3                     	;# 
  1779  1EA4                     	;# 
  1780  1EA9                     	;# 
  1781  1EAA                     	;# 
  1782  1EB1                     	;# 
  1783  1EB2                     	;# 
  1784  1EB8                     	;# 
  1785  1EB9                     	;# 
  1786  1EBA                     	;# 
  1787  1EBB                     	;# 
  1788  1EBC                     	;# 
  1789  1EBD                     	;# 
  1790  1EBE                     	;# 
  1791  1EC3                     	;# 
  1792  1EC5                     	;# 
  1793  1EC6                     	;# 
  1794  1EC7                     	;# 
  1795  1ECB                     	;# 
  1796  1ECB                     	;# 
  1797  1ECB                     	;# 
  1798  1ECC                     	;# 
  1799  1ECC                     	;# 
  1800  1ECC                     	;# 
  1801  1F10                     	;# 
  1802  1F11                     	;# 
  1803  1F12                     	;# 
  1804  1F14                     	;# 
  1805  1F15                     	;# 
  1806  1F1C                     	;# 
  1807  1F1D                     	;# 
  1808  1F1E                     	;# 
  1809  1F1F                     	;# 
  1810  1F20                     	;# 
  1811  1F21                     	;# 
  1812  1F22                     	;# 
  1813  1F23                     	;# 
  1814  1F24                     	;# 
  1815  1F25                     	;# 
  1816  1F26                     	;# 
  1817  1F27                     	;# 
  1818  1F38                     	;# 
  1819  1F39                     	;# 
  1820  1F3A                     	;# 
  1821  1F3B                     	;# 
  1822  1F3C                     	;# 
  1823  1F3D                     	;# 
  1824  1F3E                     	;# 
  1825  1F3F                     	;# 
  1826  1F43                     	;# 
  1827  1F44                     	;# 
  1828  1F45                     	;# 
  1829  1F46                     	;# 
  1830  1F47                     	;# 
  1831  1F48                     	;# 
  1832  1F49                     	;# 
  1833  1F4A                     	;# 
  1834  1F4E                     	;# 
  1835  1F4F                     	;# 
  1836  1F50                     	;# 
  1837  1F51                     	;# 
  1838  1F52                     	;# 
  1839  1F53                     	;# 
  1840  1F54                     	;# 
  1841  1F55                     	;# 
  1842  1FE4                     	;# 
  1843  1FE5                     	;# 
  1844  1FE6                     	;# 
  1845  1FE7                     	;# 
  1846  1FE8                     	;# 
  1847  1FE8                     	;# 
  1848  1FE9                     	;# 
  1849  1FEA                     	;# 
  1850  1FEB                     	;# 
  1851  1FED                     	;# 
  1852  1FEE                     	;# 
  1853  1FEF                     	;# 
  1854  0000                     	;# 
  1855  0001                     	;# 
  1856  0002                     	;# 
  1857  0003                     	;# 
  1858  0004                     	;# 
  1859  0005                     	;# 
  1860  0006                     	;# 
  1861  0007                     	;# 
  1862  0008                     	;# 
  1863  0009                     	;# 
  1864  000A                     	;# 
  1865  000B                     	;# 
  1866  000C                     	;# 
  1867  000D                     	;# 
  1868  000E                     	;# 
  1869  0012                     	;# 
  1870  0013                     	;# 
  1871  0014                     	;# 
  1872  0018                     	;# 
  1873  0019                     	;# 
  1874  001A                     	;# 
  1875  008C                     	;# 
  1876  008C                     	;# 
  1877  008D                     	;# 
  1878  008E                     	;# 
  1879  008E                     	;# 
  1880  008F                     	;# 
  1881  0090                     	;# 
  1882  0090                     	;# 
  1883  0091                     	;# 
  1884  0092                     	;# 
  1885  0092                     	;# 
  1886  0093                     	;# 
  1887  0094                     	;# 
  1888  0094                     	;# 
  1889  0095                     	;# 
  1890  0096                     	;# 
  1891  0096                     	;# 
  1892  0097                     	;# 
  1893  0098                     	;# 
  1894  0099                     	;# 
  1895  009A                     	;# 
  1896  009B                     	;# 
  1897  009B                     	;# 
  1898  009C                     	;# 
  1899  009D                     	;# 
  1900  009D                     	;# 
  1901  009E                     	;# 
  1902  009F                     	;# 
  1903  010C                     	;# 
  1904  010C                     	;# 
  1905  010D                     	;# 
  1906  010E                     	;# 
  1907  010F                     	;# 
  1908  010F                     	;# 
  1909  0110                     	;# 
  1910  0111                     	;# 
  1911  0112                     	;# 
  1912  0113                     	;# 
  1913  0114                     	;# 
  1914  0115                     	;# 
  1915  0116                     	;# 
  1916  0117                     	;# 
  1917  0118                     	;# 
  1918  0119                     	;# 
  1919  0119                     	;# 
  1920  0119                     	;# 
  1921  011A                     	;# 
  1922  011A                     	;# 
  1923  011A                     	;# 
  1924  011B                     	;# 
  1925  011B                     	;# 
  1926  011B                     	;# 
  1927  011B                     	;# 
  1928  011B                     	;# 
  1929  011C                     	;# 
  1930  011C                     	;# 
  1931  011C                     	;# 
  1932  011D                     	;# 
  1933  011D                     	;# 
  1934  011D                     	;# 
  1935  011E                     	;# 
  1936  011E                     	;# 
  1937  011E                     	;# 
  1938  011F                     	;# 
  1939  011F                     	;# 
  1940  011F                     	;# 
  1941  011F                     	;# 
  1942  011F                     	;# 
  1943  018C                     	;# 
  1944  018D                     	;# 
  1945  018E                     	;# 
  1946  018F                     	;# 
  1947  0190                     	;# 
  1948  0191                     	;# 
  1949  0192                     	;# 
  1950  020C                     	;# 
  1951  020D                     	;# 
  1952  020E                     	;# 
  1953  020E                     	;# 
  1954  020F                     	;# 
  1955  020F                     	;# 
  1956  0210                     	;# 
  1957  0210                     	;# 
  1958  0211                     	;# 
  1959  0211                     	;# 
  1960  0212                     	;# 
  1961  0213                     	;# 
  1962  0214                     	;# 
  1963  0214                     	;# 
  1964  0215                     	;# 
  1965  0215                     	;# 
  1966  0216                     	;# 
  1967  0216                     	;# 
  1968  0217                     	;# 
  1969  0217                     	;# 
  1970  0218                     	;# 
  1971  0219                     	;# 
  1972  021A                     	;# 
  1973  021A                     	;# 
  1974  021B                     	;# 
  1975  021B                     	;# 
  1976  021C                     	;# 
  1977  021C                     	;# 
  1978  021D                     	;# 
  1979  021D                     	;# 
  1980  021E                     	;# 
  1981  021F                     	;# 
  1982  028C                     	;# 
  1983  028C                     	;# 
  1984  028D                     	;# 
  1985  028D                     	;# 
  1986  028E                     	;# 
  1987  028F                     	;# 
  1988  0290                     	;# 
  1989  0291                     	;# 
  1990  0292                     	;# 
  1991  0292                     	;# 
  1992  0293                     	;# 
  1993  0293                     	;# 
  1994  0294                     	;# 
  1995  0295                     	;# 
  1996  0296                     	;# 
  1997  0297                     	;# 
  1998  0298                     	;# 
  1999  0298                     	;# 
  2000  0299                     	;# 
  2001  0299                     	;# 
  2002  029A                     	;# 
  2003  029B                     	;# 
  2004  029C                     	;# 
  2005  029D                     	;# 
  2006  029F                     	;# 
  2007  030C                     	;# 
  2008  030C                     	;# 
  2009  030D                     	;# 
  2010  030E                     	;# 
  2011  030F                     	;# 
  2012  0310                     	;# 
  2013  0310                     	;# 
  2014  0311                     	;# 
  2015  0312                     	;# 
  2016  0313                     	;# 
  2017  0314                     	;# 
  2018  0314                     	;# 
  2019  0315                     	;# 
  2020  0316                     	;# 
  2021  0317                     	;# 
  2022  0318                     	;# 
  2023  0318                     	;# 
  2024  0319                     	;# 
  2025  031A                     	;# 
  2026  031B                     	;# 
  2027  038C                     	;# 
  2028  038C                     	;# 
  2029  038D                     	;# 
  2030  038E                     	;# 
  2031  0390                     	;# 
  2032  0390                     	;# 
  2033  0391                     	;# 
  2034  0392                     	;# 
  2035  048C                     	;# 
  2036  048C                     	;# 
  2037  048D                     	;# 
  2038  048E                     	;# 
  2039  048F                     	;# 
  2040  048F                     	;# 
  2041  0490                     	;# 
  2042  0491                     	;# 
  2043  0492                     	;# 
  2044  0492                     	;# 
  2045  0493                     	;# 
  2046  0494                     	;# 
  2047  0495                     	;# 
  2048  0495                     	;# 
  2049  0496                     	;# 
  2050  0497                     	;# 
  2051  0498                     	;# 
  2052  0499                     	;# 
  2053  049A                     	;# 
  2054  049B                     	;# 
  2055  049C                     	;# 
  2056  049D                     	;# 
  2057  058C                     	;# 
  2058  058C                     	;# 
  2059  058D                     	;# 
  2060  058E                     	;# 
  2061  058F                     	;# 
  2062  058F                     	;# 
  2063  0590                     	;# 
  2064  0591                     	;# 
  2065  0592                     	;# 
  2066  0593                     	;# 
  2067  059C                     	;# 
  2068  059C                     	;# 
  2069  059D                     	;# 
  2070  059D                     	;# 
  2071  059E                     	;# 
  2072  059F                     	;# 
  2073  060C                     	;# 
  2074  060C                     	;# 
  2075  060D                     	;# 
  2076  060D                     	;# 
  2077  060E                     	;# 
  2078  060F                     	;# 
  2079  0610                     	;# 
  2080  0611                     	;# 
  2081  0612                     	;# 
  2082  0613                     	;# 
  2083  0614                     	;# 
  2084  0616                     	;# 
  2085  0616                     	;# 
  2086  0617                     	;# 
  2087  0617                     	;# 
  2088  0618                     	;# 
  2089  0619                     	;# 
  2090  061A                     	;# 
  2091  061B                     	;# 
  2092  061C                     	;# 
  2093  061D                     	;# 
  2094  061E                     	;# 
  2095  070C                     	;# 
  2096  070D                     	;# 
  2097  070E                     	;# 
  2098  070F                     	;# 
  2099  0710                     	;# 
  2100  0711                     	;# 
  2101  0712                     	;# 
  2102  0713                     	;# 
  2103  0714                     	;# 
  2104  0716                     	;# 
  2105  0717                     	;# 
  2106  0718                     	;# 
  2107  0719                     	;# 
  2108  071A                     	;# 
  2109  071B                     	;# 
  2110  071C                     	;# 
  2111  071D                     	;# 
  2112  071E                     	;# 
  2113  0796                     	;# 
  2114  0797                     	;# 
  2115  0798                     	;# 
  2116  0799                     	;# 
  2117  079A                     	;# 
  2118  079B                     	;# 
  2119  079C                     	;# 
  2120  079D                     	;# 
  2121  080C                     	;# 
  2122  080D                     	;# 
  2123  080E                     	;# 
  2124  080F                     	;# 
  2125  0810                     	;# 
  2126  0811                     	;# 
  2127  0812                     	;# 
  2128  0813                     	;# 
  2129  0814                     	;# 
  2130  081A                     	;# 
  2131  081A                     	;# 
  2132  081B                     	;# 
  2133  081C                     	;# 
  2134  081C                     	;# 
  2135  081D                     	;# 
  2136  081E                     	;# 
  2137  081F                     	;# 
  2138  088C                     	;# 
  2139  088D                     	;# 
  2140  088E                     	;# 
  2141  088F                     	;# 
  2142  0890                     	;# 
  2143  0891                     	;# 
  2144  0892                     	;# 
  2145  0893                     	;# 
  2146  0895                     	;# 
  2147  0896                     	;# 
  2148  0897                     	;# 
  2149  0898                     	;# 
  2150  0899                     	;# 
  2151  089A                     	;# 
  2152  089B                     	;# 
  2153  090C                     	;# 
  2154  090E                     	;# 
  2155  090F                     	;# 
  2156  091F                     	;# 
  2157  098F                     	;# 
  2158  098F                     	;# 
  2159  0990                     	;# 
  2160  0991                     	;# 
  2161  0992                     	;# 
  2162  0993                     	;# 
  2163  0994                     	;# 
  2164  0995                     	;# 
  2165  0996                     	;# 
  2166  0997                     	;# 
  2167  1E0F                     	;# 
  2168  1E10                     	;# 
  2169  1E11                     	;# 
  2170  1E12                     	;# 
  2171  1E13                     	;# 
  2172  1E14                     	;# 
  2173  1E15                     	;# 
  2174  1E16                     	;# 
  2175  1E17                     	;# 
  2176  1E18                     	;# 
  2177  1E19                     	;# 
  2178  1E1A                     	;# 
  2179  1E1B                     	;# 
  2180  1E1C                     	;# 
  2181  1E1D                     	;# 
  2182  1E1E                     	;# 
  2183  1E1F                     	;# 
  2184  1E20                     	;# 
  2185  1E21                     	;# 
  2186  1E22                     	;# 
  2187  1E23                     	;# 
  2188  1E24                     	;# 
  2189  1E25                     	;# 
  2190  1E26                     	;# 
  2191  1E27                     	;# 
  2192  1E28                     	;# 
  2193  1E29                     	;# 
  2194  1E2A                     	;# 
  2195  1E2B                     	;# 
  2196  1E2C                     	;# 
  2197  1E2D                     	;# 
  2198  1E2E                     	;# 
  2199  1E2F                     	;# 
  2200  1E30                     	;# 
  2201  1E31                     	;# 
  2202  1E32                     	;# 
  2203  1E33                     	;# 
  2204  1E34                     	;# 
  2205  1E35                     	;# 
  2206  1E36                     	;# 
  2207  1E37                     	;# 
  2208  1E8F                     	;# 
  2209  1E90                     	;# 
  2210  1E91                     	;# 
  2211  1E92                     	;# 
  2212  1E93                     	;# 
  2213  1E94                     	;# 
  2214  1E95                     	;# 
  2215  1E96                     	;# 
  2216  1E97                     	;# 
  2217  1E9C                     	;# 
  2218  1E9D                     	;# 
  2219  1E9E                     	;# 
  2220  1EA1                     	;# 
  2221  1EA2                     	;# 
  2222  1EA3                     	;# 
  2223  1EA4                     	;# 
  2224  1EA9                     	;# 
  2225  1EAA                     	;# 
  2226  1EB1                     	;# 
  2227  1EB2                     	;# 
  2228  1EB8                     	;# 
  2229  1EB9                     	;# 
  2230  1EBA                     	;# 
  2231  1EBB                     	;# 
  2232  1EBC                     	;# 
  2233  1EBD                     	;# 
  2234  1EBE                     	;# 
  2235  1EC3                     	;# 
  2236  1EC5                     	;# 
  2237  1EC6                     	;# 
  2238  1EC7                     	;# 
  2239  1ECB                     	;# 
  2240  1ECB                     	;# 
  2241  1ECB                     	;# 
  2242  1ECC                     	;# 
  2243  1ECC                     	;# 
  2244  1ECC                     	;# 
  2245  1F10                     	;# 
  2246  1F11                     	;# 
  2247  1F12                     	;# 
  2248  1F14                     	;# 
  2249  1F15                     	;# 
  2250  1F1C                     	;# 
  2251  1F1D                     	;# 
  2252  1F1E                     	;# 
  2253  1F1F                     	;# 
  2254  1F20                     	;# 
  2255  1F21                     	;# 
  2256  1F22                     	;# 
  2257  1F23                     	;# 
  2258  1F24                     	;# 
  2259  1F25                     	;# 
  2260  1F26                     	;# 
  2261  1F27                     	;# 
  2262  1F38                     	;# 
  2263  1F39                     	;# 
  2264  1F3A                     	;# 
  2265  1F3B                     	;# 
  2266  1F3C                     	;# 
  2267  1F3D                     	;# 
  2268  1F3E                     	;# 
  2269  1F3F                     	;# 
  2270  1F43                     	;# 
  2271  1F44                     	;# 
  2272  1F45                     	;# 
  2273  1F46                     	;# 
  2274  1F47                     	;# 
  2275  1F48                     	;# 
  2276  1F49                     	;# 
  2277  1F4A                     	;# 
  2278  1F4E                     	;# 
  2279  1F4F                     	;# 
  2280  1F50                     	;# 
  2281  1F51                     	;# 
  2282  1F52                     	;# 
  2283  1F53                     	;# 
  2284  1F54                     	;# 
  2285  1F55                     	;# 
  2286  1FE4                     	;# 
  2287  1FE5                     	;# 
  2288  1FE6                     	;# 
  2289  1FE7                     	;# 
  2290  1FE8                     	;# 
  2291  1FE8                     	;# 
  2292  1FE9                     	;# 
  2293  1FEA                     	;# 
  2294  1FEB                     	;# 
  2295  1FED                     	;# 
  2296  1FEE                     	;# 
  2297  1FEF                     	;# 
  2298  0000                     	;# 
  2299  0001                     	;# 
  2300  0002                     	;# 
  2301  0003                     	;# 
  2302  0004                     	;# 
  2303  0005                     	;# 
  2304  0006                     	;# 
  2305  0007                     	;# 
  2306  0008                     	;# 
  2307  0009                     	;# 
  2308  000A                     	;# 
  2309  000B                     	;# 
  2310  000C                     	;# 
  2311  000D                     	;# 
  2312  000E                     	;# 
  2313  0012                     	;# 
  2314  0013                     	;# 
  2315  0014                     	;# 
  2316  0018                     	;# 
  2317  0019                     	;# 
  2318  001A                     	;# 
  2319  008C                     	;# 
  2320  008C                     	;# 
  2321  008D                     	;# 
  2322  008E                     	;# 
  2323  008E                     	;# 
  2324  008F                     	;# 
  2325  0090                     	;# 
  2326  0090                     	;# 
  2327  0091                     	;# 
  2328  0092                     	;# 
  2329  0092                     	;# 
  2330  0093                     	;# 
  2331  0094                     	;# 
  2332  0094                     	;# 
  2333  0095                     	;# 
  2334  0096                     	;# 
  2335  0096                     	;# 
  2336  0097                     	;# 
  2337  0098                     	;# 
  2338  0099                     	;# 
  2339  009A                     	;# 
  2340  009B                     	;# 
  2341  009B                     	;# 
  2342  009C                     	;# 
  2343  009D                     	;# 
  2344  009D                     	;# 
  2345  009E                     	;# 
  2346  009F                     	;# 
  2347  010C                     	;# 
  2348  010C                     	;# 
  2349  010D                     	;# 
  2350  010E                     	;# 
  2351  010F                     	;# 
  2352  010F                     	;# 
  2353  0110                     	;# 
  2354  0111                     	;# 
  2355  0112                     	;# 
  2356  0113                     	;# 
  2357  0114                     	;# 
  2358  0115                     	;# 
  2359  0116                     	;# 
  2360  0117                     	;# 
  2361  0118                     	;# 
  2362  0119                     	;# 
  2363  0119                     	;# 
  2364  0119                     	;# 
  2365  011A                     	;# 
  2366  011A                     	;# 
  2367  011A                     	;# 
  2368  011B                     	;# 
  2369  011B                     	;# 
  2370  011B                     	;# 
  2371  011B                     	;# 
  2372  011B                     	;# 
  2373  011C                     	;# 
  2374  011C                     	;# 
  2375  011C                     	;# 
  2376  011D                     	;# 
  2377  011D                     	;# 
  2378  011D                     	;# 
  2379  011E                     	;# 
  2380  011E                     	;# 
  2381  011E                     	;# 
  2382  011F                     	;# 
  2383  011F                     	;# 
  2384  011F                     	;# 
  2385  011F                     	;# 
  2386  011F                     	;# 
  2387  018C                     	;# 
  2388  018D                     	;# 
  2389  018E                     	;# 
  2390  018F                     	;# 
  2391  0190                     	;# 
  2392  0191                     	;# 
  2393  0192                     	;# 
  2394  020C                     	;# 
  2395  020D                     	;# 
  2396  020E                     	;# 
  2397  020E                     	;# 
  2398  020F                     	;# 
  2399  020F                     	;# 
  2400  0210                     	;# 
  2401  0210                     	;# 
  2402  0211                     	;# 
  2403  0211                     	;# 
  2404  0212                     	;# 
  2405  0213                     	;# 
  2406  0214                     	;# 
  2407  0214                     	;# 
  2408  0215                     	;# 
  2409  0215                     	;# 
  2410  0216                     	;# 
  2411  0216                     	;# 
  2412  0217                     	;# 
  2413  0217                     	;# 
  2414  0218                     	;# 
  2415  0219                     	;# 
  2416  021A                     	;# 
  2417  021A                     	;# 
  2418  021B                     	;# 
  2419  021B                     	;# 
  2420  021C                     	;# 
  2421  021C                     	;# 
  2422  021D                     	;# 
  2423  021D                     	;# 
  2424  021E                     	;# 
  2425  021F                     	;# 
  2426  028C                     	;# 
  2427  028C                     	;# 
  2428  028D                     	;# 
  2429  028D                     	;# 
  2430  028E                     	;# 
  2431  028F                     	;# 
  2432  0290                     	;# 
  2433  0291                     	;# 
  2434  0292                     	;# 
  2435  0292                     	;# 
  2436  0293                     	;# 
  2437  0293                     	;# 
  2438  0294                     	;# 
  2439  0295                     	;# 
  2440  0296                     	;# 
  2441  0297                     	;# 
  2442  0298                     	;# 
  2443  0298                     	;# 
  2444  0299                     	;# 
  2445  0299                     	;# 
  2446  029A                     	;# 
  2447  029B                     	;# 
  2448  029C                     	;# 
  2449  029D                     	;# 
  2450  029F                     	;# 
  2451  030C                     	;# 
  2452  030C                     	;# 
  2453  030D                     	;# 
  2454  030E                     	;# 
  2455  030F                     	;# 
  2456  0310                     	;# 
  2457  0310                     	;# 
  2458  0311                     	;# 
  2459  0312                     	;# 
  2460  0313                     	;# 
  2461  0314                     	;# 
  2462  0314                     	;# 
  2463  0315                     	;# 
  2464  0316                     	;# 
  2465  0317                     	;# 
  2466  0318                     	;# 
  2467  0318                     	;# 
  2468  0319                     	;# 
  2469  031A                     	;# 
  2470  031B                     	;# 
  2471  038C                     	;# 
  2472  038C                     	;# 
  2473  038D                     	;# 
  2474  038E                     	;# 
  2475  0390                     	;# 
  2476  0390                     	;# 
  2477  0391                     	;# 
  2478  0392                     	;# 
  2479  048C                     	;# 
  2480  048C                     	;# 
  2481  048D                     	;# 
  2482  048E                     	;# 
  2483  048F                     	;# 
  2484  048F                     	;# 
  2485  0490                     	;# 
  2486  0491                     	;# 
  2487  0492                     	;# 
  2488  0492                     	;# 
  2489  0493                     	;# 
  2490  0494                     	;# 
  2491  0495                     	;# 
  2492  0495                     	;# 
  2493  0496                     	;# 
  2494  0497                     	;# 
  2495  0498                     	;# 
  2496  0499                     	;# 
  2497  049A                     	;# 
  2498  049B                     	;# 
  2499  049C                     	;# 
  2500  049D                     	;# 
  2501  058C                     	;# 
  2502  058C                     	;# 
  2503  058D                     	;# 
  2504  058E                     	;# 
  2505  058F                     	;# 
  2506  058F                     	;# 
  2507  0590                     	;# 
  2508  0591                     	;# 
  2509  0592                     	;# 
  2510  0593                     	;# 
  2511  059C                     	;# 
  2512  059C                     	;# 
  2513  059D                     	;# 
  2514  059D                     	;# 
  2515  059E                     	;# 
  2516  059F                     	;# 
  2517  060C                     	;# 
  2518  060C                     	;# 
  2519  060D                     	;# 
  2520  060D                     	;# 
  2521  060E                     	;# 
  2522  060F                     	;# 
  2523  0610                     	;# 
  2524  0611                     	;# 
  2525  0612                     	;# 
  2526  0613                     	;# 
  2527  0614                     	;# 
  2528  0616                     	;# 
  2529  0616                     	;# 
  2530  0617                     	;# 
  2531  0617                     	;# 
  2532  0618                     	;# 
  2533  0619                     	;# 
  2534  061A                     	;# 
  2535  061B                     	;# 
  2536  061C                     	;# 
  2537  061D                     	;# 
  2538  061E                     	;# 
  2539  070C                     	;# 
  2540  070D                     	;# 
  2541  070E                     	;# 
  2542  070F                     	;# 
  2543  0710                     	;# 
  2544  0711                     	;# 
  2545  0712                     	;# 
  2546  0713                     	;# 
  2547  0714                     	;# 
  2548  0716                     	;# 
  2549  0717                     	;# 
  2550  0718                     	;# 
  2551  0719                     	;# 
  2552  071A                     	;# 
  2553  071B                     	;# 
  2554  071C                     	;# 
  2555  071D                     	;# 
  2556  071E                     	;# 
  2557  0796                     	;# 
  2558  0797                     	;# 
  2559  0798                     	;# 
  2560  0799                     	;# 
  2561  079A                     	;# 
  2562  079B                     	;# 
  2563  079C                     	;# 
  2564  079D                     	;# 
  2565  080C                     	;# 
  2566  080D                     	;# 
  2567  080E                     	;# 
  2568  080F                     	;# 
  2569  0810                     	;# 
  2570  0811                     	;# 
  2571  0812                     	;# 
  2572  0813                     	;# 
  2573  0814                     	;# 
  2574  081A                     	;# 
  2575  081A                     	;# 
  2576  081B                     	;# 
  2577  081C                     	;# 
  2578  081C                     	;# 
  2579  081D                     	;# 
  2580  081E                     	;# 
  2581  081F                     	;# 
  2582  088C                     	;# 
  2583  088D                     	;# 
  2584  088E                     	;# 
  2585  088F                     	;# 
  2586  0890                     	;# 
  2587  0891                     	;# 
  2588  0892                     	;# 
  2589  0893                     	;# 
  2590  0895                     	;# 
  2591  0896                     	;# 
  2592  0897                     	;# 
  2593  0898                     	;# 
  2594  0899                     	;# 
  2595  089A                     	;# 
  2596  089B                     	;# 
  2597  090C                     	;# 
  2598  090E                     	;# 
  2599  090F                     	;# 
  2600  091F                     	;# 
  2601  098F                     	;# 
  2602  098F                     	;# 
  2603  0990                     	;# 
  2604  0991                     	;# 
  2605  0992                     	;# 
  2606  0993                     	;# 
  2607  0994                     	;# 
  2608  0995                     	;# 
  2609  0996                     	;# 
  2610  0997                     	;# 
  2611  1E0F                     	;# 
  2612  1E10                     	;# 
  2613  1E11                     	;# 
  2614  1E12                     	;# 
  2615  1E13                     	;# 
  2616  1E14                     	;# 
  2617  1E15                     	;# 
  2618  1E16                     	;# 
  2619  1E17                     	;# 
  2620  1E18                     	;# 
  2621  1E19                     	;# 
  2622  1E1A                     	;# 
  2623  1E1B                     	;# 
  2624  1E1C                     	;# 
  2625  1E1D                     	;# 
  2626  1E1E                     	;# 
  2627  1E1F                     	;# 
  2628  1E20                     	;# 
  2629  1E21                     	;# 
  2630  1E22                     	;# 
  2631  1E23                     	;# 
  2632  1E24                     	;# 
  2633  1E25                     	;# 
  2634  1E26                     	;# 
  2635  1E27                     	;# 
  2636  1E28                     	;# 
  2637  1E29                     	;# 
  2638  1E2A                     	;# 
  2639  1E2B                     	;# 
  2640  1E2C                     	;# 
  2641  1E2D                     	;# 
  2642  1E2E                     	;# 
  2643  1E2F                     	;# 
  2644  1E30                     	;# 
  2645  1E31                     	;# 
  2646  1E32                     	;# 
  2647  1E33                     	;# 
  2648  1E34                     	;# 
  2649  1E35                     	;# 
  2650  1E36                     	;# 
  2651  1E37                     	;# 
  2652  1E8F                     	;# 
  2653  1E90                     	;# 
  2654  1E91                     	;# 
  2655  1E92                     	;# 
  2656  1E93                     	;# 
  2657  1E94                     	;# 
  2658  1E95                     	;# 
  2659  1E96                     	;# 
  2660  1E97                     	;# 
  2661  1E9C                     	;# 
  2662  1E9D                     	;# 
  2663  1E9E                     	;# 
  2664  1EA1                     	;# 
  2665  1EA2                     	;# 
  2666  1EA3                     	;# 
  2667  1EA4                     	;# 
  2668  1EA9                     	;# 
  2669  1EAA                     	;# 
  2670  1EB1                     	;# 
  2671  1EB2                     	;# 
  2672  1EB8                     	;# 
  2673  1EB9                     	;# 
  2674  1EBA                     	;# 
  2675  1EBB                     	;# 
  2676  1EBC                     	;# 
  2677  1EBD                     	;# 
  2678  1EBE                     	;# 
  2679  1EC3                     	;# 
  2680  1EC5                     	;# 
  2681  1EC6                     	;# 
  2682  1EC7                     	;# 
  2683  1ECB                     	;# 
  2684  1ECB                     	;# 
  2685  1ECB                     	;# 
  2686  1ECC                     	;# 
  2687  1ECC                     	;# 
  2688  1ECC                     	;# 
  2689  1F10                     	;# 
  2690  1F11                     	;# 
  2691  1F12                     	;# 
  2692  1F14                     	;# 
  2693  1F15                     	;# 
  2694  1F1C                     	;# 
  2695  1F1D                     	;# 
  2696  1F1E                     	;# 
  2697  1F1F                     	;# 
  2698  1F20                     	;# 
  2699  1F21                     	;# 
  2700  1F22                     	;# 
  2701  1F23                     	;# 
  2702  1F24                     	;# 
  2703  1F25                     	;# 
  2704  1F26                     	;# 
  2705  1F27                     	;# 
  2706  1F38                     	;# 
  2707  1F39                     	;# 
  2708  1F3A                     	;# 
  2709  1F3B                     	;# 
  2710  1F3C                     	;# 
  2711  1F3D                     	;# 
  2712  1F3E                     	;# 
  2713  1F3F                     	;# 
  2714  1F43                     	;# 
  2715  1F44                     	;# 
  2716  1F45                     	;# 
  2717  1F46                     	;# 
  2718  1F47                     	;# 
  2719  1F48                     	;# 
  2720  1F49                     	;# 
  2721  1F4A                     	;# 
  2722  1F4E                     	;# 
  2723  1F4F                     	;# 
  2724  1F50                     	;# 
  2725  1F51                     	;# 
  2726  1F52                     	;# 
  2727  1F53                     	;# 
  2728  1F54                     	;# 
  2729  1F55                     	;# 
  2730  1FE4                     	;# 
  2731  1FE5                     	;# 
  2732  1FE6                     	;# 
  2733  1FE7                     	;# 
  2734  1FE8                     	;# 
  2735  1FE8                     	;# 
  2736  1FE9                     	;# 
  2737  1FEA                     	;# 
  2738  1FEB                     	;# 
  2739  1FED                     	;# 
  2740  1FEE                     	;# 
  2741  1FEF                     	;# 
  2742                           
  2743                           	psect	idataBANK1
  2744  01BE                     __pidataBANK1:
  2745                           
  2746                           ;initializer for _rx_reg_50
  2747  01BE  3430               	retlw	48
  2748  01BF  3400               	retlw	0
  2749  01C0  3437               	retlw	55
  2750  01C1  3400               	retlw	0
  2751  01C2  34C9               	retlw	201
  2752  01C3  3480               	retlw	128
  2753  01C4  3400               	retlw	0
  2754  01C5  3408               	retlw	8
  2755  01C6  3442               	retlw	66
  2756  01C7  344E               	retlw	78
  2757  01C8  3400               	retlw	0
  2758  01C9  3400               	retlw	0
  2759  01CA  34B3               	retlw	179
  2760  01CB  3404               	retlw	4
  2761  01CC  3400               	retlw	0
  2762  01CD  3400               	retlw	0
  2763  01CE  342C               	retlw	44
  2764  01CF  3480               	retlw	128
  2765  01D0  34AC               	retlw	172
  2766  01D1  3400               	retlw	0
  2767  01D2  3405               	retlw	5
  2768  01D3  3400               	retlw	0
  2769  01D4  3458               	retlw	88
  2770  01D5  3400               	retlw	0
  2771                           
  2772                           ;initializer for _tx_reg_28
  2773  01D6  3458               	retlw	88
  2774  01D7  3401               	retlw	1
  2775  01D8  342F               	retlw	47
  2776  01D9  3400               	retlw	0
  2777  01DA  3491               	retlw	145
  2778  01DB  3481               	retlw	129
  2779  01DC  3400               	retlw	0
  2780  01DD  3408               	retlw	8
  2781  01DE  3442               	retlw	66
  2782  01DF  345E               	retlw	94
  2783  01E0  3400               	retlw	0
  2784  01E1  3418               	retlw	24
  2785  01E2  34B3               	retlw	179
  2786  01E3  3404               	retlw	4
  2787  01E4  3400               	retlw	0
  2788  01E5  3400               	retlw	0
  2789  01E6  343C               	retlw	60
  2790  01E7  3482               	retlw	130
  2791  01E8  348C               	retlw	140
  2792  01E9  3400               	retlw	0
  2793  01EA  3405               	retlw	5
  2794  01EB  3400               	retlw	0
  2795  01EC  3458               	retlw	88
  2796  01ED  3400               	retlw	0
  2797                           
  2798                           ;initializer for _rx_reg_28
  2799  01EE  3498               	retlw	152
  2800  01EF  3480               	retlw	128
  2801  01F0  3438               	retlw	56
  2802  01F1  3400               	retlw	0
  2803  01F2  34C9               	retlw	201
  2804  01F3  3480               	retlw	128
  2805  01F4  3400               	retlw	0
  2806  01F5  3408               	retlw	8
  2807  01F6  3442               	retlw	66
  2808  01F7  344E               	retlw	78
  2809  01F8  3400               	retlw	0
  2810  01F9  3400               	retlw	0
  2811  01FA  34B3               	retlw	179
  2812  01FB  3404               	retlw	4
  2813  01FC  3400               	retlw	0
  2814  01FD  3400               	retlw	0
  2815  01FE  342C               	retlw	44
  2816  01FF  3480               	retlw	128
  2817  0200  34AC               	retlw	172
  2818  0201  3400               	retlw	0
  2819  0202  3405               	retlw	5
  2820  0203  3400               	retlw	0
  2821  0204  3458               	retlw	88
  2822  0205  3400               	retlw	0
  2823                           
  2824                           	psect	idataBANK2
  2825  0206                     __pidataBANK2:
  2826                           
  2827                           ;initializer for _tx_reg_144
  2828  0206  3458               	retlw	88
  2829  0207  3400               	retlw	0
  2830  0208  342D               	retlw	45
  2831  0209  3400               	retlw	0
  2832  020A  3491               	retlw	145
  2833  020B  3481               	retlw	129
  2834  020C  3400               	retlw	0
  2835  020D  3408               	retlw	8
  2836  020E  3442               	retlw	66
  2837  020F  345E               	retlw	94
  2838  0210  3400               	retlw	0
  2839  0211  3418               	retlw	24
  2840  0212  34B3               	retlw	179
  2841  0213  3404               	retlw	4
  2842  0214  3400               	retlw	0
  2843  0215  3400               	retlw	0
  2844  0216  343C               	retlw	60
  2845  0217  3482               	retlw	130
  2846  0218  348C               	retlw	140
  2847  0219  3400               	retlw	0
  2848  021A  3405               	retlw	5
  2849  021B  3400               	retlw	0
  2850  021C  3458               	retlw	88
  2851  021D  3400               	retlw	0
  2852                           
  2853                           ;initializer for _rx_reg_144
  2854  021E  3408               	retlw	8
  2855  021F  3480               	retlw	128
  2856  0220  342F               	retlw	47
  2857  0221  3400               	retlw	0
  2858  0222  3429               	retlw	41
  2859  0223  3480               	retlw	128
  2860  0224  3400               	retlw	0
  2861  0225  3408               	retlw	8
  2862  0226  3442               	retlw	66
  2863  0227  344E               	retlw	78
  2864  0228  3400               	retlw	0
  2865  0229  3400               	retlw	0
  2866  022A  34B3               	retlw	179
  2867  022B  3404               	retlw	4
  2868  022C  3400               	retlw	0
  2869  022D  3400               	retlw	0
  2870  022E  342C               	retlw	44
  2871  022F  3480               	retlw	128
  2872  0230  34AC               	retlw	172
  2873  0231  3400               	retlw	0
  2874  0232  3405               	retlw	5
  2875  0233  3400               	retlw	0
  2876  0234  3458               	retlw	88
  2877  0235  3400               	retlw	0
  2878                           
  2879                           ;initializer for _tx_reg_50
  2880  0236  3488               	retlw	136
  2881  0237  3481               	retlw	129
  2882  0238  342E               	retlw	46
  2883  0239  3400               	retlw	0
  2884  023A  3491               	retlw	145
  2885  023B  3481               	retlw	129
  2886  023C  3400               	retlw	0
  2887  023D  3408               	retlw	8
  2888  023E  3442               	retlw	66
  2889  023F  345E               	retlw	94
  2890  0240  3400               	retlw	0
  2891  0241  3418               	retlw	24
  2892  0242  34B3               	retlw	179
  2893  0243  3404               	retlw	4
  2894  0244  3400               	retlw	0
  2895  0245  3400               	retlw	0
  2896  0246  343C               	retlw	60
  2897  0247  3482               	retlw	130
  2898  0248  348C               	retlw	140
  2899  0249  3400               	retlw	0
  2900  024A  3405               	retlw	5
  2901  024B  3400               	retlw	0
  2902  024C  3458               	retlw	88
  2903  024D  3400               	retlw	0
  2904                           
  2905                           	psect	nvCOMMON
  2906  0079                     __pnvCOMMON:
  2907  0079                     _IOCAF5_InterruptHandler:
  2908  0079                     	ds	2
  2909  000E                     _PORTCbits	set	14
  2910  000E                     _PORTC	set	14
  2911  001A                     _LATCbits	set	26
  2912  000C                     _PORTAbits	set	12
  2913  0018                     _LATAbits	set	24
  2914  0019                     _LATBbits	set	25
  2915  0014                     _TRISC	set	20
  2916  0013                     _TRISB	set	19
  2917  0012                     _TRISA	set	18
  2918  001A                     _LATC	set	26
  2919  0019                     _LATB	set	25
  2920  0018                     _LATA	set	24
  2921  000B                     _INTCONbits	set	11
  2922  070C                     _PIR0bits	set	1804
  2923  0716                     _PIE0bits	set	1814
  2924  079D                     _PMD7	set	1949
  2925  079C                     _PMD6	set	1948
  2926  079B                     _PMD5	set	1947
  2927  079A                     _PMD4	set	1946
  2928  0799                     _PMD3	set	1945
  2929  0798                     _PMD2	set	1944
  2930  0797                     _PMD1	set	1943
  2931  0796                     _PMD0	set	1942
  2932  0892                     _OSCTUNE	set	2194
  2933  0893                     _OSCFRQ	set	2195
  2934  0891                     _OSCEN	set	2193
  2935  088F                     _OSCCON3	set	2191
  2936  088D                     _OSCCON1	set	2189
  2937  1F3D                     _IOCAPbits	set	7997
  2938  1F3E                     _IOCANbits	set	7998
  2939  1F3F                     _IOCAFbits	set	7999
  2940  1F52                     _INLVLC	set	8018
  2941  1F47                     _INLVLB	set	8007
  2942  1F3C                     _INLVLA	set	7996
  2943  1F51                     _SLRCONC	set	8017
  2944  1F46                     _SLRCONB	set	8006
  2945  1F3B                     _SLRCONA	set	7995
  2946  1F50                     _ODCONC	set	8016
  2947  1F45                     _ODCONB	set	8005
  2948  1F3A                     _ODCONA	set	7994
  2949  1F4F                     _WPUC	set	8015
  2950  1F39                     _WPUA	set	7993
  2951  1F44                     _WPUB	set	8004
  2952  1F38                     _ANSELA	set	7992
  2953  1F43                     _ANSELB	set	8003
  2954  1F4E                     _ANSELC	set	8014
  2955                           
  2956                           	psect	cinit
  2957  0016                     start_initialization:	
  2958                           ; #config settings
  2959                           
  2960  0016                     __initialization:
  2961                           
  2962                           ; Initialize objects allocated to BANK1
  2963  0016  30BE               	movlw	low __pidataBANK1
  2964  0017  0084               	movwf	4
  2965  0018  3081               	movlw	(high __pidataBANK1)| (0+128)
  2966  0019  0085               	movwf	5
  2967  001A  30A0               	movlw	low __pdataBANK1
  2968  001B  0086               	movwf	6
  2969  001C  3000               	movlw	high __pdataBANK1
  2970  001D  0087               	movwf	7
  2971  001E  3048               	movlw	72
  2972  001F  3184  2434  3180   	fcall	init_ram
  2973                           
  2974                           ; Initialize objects allocated to BANK2
  2975  0022  3006               	movlw	low __pidataBANK2
  2976  0023  0084               	movwf	4
  2977  0024  3082               	movlw	(high __pidataBANK2)| (0+128)
  2978  0025  0085               	movwf	5
  2979  0026  3020               	movlw	low __pdataBANK2
  2980  0027  0086               	movwf	6
  2981  0028  3001               	movlw	high __pdataBANK2
  2982  0029  0087               	movwf	7
  2983  002A  3048               	movlw	72
  2984  002B  3184  2434  3180   	fcall	init_ram
  2985                           
  2986                           ; Clear objects allocated to COMMON
  2987  002E  01FB               	clrf	__pbssCOMMON& (0+127)
  2988  002F  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
  2989                           
  2990                           ; Clear objects allocated to BANK0
  2991  0030  3020               	movlw	low __pbssBANK0
  2992  0031  0084               	movwf	4
  2993  0032  3000               	movlw	high __pbssBANK0
  2994  0033  0085               	movwf	5
  2995  0034  3032               	movlw	50
  2996  0035  3184  243A  3180   	fcall	clear_ram0
  2997  0038                     end_of_initialization:	
  2998                           ;End of C runtime variable initialization code
  2999                           
  3000  0038                     __end_of__initialization:
  3001  0038  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  3002  0039  0140               	movlb	0
  3003  003A  3183  2BCE         	ljmp	_main	;jump to C main() function
  3004                           
  3005                           	psect	bssCOMMON
  3006  007B                     __pbssCOMMON:
  3007  007B                     _G_IF_SEL_STATE:
  3008  007B                     	ds	1
  3009  007C                     _G_PTT_STATE:
  3010  007C                     	ds	1
  3011                           
  3012                           	psect	bssBANK0
  3013  0020                     __pbssBANK0:
  3014  0020                     _tx_reg:
  3015  0020                     	ds	24
  3016  0038                     _rx_reg:
  3017  0038                     	ds	24
  3018  0050                     _G_PORTC_OLD:
  3019  0050                     	ds	1
  3020  0051                     _G_STBY_STATE:
  3021  0051                     	ds	1
  3022                           
  3023                           	psect	dataBANK1
  3024  00A0                     __pdataBANK1:
  3025  00A0                     _rx_reg_50:
  3026  00A0                     	ds	24
  3027  00B8                     _tx_reg_28:
  3028  00B8                     	ds	24
  3029  00D0                     _rx_reg_28:
  3030  00D0                     	ds	24
  3031                           
  3032                           	psect	dataBANK2
  3033  0120                     __pdataBANK2:
  3034  0120                     _tx_reg_144:
  3035  0120                     	ds	24
  3036  0138                     _rx_reg_144:
  3037  0138                     	ds	24
  3038  0150                     _tx_reg_50:
  3039  0150                     	ds	24
  3040                           
  3041                           	psect	inittext
  3042  0434                     init_ram:
  3043  0434  00FE               	movwf	btemp
  3044  0435                     initloop:
  3045  0435  0012               	moviw fsr0++
  3046  0436  001E               	movwi fsr1++
  3047  0437  0BFE               	decfsz	btemp,f
  3048  0438  2C35               	goto	initloop
  3049  0439  3400               	retlw	0
  3050                           
  3051                           	psect	clrtext
  3052  043A                     clear_ram0:	
  3053                           ;	Called with FSR0 containing the base address, and
  3054                           ;	WREG with the size to clear
  3055                           
  3056  043A  0064               	clrwdt	;clear the watchdog before getting into this loop
  3057  043B                     clrloop0:
  3058  043B  0180               	clrf	0	;clear RAM location pointed to by FSR
  3059  043C  3101               	addfsr 0,1
  3060  043D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  3061  043E  2C3B               	goto	clrloop0	;have we reached the end yet?
  3062  043F  3400               	retlw	0	;all done for this memory range, return
  3063                           
  3064                           	psect	cstackCOMMON
  3065  0070                     __pcstackCOMMON:
  3066  0070                     ?_PMD_Initialize:
  3067  0070                     ??_PMD_Initialize:	
  3068                           ; 1 bytes @ 0x0
  3069                           
  3070  0070                     ?_PIN_MANAGER_Initialize:	
  3071                           ; 1 bytes @ 0x0
  3072                           
  3073  0070                     ?_OSCILLATOR_Initialize:	
  3074                           ; 1 bytes @ 0x0
  3075                           
  3076  0070                     ??_OSCILLATOR_Initialize:	
  3077                           ; 1 bytes @ 0x0
  3078                           
  3079  0070                     ?_PIN_MANAGER_IOC:	
  3080                           ; 1 bytes @ 0x0
  3081                           
  3082  0070                     ??_PIN_MANAGER_IOC:	
  3083                           ; 1 bytes @ 0x0
  3084                           
  3085  0070                     ?_app_setup:	
  3086                           ; 1 bytes @ 0x0
  3087                           
  3088  0070                     ??_app_setup:	
  3089                           ; 1 bytes @ 0x0
  3090                           
  3091  0070                     ?_CheckIF:	
  3092                           ; 1 bytes @ 0x0
  3093                           
  3094  0070                     ?_CheckStandBy:	
  3095                           ; 1 bytes @ 0x0
  3096                           
  3097  0070                     ?_CheckPTT:	
  3098                           ; 1 bytes @ 0x0
  3099                           
  3100  0070                     ??_CheckPTT:	
  3101                           ; 1 bytes @ 0x0
  3102                           
  3103  0070                     ?_IOCAF5_SetInterruptHandler:	
  3104                           ; 1 bytes @ 0x0
  3105                           
  3106  0070                     ?_IOCAF5_DefaultInterruptHandler:	
  3107                           ; 1 bytes @ 0x0
  3108                           
  3109  0070                     ??_IOCAF5_DefaultInterruptHandler:	
  3110                           ; 1 bytes @ 0x0
  3111                           
  3112  0070                     ?_IOCAF5_ISR:	
  3113                           ; 1 bytes @ 0x0
  3114                           
  3115  0070                     ??_IOCAF5_ISR:	
  3116                           ; 1 bytes @ 0x0
  3117                           
  3118  0070                     ?_SYSTEM_Initialize:	
  3119                           ; 1 bytes @ 0x0
  3120                           
  3121  0070                     ?_INTERRUPT_InterruptManager:	
  3122                           ; 1 bytes @ 0x0
  3123                           
  3124  0070                     ??_INTERRUPT_InterruptManager:	
  3125                           ; 1 bytes @ 0x0
  3126                           
  3127  0070                     ?_main:	
  3128                           ; 1 bytes @ 0x0
  3129                           
  3130  0070                     ?_blink_status_rx:	
  3131                           ; 1 bytes @ 0x0
  3132                           
  3133  0070                     ?_blink_status_tx:	
  3134                           ; 1 bytes @ 0x0
  3135                           
  3136  0070                     ?_SetRelay_Rx:	
  3137                           ; 1 bytes @ 0x0
  3138                           
  3139  0070                     ??_SetRelay_Rx:	
  3140                           ; 1 bytes @ 0x0
  3141                           
  3142  0070                     ?_SetRelay_Tx:	
  3143                           ; 1 bytes @ 0x0
  3144                           
  3145  0070                     ??_SetRelay_Tx:	
  3146                           ; 1 bytes @ 0x0
  3147                           
  3148  0070                     ?_SetTxInhibit_ON:	
  3149                           ; 1 bytes @ 0x0
  3150                           
  3151  0070                     ??_SetTxInhibit_ON:	
  3152                           ; 1 bytes @ 0x0
  3153                           
  3154  0070                     ?_SetTxInhibit_OFF:	
  3155                           ; 1 bytes @ 0x0
  3156                           
  3157  0070                     ??_SetTxInhibit_OFF:	
  3158                           ; 1 bytes @ 0x0
  3159                           
  3160  0070                     ?_WriteRegister32:	
  3161                           ; 1 bytes @ 0x0
  3162                           
  3163  0070                     ?_SetADF4351_Rx:	
  3164                           ; 1 bytes @ 0x0
  3165                           
  3166  0070                     ?_SetADF4351_Tx:	
  3167                           ; 1 bytes @ 0x0
  3168                           
  3169  0070                     ?_SwitchToRx:	
  3170                           ; 1 bytes @ 0x0
  3171                           
  3172  0070                     ??_SwitchToRx:	
  3173                           ; 1 bytes @ 0x0
  3174                           
  3175  0070                     ?_SwitchToTx:	
  3176                           ; 1 bytes @ 0x0
  3177                           
  3178  0070                     ??_SwitchToTx:	
  3179                           ; 1 bytes @ 0x0
  3180                           
  3181  0070                     IOCAF5_SetInterruptHandler@InterruptHandler:	
  3182                           ; 1 bytes @ 0x0
  3183                           
  3184  0070                     blink_status_rx@count_val:	
  3185                           ; 2 bytes @ 0x0
  3186                           
  3187  0070                     blink_status_tx@count_val:	
  3188                           ; 2 bytes @ 0x0
  3189                           
  3190  0070                     WriteRegister32@value:	
  3191                           ; 2 bytes @ 0x0
  3192                           
  3193                           
  3194                           ; 4 bytes @ 0x0
  3195  0070                     	ds	2
  3196  0072                     ??_PIN_MANAGER_Initialize:
  3197  0072                     ??_IOCAF5_SetInterruptHandler:	
  3198                           ; 1 bytes @ 0x2
  3199                           
  3200  0072                     ??_SYSTEM_Initialize:	
  3201                           ; 1 bytes @ 0x2
  3202                           
  3203  0072                     blink_status_rx@duration_val:	
  3204                           ; 1 bytes @ 0x2
  3205                           
  3206  0072                     blink_status_tx@duration_val:	
  3207                           ; 1 bytes @ 0x2
  3208                           
  3209                           
  3210                           ; 2 bytes @ 0x2
  3211  0072                     	ds	1
  3212  0073                     ??_blink_status_rx:
  3213                           
  3214                           ; 1 bytes @ 0x3
  3215  0073                     	ds	1
  3216  0074                     ??_blink_status_tx:
  3217  0074                     ??_WriteRegister32:	
  3218                           ; 1 bytes @ 0x4
  3219                           
  3220  0074                     blink_status_rx@i:	
  3221                           ; 1 bytes @ 0x4
  3222                           
  3223  0074                     WriteRegister32@i:	
  3224                           ; 2 bytes @ 0x4
  3225                           
  3226                           
  3227                           ; 2 bytes @ 0x4
  3228  0074                     	ds	1
  3229  0075                     blink_status_tx@i:
  3230                           
  3231                           ; 2 bytes @ 0x5
  3232  0075                     	ds	1
  3233  0076                     ??_SetADF4351_Rx:
  3234  0076                     ??_SetADF4351_Tx:	
  3235                           ; 1 bytes @ 0x6
  3236                           
  3237                           
  3238                           ; 1 bytes @ 0x6
  3239  0076                     	ds	1
  3240  0077                     SetADF4351_Rx@i:
  3241  0077                     SetADF4351_Tx@i:	
  3242                           ; 2 bytes @ 0x7
  3243                           
  3244                           
  3245                           ; 2 bytes @ 0x7
  3246  0077                     	ds	2
  3247  0079                     ??_CheckStandBy:
  3248  0079                     ??_main:	
  3249                           ; 1 bytes @ 0x9
  3250                           
  3251                           
  3252                           	psect	cstackBANK0
  3253  0052                     __pcstackBANK0:	
  3254                           ; 1 bytes @ 0x9
  3255                           
  3256  0052                     ??_CheckIF:
  3257                           
  3258                           ; 1 bytes @ 0x0
  3259  0052                     	ds	6
  3260  0058                     CheckIF@i:
  3261                           
  3262                           ; 2 bytes @ 0x6
  3263  0058                     	ds	2
  3264  005A                     CheckIF@i_434:
  3265                           
  3266                           ; 2 bytes @ 0x8
  3267  005A                     	ds	2
  3268  005C                     CheckIF@i_435:
  3269                           
  3270                           ; 2 bytes @ 0xA
  3271  005C                     	ds	2
  3272                           
  3273                           	psect	maintext
  3274  03CE                     __pmaintext:	
  3275 ;;
  3276 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3277 ;;
  3278 ;; *************** function _main *****************
  3279 ;; Defined at:
  3280 ;;		line 50 in file "main.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;		None
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;		None
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  1    wreg      void 
  3287 ;; Registers used:
  3288 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3289 ;; Tracked objects:
  3290 ;;		On entry : B3F/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3294 ;;      Params:         0       0       0       0       0       0       0       0
  3295 ;;      Locals:         0       0       0       0       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0       0       0       0
  3297 ;;      Totals:         0       0       0       0       0       0       0       0
  3298 ;;Total ram usage:        0 bytes
  3299 ;; Hardware stack levels required when called:    7
  3300 ;; This function calls:
  3301 ;;		_CheckIF
  3302 ;;		_CheckPTT
  3303 ;;		_CheckStandBy
  3304 ;;		_SYSTEM_Initialize
  3305 ;;		_app_setup
  3306 ;; This function is called by:
  3307 ;;		Startup code after reset
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           
  3312                           ;psect for function _main
  3313  03CE                     _main:
  3314  03CE                     l1442:	
  3315                           ;incstack = 0
  3316                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3317                           
  3318                           
  3319                           ;main.c: 53:     SYSTEM_Initialize();
  3320  03CE  3184  240E  3183   	fcall	_SYSTEM_Initialize
  3321  03D1                     l1444:
  3322                           
  3323                           ;main.c: 56:     (INTCONbits.GIE = 1);
  3324  03D1  178B               	bsf	11,7	;volatile
  3325  03D2                     l1446:
  3326                           
  3327                           ;main.c: 59:     (INTCONbits.PEIE = 1);
  3328  03D2  170B               	bsf	11,6	;volatile
  3329                           
  3330                           ;main.c: 67:     app_setup();
  3331  03D3  3183  23B8  3183   	fcall	_app_setup
  3332  03D6                     l1448:
  3333                           
  3334                           ;main.c: 70:     {;main.c: 71:         CheckIF();
  3335  03D6  3180  203C  3183   	fcall	_CheckIF
  3336  03D9                     l1450:
  3337                           
  3338                           ;main.c: 72:         CheckStandBy();
  3339  03D9  3183  2381  3183   	fcall	_CheckStandBy
  3340                           
  3341                           ;main.c: 73:         CheckPTT();
  3342  03DC  3183  23A1  3183   	fcall	_CheckPTT
  3343  03DF  2BD6               	goto	l1448
  3344  03E0  3180  2814         	ljmp	start
  3345  03E2                     __end_of_main:
  3346                           
  3347                           	psect	text1
  3348  03B8                     __ptext1:	
  3349 ;; *************** function _app_setup *****************
  3350 ;; Defined at:
  3351 ;;		line 267 in file "mainfunctions.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;		None
  3354 ;; Auto vars:     Size  Location     Type
  3355 ;;		None
  3356 ;; Return value:  Size  Location     Type
  3357 ;;                  1    wreg      void 
  3358 ;; Registers used:
  3359 ;;		wreg, status,2, status,0, pclath, cstack
  3360 ;; Tracked objects:
  3361 ;;		On entry : 0/0
  3362 ;;		On exit  : 0/0
  3363 ;;		Unchanged: 0/0
  3364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3365 ;;      Params:         0       0       0       0       0       0       0       0
  3366 ;;      Locals:         0       0       0       0       0       0       0       0
  3367 ;;      Temps:          0       0       0       0       0       0       0       0
  3368 ;;      Totals:         0       0       0       0       0       0       0       0
  3369 ;;Total ram usage:        0 bytes
  3370 ;; Hardware stack levels used:    1
  3371 ;; Hardware stack levels required when called:    6
  3372 ;; This function calls:
  3373 ;;		_SwitchToRx
  3374 ;; This function is called by:
  3375 ;;		_main
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           
  3380                           ;psect for function _app_setup
  3381  03B8                     _app_setup:
  3382  03B8                     l1340:	
  3383                           ;incstack = 0
  3384                           ; Regs used in _app_setup: [wreg+status,2+status,0+pclath+cstack]
  3385                           
  3386                           
  3387                           ;mainfunctions.c: 269:     G_PORTC_OLD = 0b00000000;
  3388  03B8  0140               	movlb	0	; select bank0
  3389  03B9  01D0               	clrf	_G_PORTC_OLD
  3390                           
  3391                           ;mainfunctions.c: 270:     G_PTT_STATE = 0;
  3392  03BA  01FC               	clrf	_G_PTT_STATE
  3393  03BB                     l1342:
  3394                           
  3395                           ;mainfunctions.c: 271:     if (PORTAbits.RA3 == 0)
  3396  03BB  198C               	btfsc	12,3	;volatile
  3397  03BC  2BBE               	goto	u681
  3398  03BD  2BBF               	goto	u680
  3399  03BE                     u681:
  3400  03BE  2BC2               	goto	l313
  3401  03BF                     u680:
  3402  03BF                     l1344:
  3403                           
  3404                           ;mainfunctions.c: 272:     {;mainfunctions.c: 273:         G_STBY_STATE = 1;
  3405  03BF  01D1               	clrf	_G_STBY_STATE
  3406  03C0  0AD1               	incf	_G_STBY_STATE,f
  3407                           
  3408                           ;mainfunctions.c: 274:     }
  3409  03C1  2BCB               	goto	l1350
  3410  03C2                     l313:	
  3411                           ;mainfunctions.c: 275:     else if (PORTAbits.RA3 == 1)
  3412                           
  3413  03C2  1D8C               	btfss	12,3	;volatile
  3414  03C3  2BC5               	goto	u691
  3415  03C4  2BC6               	goto	u690
  3416  03C5                     u691:
  3417  03C5  2BCB               	goto	l1350
  3418  03C6                     u690:
  3419  03C6                     l1346:
  3420                           
  3421                           ;mainfunctions.c: 276:     {;mainfunctions.c: 277:         SwitchToRx();
  3422  03C6  3183  23F1  3183   	fcall	_SwitchToRx
  3423  03C9                     l1348:
  3424                           
  3425                           ;mainfunctions.c: 278:         G_STBY_STATE = 0;
  3426  03C9  0140               	movlb	0	; select bank0
  3427  03CA  01D1               	clrf	_G_STBY_STATE
  3428  03CB                     l1350:
  3429  03CB  1219               	bcf	25,4	;volatile
  3430  03CC                     l1352:
  3431  03CC  1299               	bcf	25,5	;volatile
  3432  03CD                     l320:
  3433  03CD  0008               	return
  3434  03CE                     __end_of_app_setup:
  3435                           
  3436                           	psect	text2
  3437  040E                     __ptext2:	
  3438 ;; *************** function _SYSTEM_Initialize *****************
  3439 ;; Defined at:
  3440 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3441 ;; Parameters:    Size  Location     Type
  3442 ;;		None
  3443 ;; Auto vars:     Size  Location     Type
  3444 ;;		None
  3445 ;; Return value:  Size  Location     Type
  3446 ;;                  1    wreg      void 
  3447 ;; Registers used:
  3448 ;;		wreg, status,2, status,0, pclath, cstack
  3449 ;; Tracked objects:
  3450 ;;		On entry : 0/0
  3451 ;;		On exit  : 0/0
  3452 ;;		Unchanged: 0/0
  3453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3454 ;;      Params:         0       0       0       0       0       0       0       0
  3455 ;;      Locals:         0       0       0       0       0       0       0       0
  3456 ;;      Temps:          0       0       0       0       0       0       0       0
  3457 ;;      Totals:         0       0       0       0       0       0       0       0
  3458 ;;Total ram usage:        0 bytes
  3459 ;; Hardware stack levels used:    1
  3460 ;; Hardware stack levels required when called:    6
  3461 ;; This function calls:
  3462 ;;		_OSCILLATOR_Initialize
  3463 ;;		_PIN_MANAGER_Initialize
  3464 ;;		_PMD_Initialize
  3465 ;; This function is called by:
  3466 ;;		_main
  3467 ;; This function uses a non-reentrant model
  3468 ;;
  3469                           
  3470                           
  3471                           ;psect for function _SYSTEM_Initialize
  3472  040E                     _SYSTEM_Initialize:
  3473  040E                     l1334:	
  3474                           ;incstack = 0
  3475                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3476                           
  3477                           
  3478                           ;mcc_generated_files/mcc.c: 52:     PMD_Initialize();
  3479  040E  3184  2418  3184   	fcall	_PMD_Initialize
  3480  0411                     l1336:
  3481                           
  3482                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3483  0411  3183  2331  3184   	fcall	_PIN_MANAGER_Initialize
  3484  0414                     l1338:
  3485                           
  3486                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3487  0414  3184  2422  3184   	fcall	_OSCILLATOR_Initialize
  3488  0417                     l35:
  3489  0417  0008               	return
  3490  0418                     __end_of_SYSTEM_Initialize:
  3491                           
  3492                           	psect	text3
  3493  0418                     __ptext3:	
  3494 ;; *************** function _PMD_Initialize *****************
  3495 ;; Defined at:
  3496 ;;		line 71 in file "mcc_generated_files/mcc.c"
  3497 ;; Parameters:    Size  Location     Type
  3498 ;;		None
  3499 ;; Auto vars:     Size  Location     Type
  3500 ;;		None
  3501 ;; Return value:  Size  Location     Type
  3502 ;;                  1    wreg      void 
  3503 ;; Registers used:
  3504 ;;		status,2
  3505 ;; Tracked objects:
  3506 ;;		On entry : 0/0
  3507 ;;		On exit  : 0/0
  3508 ;;		Unchanged: 0/0
  3509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3510 ;;      Params:         0       0       0       0       0       0       0       0
  3511 ;;      Locals:         0       0       0       0       0       0       0       0
  3512 ;;      Temps:          0       0       0       0       0       0       0       0
  3513 ;;      Totals:         0       0       0       0       0       0       0       0
  3514 ;;Total ram usage:        0 bytes
  3515 ;; Hardware stack levels used:    1
  3516 ;; Hardware stack levels required when called:    4
  3517 ;; This function calls:
  3518 ;;		Nothing
  3519 ;; This function is called by:
  3520 ;;		_SYSTEM_Initialize
  3521 ;; This function uses a non-reentrant model
  3522 ;;
  3523                           
  3524                           
  3525                           ;psect for function _PMD_Initialize
  3526  0418                     _PMD_Initialize:
  3527  0418                     l944:	
  3528                           ;incstack = 0
  3529                           ; Regs used in _PMD_Initialize: [status,2]
  3530                           
  3531                           
  3532                           ;mcc_generated_files/mcc.c: 74:     PMD0 = 0x00;
  3533  0418  014F               	movlb	15	; select bank15
  3534  0419  0196               	clrf	22	;volatile
  3535                           
  3536                           ;mcc_generated_files/mcc.c: 76:     PMD1 = 0x00;
  3537  041A  0197               	clrf	23	;volatile
  3538                           
  3539                           ;mcc_generated_files/mcc.c: 78:     PMD2 = 0x00;
  3540  041B  0198               	clrf	24	;volatile
  3541                           
  3542                           ;mcc_generated_files/mcc.c: 80:     PMD3 = 0x00;
  3543  041C  0199               	clrf	25	;volatile
  3544                           
  3545                           ;mcc_generated_files/mcc.c: 82:     PMD4 = 0x00;
  3546  041D  019A               	clrf	26	;volatile
  3547                           
  3548                           ;mcc_generated_files/mcc.c: 84:     PMD5 = 0x00;
  3549  041E  019B               	clrf	27	;volatile
  3550                           
  3551                           ;mcc_generated_files/mcc.c: 86:     PMD6 = 0x00;
  3552  041F  019C               	clrf	28	;volatile
  3553                           
  3554                           ;mcc_generated_files/mcc.c: 88:     PMD7 = 0x00;
  3555  0420  019D               	clrf	29	;volatile
  3556  0421                     l41:
  3557  0421  0008               	return
  3558  0422                     __end_of_PMD_Initialize:
  3559                           
  3560                           	psect	text4
  3561  0331                     __ptext4:	
  3562 ;; *************** function _PIN_MANAGER_Initialize *****************
  3563 ;; Defined at:
  3564 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;		None
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;		None
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg, status,2, status,0, pclath, cstack
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3578 ;;      Params:         0       0       0       0       0       0       0       0
  3579 ;;      Locals:         0       0       0       0       0       0       0       0
  3580 ;;      Temps:          0       0       0       0       0       0       0       0
  3581 ;;      Totals:         0       0       0       0       0       0       0       0
  3582 ;;Total ram usage:        0 bytes
  3583 ;; Hardware stack levels used:    1
  3584 ;; Hardware stack levels required when called:    5
  3585 ;; This function calls:
  3586 ;;		_IOCAF5_SetInterruptHandler
  3587 ;; This function is called by:
  3588 ;;		_SYSTEM_Initialize
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           
  3593                           ;psect for function _PIN_MANAGER_Initialize
  3594  0331                     _PIN_MANAGER_Initialize:
  3595  0331                     l1218:	
  3596                           ;incstack = 0
  3597                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3598                           
  3599                           
  3600                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  3601  0331  0140               	movlb	0	; select bank0
  3602  0332  0198               	clrf	24	;volatile
  3603                           
  3604                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  3605  0333  0199               	clrf	25	;volatile
  3606                           
  3607                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  3608  0334  019A               	clrf	26	;volatile
  3609  0335                     l1220:
  3610                           
  3611                           ;mcc_generated_files/pin_manager.c: 69:     TRISA = 0x28;
  3612  0335  3028               	movlw	40
  3613  0336  0092               	movwf	18	;volatile
  3614  0337                     l1222:
  3615                           
  3616                           ;mcc_generated_files/pin_manager.c: 70:     TRISB = 0x00;
  3617  0337  0193               	clrf	19	;volatile
  3618                           
  3619                           ;mcc_generated_files/pin_manager.c: 71:     TRISC = 0xFE;
  3620  0338  30FE               	movlw	254
  3621  0339  0094               	movwf	20	;volatile
  3622                           
  3623                           ;mcc_generated_files/pin_manager.c: 76:     ANSELC = 0xF8;
  3624  033A  30F8               	movlw	248
  3625  033B  017E               	movlb	62	; select bank62
  3626  033C  00CE               	movwf	78	;volatile
  3627  033D                     l1224:
  3628                           
  3629                           ;mcc_generated_files/pin_manager.c: 77:     ANSELB = 0x00;
  3630  033D  01C3               	clrf	67	;volatile
  3631  033E                     l1226:
  3632                           
  3633                           ;mcc_generated_files/pin_manager.c: 78:     ANSELA = 0x00;
  3634  033E  01B8               	clrf	56	;volatile
  3635  033F                     l1228:
  3636                           
  3637                           ;mcc_generated_files/pin_manager.c: 83:     WPUB = 0x00;
  3638  033F  01C4               	clrf	68	;volatile
  3639  0340                     l1230:
  3640                           
  3641                           ;mcc_generated_files/pin_manager.c: 84:     WPUA = 0x00;
  3642  0340  01B9               	clrf	57	;volatile
  3643  0341                     l1232:
  3644                           
  3645                           ;mcc_generated_files/pin_manager.c: 85:     WPUC = 0x00;
  3646  0341  01CF               	clrf	79	;volatile
  3647  0342                     l1234:
  3648                           
  3649                           ;mcc_generated_files/pin_manager.c: 90:     ODCONA = 0x00;
  3650  0342  01BA               	clrf	58	;volatile
  3651  0343                     l1236:
  3652                           
  3653                           ;mcc_generated_files/pin_manager.c: 91:     ODCONB = 0x00;
  3654  0343  01C5               	clrf	69	;volatile
  3655  0344                     l1238:
  3656                           
  3657                           ;mcc_generated_files/pin_manager.c: 92:     ODCONC = 0x00;
  3658  0344  01D0               	clrf	80	;volatile
  3659                           
  3660                           ;mcc_generated_files/pin_manager.c: 97:     SLRCONA = 0x37;
  3661  0345  3037               	movlw	55
  3662  0346  00BB               	movwf	59	;volatile
  3663                           
  3664                           ;mcc_generated_files/pin_manager.c: 98:     SLRCONB = 0xF0;
  3665  0347  30F0               	movlw	240
  3666  0348  00C6               	movwf	70	;volatile
  3667                           
  3668                           ;mcc_generated_files/pin_manager.c: 99:     SLRCONC = 0xFF;
  3669  0349  30FF               	movlw	255
  3670  034A  00D1               	movwf	81	;volatile
  3671                           
  3672                           ;mcc_generated_files/pin_manager.c: 104:     INLVLA = 0x3F;
  3673  034B  303F               	movlw	63
  3674  034C  00BC               	movwf	60	;volatile
  3675                           
  3676                           ;mcc_generated_files/pin_manager.c: 105:     INLVLB = 0xF0;
  3677  034D  30F0               	movlw	240
  3678  034E  00C7               	movwf	71	;volatile
  3679                           
  3680                           ;mcc_generated_files/pin_manager.c: 106:     INLVLC = 0xFF;
  3681  034F  30FF               	movlw	255
  3682  0350  00D2               	movwf	82	;volatile
  3683  0351                     l1240:
  3684                           
  3685                           ;mcc_generated_files/pin_manager.c: 113:     IOCAFbits.IOCAF5 = 0;
  3686  0351  12BF               	bcf	63,5	;volatile
  3687  0352                     l1242:
  3688                           
  3689                           ;mcc_generated_files/pin_manager.c: 115:     IOCANbits.IOCAN5 = 1;
  3690  0352  16BE               	bsf	62,5	;volatile
  3691  0353                     l1244:
  3692                           
  3693                           ;mcc_generated_files/pin_manager.c: 117:     IOCAPbits.IOCAP5 = 0;
  3694  0353  12BD               	bcf	61,5	;volatile
  3695  0354                     l1246:
  3696                           
  3697                           ;mcc_generated_files/pin_manager.c: 122:     IOCAF5_SetInterruptHandler(IOCAF5_DefaultIn
      +                          terruptHandler);
  3698  0354  3055               	movlw	low _IOCAF5_DefaultInterruptHandler
  3699  0355  00F0               	movwf	IOCAF5_SetInterruptHandler@InterruptHandler
  3700  0356  3004               	movlw	high _IOCAF5_DefaultInterruptHandler
  3701  0357  00F1               	movwf	IOCAF5_SetInterruptHandler@InterruptHandler+1
  3702  0358  3184  2440  3183   	fcall	_IOCAF5_SetInterruptHandler
  3703  035B                     l1248:
  3704                           
  3705                           ;mcc_generated_files/pin_manager.c: 125:     PIE0bits.IOCIE = 1;
  3706  035B  014E               	movlb	14	; select bank14
  3707  035C  1616               	bsf	22,4	;volatile
  3708  035D                     l135:
  3709  035D  0008               	return
  3710  035E                     __end_of_PIN_MANAGER_Initialize:
  3711                           
  3712                           	psect	text5
  3713  0440                     __ptext5:	
  3714 ;; *************** function _IOCAF5_SetInterruptHandler *****************
  3715 ;; Defined at:
  3716 ;;		line 156 in file "mcc_generated_files/pin_manager.c"
  3717 ;; Parameters:    Size  Location     Type
  3718 ;;  InterruptHan    2    0[COMMON] PTR FTN()void 
  3719 ;;		 -> IOCAF5_DefaultInterruptHandler(1), 
  3720 ;; Auto vars:     Size  Location     Type
  3721 ;;		None
  3722 ;; Return value:  Size  Location     Type
  3723 ;;                  1    wreg      void 
  3724 ;; Registers used:
  3725 ;;		wreg
  3726 ;; Tracked objects:
  3727 ;;		On entry : 0/0
  3728 ;;		On exit  : 0/0
  3729 ;;		Unchanged: 0/0
  3730 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3731 ;;      Params:         2       0       0       0       0       0       0       0
  3732 ;;      Locals:         0       0       0       0       0       0       0       0
  3733 ;;      Temps:          0       0       0       0       0       0       0       0
  3734 ;;      Totals:         2       0       0       0       0       0       0       0
  3735 ;;Total ram usage:        2 bytes
  3736 ;; Hardware stack levels used:    1
  3737 ;; Hardware stack levels required when called:    4
  3738 ;; This function calls:
  3739 ;;		Nothing
  3740 ;; This function is called by:
  3741 ;;		_PIN_MANAGER_Initialize
  3742 ;; This function uses a non-reentrant model
  3743 ;;
  3744                           
  3745                           
  3746                           ;psect for function _IOCAF5_SetInterruptHandler
  3747  0440                     _IOCAF5_SetInterruptHandler:
  3748  0440                     l1204:	
  3749                           ;incstack = 0
  3750                           ; Regs used in _IOCAF5_SetInterruptHandler: [wreg]
  3751                           
  3752                           
  3753                           ;mcc_generated_files/pin_manager.c: 157:     IOCAF5_InterruptHandler = InterruptHandler;
  3754  0440  0871               	movf	IOCAF5_SetInterruptHandler@InterruptHandler+1,w
  3755  0441  00FA               	movwf	_IOCAF5_InterruptHandler+1
  3756  0442  0870               	movf	IOCAF5_SetInterruptHandler@InterruptHandler,w
  3757  0443  00F9               	movwf	_IOCAF5_InterruptHandler
  3758  0444                     l146:
  3759  0444  0008               	return
  3760  0445                     __end_of_IOCAF5_SetInterruptHandler:
  3761                           
  3762                           	psect	text6
  3763  0422                     __ptext6:	
  3764 ;; *************** function _OSCILLATOR_Initialize *****************
  3765 ;; Defined at:
  3766 ;;		line 57 in file "mcc_generated_files/mcc.c"
  3767 ;; Parameters:    Size  Location     Type
  3768 ;;		None
  3769 ;; Auto vars:     Size  Location     Type
  3770 ;;		None
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1    wreg      void 
  3773 ;; Registers used:
  3774 ;;		wreg, status,2
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3780 ;;      Params:         0       0       0       0       0       0       0       0
  3781 ;;      Locals:         0       0       0       0       0       0       0       0
  3782 ;;      Temps:          0       0       0       0       0       0       0       0
  3783 ;;      Totals:         0       0       0       0       0       0       0       0
  3784 ;;Total ram usage:        0 bytes
  3785 ;; Hardware stack levels used:    1
  3786 ;; Hardware stack levels required when called:    4
  3787 ;; This function calls:
  3788 ;;		Nothing
  3789 ;; This function is called by:
  3790 ;;		_SYSTEM_Initialize
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           
  3795                           ;psect for function _OSCILLATOR_Initialize
  3796  0422                     _OSCILLATOR_Initialize:
  3797  0422                     l978:	
  3798                           ;incstack = 0
  3799                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3800                           
  3801                           
  3802                           ;mcc_generated_files/mcc.c: 60:     OSCCON1 = 0x62;
  3803  0422  3062               	movlw	98
  3804  0423  0151               	movlb	17	; select bank17
  3805  0424  008D               	movwf	13	;volatile
  3806  0425                     l980:
  3807                           
  3808                           ;mcc_generated_files/mcc.c: 62:     OSCCON3 = 0x00;
  3809  0425  018F               	clrf	15	;volatile
  3810  0426                     l982:
  3811                           
  3812                           ;mcc_generated_files/mcc.c: 64:     OSCEN = 0x00;
  3813  0426  0191               	clrf	17	;volatile
  3814                           
  3815                           ;mcc_generated_files/mcc.c: 66:     OSCFRQ = 0x02;
  3816  0427  3002               	movlw	2
  3817  0428  0093               	movwf	19	;volatile
  3818  0429                     l984:
  3819                           
  3820                           ;mcc_generated_files/mcc.c: 68:     OSCTUNE = 0x00;
  3821  0429  0192               	clrf	18	;volatile
  3822  042A                     l38:
  3823  042A  0008               	return
  3824  042B                     __end_of_OSCILLATOR_Initialize:
  3825                           
  3826                           	psect	text7
  3827  0381                     __ptext7:	
  3828 ;; *************** function _CheckStandBy *****************
  3829 ;; Defined at:
  3830 ;;		line 211 in file "mainfunctions.c"
  3831 ;; Parameters:    Size  Location     Type
  3832 ;;		None
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;		None
  3835 ;; Return value:  Size  Location     Type
  3836 ;;                  1    wreg      void 
  3837 ;; Registers used:
  3838 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3839 ;; Tracked objects:
  3840 ;;		On entry : 0/0
  3841 ;;		On exit  : 0/0
  3842 ;;		Unchanged: 0/0
  3843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3844 ;;      Params:         0       0       0       0       0       0       0       0
  3845 ;;      Locals:         0       0       0       0       0       0       0       0
  3846 ;;      Temps:          0       0       0       0       0       0       0       0
  3847 ;;      Totals:         0       0       0       0       0       0       0       0
  3848 ;;Total ram usage:        0 bytes
  3849 ;; Hardware stack levels used:    1
  3850 ;; Hardware stack levels required when called:    6
  3851 ;; This function calls:
  3852 ;;		_SetADF4351_Tx
  3853 ;;		_SwitchToRx
  3854 ;; This function is called by:
  3855 ;;		_main
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           
  3859                           
  3860                           ;psect for function _CheckStandBy
  3861  0381                     _CheckStandBy:
  3862  0381                     l1418:	
  3863                           ;incstack = 0
  3864                           ; Regs used in _CheckStandBy: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3865                           
  3866                           
  3867                           ;mainfunctions.c: 213:     if ((PORTAbits.RA3 == 0) && (G_STBY_STATE == 1))
  3868  0381  0140               	movlb	0	; select bank0
  3869  0382  198C               	btfsc	12,3	;volatile
  3870  0383  2B85               	goto	u921
  3871  0384  2B86               	goto	u920
  3872  0385                     u921:
  3873  0385  2B91               	goto	l300
  3874  0386                     u920:
  3875  0386                     l1420:
  3876  0386  0351               	decf	_G_STBY_STATE,w
  3877  0387  1D03               	btfss	3,2
  3878  0388  2B8A               	goto	u931
  3879  0389  2B8B               	goto	u930
  3880  038A                     u931:
  3881  038A  2B91               	goto	l300
  3882  038B                     u930:
  3883  038B                     l1422:
  3884                           
  3885                           ;mainfunctions.c: 214:     {;mainfunctions.c: 216:         SwitchToRx();
  3886  038B  3183  23F1  3183   	fcall	_SwitchToRx
  3887  038E                     l1424:
  3888                           
  3889                           ;mainfunctions.c: 217:         G_STBY_STATE = 0;
  3890  038E  0140               	movlb	0	; select bank0
  3891  038F  01D1               	clrf	_G_STBY_STATE
  3892                           
  3893                           ;mainfunctions.c: 218:     }
  3894  0390  2BA0               	goto	l303
  3895  0391                     l300:	
  3896                           ;mainfunctions.c: 219:     else if ((PORTAbits.RA3 == 1) && (G_STBY_STATE == 0))
  3897                           
  3898  0391  1D8C               	btfss	12,3	;volatile
  3899  0392  2B94               	goto	u941
  3900  0393  2B95               	goto	u940
  3901  0394                     u941:
  3902  0394  2BA0               	goto	l303
  3903  0395                     u940:
  3904  0395                     l1426:
  3905  0395  0851               	movf	_G_STBY_STATE,w
  3906  0396  1D03               	btfss	3,2
  3907  0397  2B99               	goto	u951
  3908  0398  2B9A               	goto	u950
  3909  0399                     u951:
  3910  0399  2BA0               	goto	l303
  3911  039A                     u950:
  3912  039A                     l1428:
  3913                           
  3914                           ;mainfunctions.c: 220:     {;mainfunctions.c: 221:         SetADF4351_Tx();
  3915  039A  3182  22CB  3183   	fcall	_SetADF4351_Tx
  3916  039D                     l1430:
  3917                           
  3918                           ;mainfunctions.c: 222:         G_STBY_STATE = 1;
  3919  039D  0140               	movlb	0	; select bank0
  3920  039E  01D1               	clrf	_G_STBY_STATE
  3921  039F  0AD1               	incf	_G_STBY_STATE,f
  3922  03A0                     l303:
  3923  03A0  0008               	return
  3924  03A1                     __end_of_CheckStandBy:
  3925                           
  3926                           	psect	text8
  3927  03A1                     __ptext8:	
  3928 ;; *************** function _CheckPTT *****************
  3929 ;; Defined at:
  3930 ;;		line 226 in file "mainfunctions.c"
  3931 ;; Parameters:    Size  Location     Type
  3932 ;;		None
  3933 ;; Auto vars:     Size  Location     Type
  3934 ;;		None
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  1    wreg      void 
  3937 ;; Registers used:
  3938 ;;		wreg, status,2, status,0, pclath, cstack
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  3944 ;;      Params:         0       0       0       0       0       0       0       0
  3945 ;;      Locals:         0       0       0       0       0       0       0       0
  3946 ;;      Temps:          0       0       0       0       0       0       0       0
  3947 ;;      Totals:         0       0       0       0       0       0       0       0
  3948 ;;Total ram usage:        0 bytes
  3949 ;; Hardware stack levels used:    1
  3950 ;; Hardware stack levels required when called:    6
  3951 ;; This function calls:
  3952 ;;		_SwitchToRx
  3953 ;;		_SwitchToTx
  3954 ;; This function is called by:
  3955 ;;		_main
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           
  3960                           ;psect for function _CheckPTT
  3961  03A1                     _CheckPTT:
  3962  03A1                     l1432:	
  3963                           ;incstack = 0
  3964                           ; Regs used in _CheckPTT: [wreg+status,2+status,0+pclath+cstack]
  3965                           
  3966                           
  3967                           ;mainfunctions.c: 228:     if (G_STBY_STATE == 1)
  3968  03A1  0140               	movlb	0	; select bank0
  3969  03A2  0351               	decf	_G_STBY_STATE,w
  3970  03A3  1D03               	btfss	3,2
  3971  03A4  2BA6               	goto	u961
  3972  03A5  2BA7               	goto	u960
  3973  03A6                     u961:
  3974  03A6  2BB7               	goto	l310
  3975  03A7                     u960:
  3976  03A7                     l1434:
  3977                           
  3978                           ;mainfunctions.c: 229:     {;mainfunctions.c: 231:         if (PORTAbits.RA5 == 0)
  3979  03A7  1A8C               	btfsc	12,5	;volatile
  3980  03A8  2BAA               	goto	u971
  3981  03A9  2BAB               	goto	u970
  3982  03AA                     u971:
  3983  03AA  2BAF               	goto	l307
  3984  03AB                     u970:
  3985  03AB                     l1436:
  3986                           
  3987                           ;mainfunctions.c: 232:         {;mainfunctions.c: 234:             SwitchToTx();
  3988  03AB  3183  23E2  3183   	fcall	_SwitchToTx
  3989                           
  3990                           ;mainfunctions.c: 235:         }
  3991  03AE  2BB7               	goto	l310
  3992  03AF                     l307:	
  3993                           ;mainfunctions.c: 237:         else if (PORTAbits.RA5 == 1)
  3994                           
  3995  03AF  1E8C               	btfss	12,5	;volatile
  3996  03B0  2BB2               	goto	u981
  3997  03B1  2BB3               	goto	u980
  3998  03B2                     u981:
  3999  03B2  2BB7               	goto	l310
  4000  03B3                     u980:
  4001  03B3                     l1438:
  4002                           
  4003                           ;mainfunctions.c: 238:         {;mainfunctions.c: 240:             SwitchToRx();
  4004  03B3  3183  23F1  3183   	fcall	_SwitchToRx
  4005  03B6                     l1440:
  4006                           
  4007                           ;mainfunctions.c: 241:             G_PTT_STATE = 0;
  4008  03B6  01FC               	clrf	_G_PTT_STATE
  4009  03B7                     l310:
  4010  03B7  0008               	return
  4011  03B8                     __end_of_CheckPTT:
  4012                           
  4013                           	psect	text9
  4014  03E2                     __ptext9:	
  4015 ;; *************** function _SwitchToTx *****************
  4016 ;; Defined at:
  4017 ;;		line 146 in file "mainfunctions.c"
  4018 ;; Parameters:    Size  Location     Type
  4019 ;;		None
  4020 ;; Auto vars:     Size  Location     Type
  4021 ;;		None
  4022 ;; Return value:  Size  Location     Type
  4023 ;;                  1    wreg      void 
  4024 ;; Registers used:
  4025 ;;		wreg, status,2, status,0, pclath, cstack
  4026 ;; Tracked objects:
  4027 ;;		On entry : 0/0
  4028 ;;		On exit  : 0/0
  4029 ;;		Unchanged: 0/0
  4030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4031 ;;      Params:         0       0       0       0       0       0       0       0
  4032 ;;      Locals:         0       0       0       0       0       0       0       0
  4033 ;;      Temps:          0       0       0       0       0       0       0       0
  4034 ;;      Totals:         0       0       0       0       0       0       0       0
  4035 ;;Total ram usage:        0 bytes
  4036 ;; Hardware stack levels used:    1
  4037 ;; Hardware stack levels required when called:    5
  4038 ;; This function calls:
  4039 ;;		_SetRelay_Tx
  4040 ;;		_SetTxInhibit_ON
  4041 ;; This function is called by:
  4042 ;;		_CheckPTT
  4043 ;; This function uses a non-reentrant model
  4044 ;;
  4045                           
  4046                           
  4047                           ;psect for function _SwitchToTx
  4048  03E2                     _SwitchToTx:
  4049  03E2                     l1328:	
  4050                           ;incstack = 0
  4051                           ; Regs used in _SwitchToTx: [wreg+status,2+status,0+pclath+cstack]
  4052                           
  4053                           
  4054                           ;mainfunctions.c: 148:     SetRelay_Tx();
  4055  03E2  3184  2445  3183   	fcall	_SetRelay_Tx
  4056  03E5                     l1330:
  4057                           
  4058                           ;mainfunctions.c: 149:     _delay((unsigned long)((500)*(1000000/4000000.0)));
  4059  03E5  3029               	movlw	41
  4060  03E6                     u997:
  4061  03E6  0B89               	decfsz	9,f
  4062  03E7  2BE6               	goto	u997
  4063  03E8  3200               	nop2
  4064  03E9                     l1332:
  4065                           
  4066                           ;mainfunctions.c: 150:     SetTxInhibit_ON();
  4067  03E9  3184  244F  3183   	fcall	_SetTxInhibit_ON
  4068                           
  4069                           ;mainfunctions.c: 151:     _delay((unsigned long)((500)*(1000000/4000000.0)));
  4070  03EC  3029               	movlw	41
  4071  03ED                     u1007:
  4072  03ED  0B89               	decfsz	9,f
  4073  03EE  2BED               	goto	u1007
  4074  03EF  3200               	nop2
  4075  03F0                     l280:
  4076  03F0  0008               	return
  4077  03F1                     __end_of_SwitchToTx:
  4078                           
  4079                           	psect	text10
  4080  044F                     __ptext10:	
  4081 ;; *************** function _SetTxInhibit_ON *****************
  4082 ;; Defined at:
  4083 ;;		line 80 in file "mainfunctions.c"
  4084 ;; Parameters:    Size  Location     Type
  4085 ;;		None
  4086 ;; Auto vars:     Size  Location     Type
  4087 ;;		None
  4088 ;; Return value:  Size  Location     Type
  4089 ;;                  1    wreg      void 
  4090 ;; Registers used:
  4091 ;;		None
  4092 ;; Tracked objects:
  4093 ;;		On entry : 0/0
  4094 ;;		On exit  : 0/0
  4095 ;;		Unchanged: 0/0
  4096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4097 ;;      Params:         0       0       0       0       0       0       0       0
  4098 ;;      Locals:         0       0       0       0       0       0       0       0
  4099 ;;      Temps:          0       0       0       0       0       0       0       0
  4100 ;;      Totals:         0       0       0       0       0       0       0       0
  4101 ;;Total ram usage:        0 bytes
  4102 ;; Hardware stack levels used:    1
  4103 ;; Hardware stack levels required when called:    4
  4104 ;; This function calls:
  4105 ;;		Nothing
  4106 ;; This function is called by:
  4107 ;;		_SwitchToTx
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           
  4112                           ;psect for function _SetTxInhibit_ON
  4113  044F                     _SetTxInhibit_ON:
  4114  044F                     l232:	
  4115                           ;incstack = 0
  4116                           ; Regs used in _SetTxInhibit_ON: []
  4117                           ;mainfunctions.c: 82:     do { LATAbits.LATA4 = 1; } while(0);
  4118                           
  4119  044F  0140               	movlb	0	; select bank0
  4120  0450  1618               	bsf	24,4	;volatile
  4121  0451                     l234:
  4122  0451  0008               	return
  4123  0452                     __end_of_SetTxInhibit_ON:
  4124                           
  4125                           	psect	text11
  4126  0445                     __ptext11:	
  4127 ;; *************** function _SetRelay_Tx *****************
  4128 ;; Defined at:
  4129 ;;		line 73 in file "mainfunctions.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;		None
  4132 ;; Auto vars:     Size  Location     Type
  4133 ;;		None
  4134 ;; Return value:  Size  Location     Type
  4135 ;;                  1    wreg      void 
  4136 ;; Registers used:
  4137 ;;		None
  4138 ;; Tracked objects:
  4139 ;;		On entry : 0/0
  4140 ;;		On exit  : 0/0
  4141 ;;		Unchanged: 0/0
  4142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4143 ;;      Params:         0       0       0       0       0       0       0       0
  4144 ;;      Locals:         0       0       0       0       0       0       0       0
  4145 ;;      Temps:          0       0       0       0       0       0       0       0
  4146 ;;      Totals:         0       0       0       0       0       0       0       0
  4147 ;;Total ram usage:        0 bytes
  4148 ;; Hardware stack levels used:    1
  4149 ;; Hardware stack levels required when called:    4
  4150 ;; This function calls:
  4151 ;;		Nothing
  4152 ;; This function is called by:
  4153 ;;		_SwitchToTx
  4154 ;; This function uses a non-reentrant model
  4155 ;;
  4156                           
  4157                           
  4158                           ;psect for function _SetRelay_Tx
  4159  0445                     _SetRelay_Tx:
  4160  0445                     l225:	
  4161                           ;incstack = 0
  4162                           ; Regs used in _SetRelay_Tx: []
  4163                           ;mainfunctions.c: 75:     do { LATBbits.LATB7 = 1; } while(0);
  4164                           
  4165  0445  0140               	movlb	0	; select bank0
  4166  0446  1799               	bsf	25,7	;volatile
  4167  0447                     l227:	
  4168                           ;mainfunctions.c: 76:     do { LATBbits.LATB6 = 0; } while(0);
  4169                           
  4170  0447  1319               	bcf	25,6	;volatile
  4171  0448                     l228:
  4172                           
  4173                           ;mainfunctions.c: 77:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  4174  0448  3200               	nop2	;2 cycle nop
  4175  0449                     l229:
  4176  0449  0008               	return
  4177  044A                     __end_of_SetRelay_Tx:
  4178                           
  4179                           	psect	text12
  4180  03F1                     __ptext12:	
  4181 ;; *************** function _SwitchToRx *****************
  4182 ;; Defined at:
  4183 ;;		line 138 in file "mainfunctions.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;		None
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;		None
  4188 ;; Return value:  Size  Location     Type
  4189 ;;                  1    wreg      void 
  4190 ;; Registers used:
  4191 ;;		wreg, status,2, status,0, pclath, cstack
  4192 ;; Tracked objects:
  4193 ;;		On entry : 0/0
  4194 ;;		On exit  : 0/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4197 ;;      Params:         0       0       0       0       0       0       0       0
  4198 ;;      Locals:         0       0       0       0       0       0       0       0
  4199 ;;      Temps:          0       0       0       0       0       0       0       0
  4200 ;;      Totals:         0       0       0       0       0       0       0       0
  4201 ;;Total ram usage:        0 bytes
  4202 ;; Hardware stack levels used:    1
  4203 ;; Hardware stack levels required when called:    5
  4204 ;; This function calls:
  4205 ;;		_SetRelay_Rx
  4206 ;;		_SetTxInhibit_OFF
  4207 ;; This function is called by:
  4208 ;;		_CheckStandBy
  4209 ;;		_CheckPTT
  4210 ;;		_app_setup
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           
  4215                           ;psect for function _SwitchToRx
  4216  03F1                     _SwitchToRx:
  4217  03F1                     l1322:	
  4218                           ;incstack = 0
  4219                           ; Regs used in _SwitchToRx: [wreg+status,2+status,0+pclath+cstack]
  4220                           
  4221                           
  4222                           ;mainfunctions.c: 140:     SetTxInhibit_OFF();
  4223  03F1  3184  2452  3183   	fcall	_SetTxInhibit_OFF
  4224  03F4                     l1324:
  4225                           
  4226                           ;mainfunctions.c: 141:     _delay((unsigned long)((500)*(1000000/4000000.0)));
  4227  03F4  3029               	movlw	41
  4228  03F5                     u1017:
  4229  03F5  0B89               	decfsz	9,f
  4230  03F6  2BF5               	goto	u1017
  4231  03F7  3200               	nop2
  4232  03F8                     l1326:
  4233                           
  4234                           ;mainfunctions.c: 142:     SetRelay_Rx();
  4235  03F8  3184  244A  3183   	fcall	_SetRelay_Rx
  4236                           
  4237                           ;mainfunctions.c: 143:     _delay((unsigned long)((500)*(1000000/4000000.0)));
  4238  03FB  3029               	movlw	41
  4239  03FC                     u1027:
  4240  03FC  0B89               	decfsz	9,f
  4241  03FD  2BFC               	goto	u1027
  4242  03FE  3200               	nop2
  4243  03FF                     l277:
  4244  03FF  0008               	return
  4245  0400                     __end_of_SwitchToRx:
  4246                           
  4247                           	psect	text13
  4248  0452                     __ptext13:	
  4249 ;; *************** function _SetTxInhibit_OFF *****************
  4250 ;; Defined at:
  4251 ;;		line 85 in file "mainfunctions.c"
  4252 ;; Parameters:    Size  Location     Type
  4253 ;;		None
  4254 ;; Auto vars:     Size  Location     Type
  4255 ;;		None
  4256 ;; Return value:  Size  Location     Type
  4257 ;;                  1    wreg      void 
  4258 ;; Registers used:
  4259 ;;		None
  4260 ;; Tracked objects:
  4261 ;;		On entry : 0/0
  4262 ;;		On exit  : 0/0
  4263 ;;		Unchanged: 0/0
  4264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4265 ;;      Params:         0       0       0       0       0       0       0       0
  4266 ;;      Locals:         0       0       0       0       0       0       0       0
  4267 ;;      Temps:          0       0       0       0       0       0       0       0
  4268 ;;      Totals:         0       0       0       0       0       0       0       0
  4269 ;;Total ram usage:        0 bytes
  4270 ;; Hardware stack levels used:    1
  4271 ;; Hardware stack levels required when called:    4
  4272 ;; This function calls:
  4273 ;;		Nothing
  4274 ;; This function is called by:
  4275 ;;		_SwitchToRx
  4276 ;; This function uses a non-reentrant model
  4277 ;;
  4278                           
  4279                           
  4280                           ;psect for function _SetTxInhibit_OFF
  4281  0452                     _SetTxInhibit_OFF:
  4282  0452                     l237:	
  4283                           ;incstack = 0
  4284                           ; Regs used in _SetTxInhibit_OFF: []
  4285                           ;mainfunctions.c: 87:     do { LATAbits.LATA4 = 0; } while(0);
  4286                           
  4287  0452  0140               	movlb	0	; select bank0
  4288  0453  1218               	bcf	24,4	;volatile
  4289  0454                     l239:
  4290  0454  0008               	return
  4291  0455                     __end_of_SetTxInhibit_OFF:
  4292                           
  4293                           	psect	text14
  4294  044A                     __ptext14:	
  4295 ;; *************** function _SetRelay_Rx *****************
  4296 ;; Defined at:
  4297 ;;		line 66 in file "mainfunctions.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;		None
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;		None
  4302 ;; Return value:  Size  Location     Type
  4303 ;;                  1    wreg      void 
  4304 ;; Registers used:
  4305 ;;		None
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/0
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4311 ;;      Params:         0       0       0       0       0       0       0       0
  4312 ;;      Locals:         0       0       0       0       0       0       0       0
  4313 ;;      Temps:          0       0       0       0       0       0       0       0
  4314 ;;      Totals:         0       0       0       0       0       0       0       0
  4315 ;;Total ram usage:        0 bytes
  4316 ;; Hardware stack levels used:    1
  4317 ;; Hardware stack levels required when called:    4
  4318 ;; This function calls:
  4319 ;;		Nothing
  4320 ;; This function is called by:
  4321 ;;		_SwitchToRx
  4322 ;; This function uses a non-reentrant model
  4323 ;;
  4324                           
  4325                           
  4326                           ;psect for function _SetRelay_Rx
  4327  044A                     _SetRelay_Rx:
  4328  044A                     l218:	
  4329                           ;incstack = 0
  4330                           ; Regs used in _SetRelay_Rx: []
  4331                           ;mainfunctions.c: 68:     do { LATBbits.LATB6 = 1; } while(0);
  4332                           
  4333  044A  0140               	movlb	0	; select bank0
  4334  044B  1719               	bsf	25,6	;volatile
  4335  044C                     l220:	
  4336                           ;mainfunctions.c: 69:     do { LATBbits.LATB7 = 0; } while(0);
  4337                           
  4338  044C  1399               	bcf	25,7	;volatile
  4339  044D                     l221:
  4340                           
  4341                           ;mainfunctions.c: 70:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  4342  044D  3200               	nop2	;2 cycle nop
  4343  044E                     l222:
  4344  044E  0008               	return
  4345  044F                     __end_of_SetRelay_Rx:
  4346                           
  4347                           	psect	text15
  4348  003C                     __ptext15:	
  4349 ;; *************** function _CheckIF *****************
  4350 ;; Defined at:
  4351 ;;		line 154 in file "mainfunctions.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;		None
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;  i               2   10[BANK0 ] int 
  4356 ;;  i               2    8[BANK0 ] int 
  4357 ;;  i               2    6[BANK0 ] int 
  4358 ;; Return value:  Size  Location     Type
  4359 ;;                  1    wreg      void 
  4360 ;; Registers used:
  4361 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4362 ;; Tracked objects:
  4363 ;;		On entry : 0/0
  4364 ;;		On exit  : 0/0
  4365 ;;		Unchanged: 0/0
  4366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4367 ;;      Params:         0       0       0       0       0       0       0       0
  4368 ;;      Locals:         0       6       0       0       0       0       0       0
  4369 ;;      Temps:          0       6       0       0       0       0       0       0
  4370 ;;      Totals:         0      12       0       0       0       0       0       0
  4371 ;;Total ram usage:       12 bytes
  4372 ;; Hardware stack levels used:    1
  4373 ;; Hardware stack levels required when called:    6
  4374 ;; This function calls:
  4375 ;;		_SetADF4351_Rx
  4376 ;;		_SetADF4351_Tx
  4377 ;;		_blink_status_rx
  4378 ;;		_blink_status_tx
  4379 ;; This function is called by:
  4380 ;;		_main
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           
  4385                           ;psect for function _CheckIF
  4386  003C                     _CheckIF:
  4387  003C                     l1354:	
  4388                           ;incstack = 0
  4389                           ; Regs used in _CheckIF: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4390                           
  4391                           
  4392                           ;mainfunctions.c: 156:     if (G_PORTC_OLD != PORTC)
  4393  003C  0140               	movlb	0	; select bank0
  4394  003D  0850               	movf	_G_PORTC_OLD,w
  4395  003E  060E               	xorwf	14,w	;volatile
  4396  003F  1903               	skipnz
  4397  0040  2842               	goto	u701
  4398  0041  2843               	goto	u700
  4399  0042                     u701:
  4400  0042  29BD               	goto	l297
  4401  0043                     u700:
  4402  0043                     l1356:
  4403                           
  4404                           ;mainfunctions.c: 157:     {;mainfunctions.c: 158:         if ((PORTCbits.RC1 == 1) && (
      +                          PORTCbits.RC2 == 1))
  4405  0043  1C8E               	btfss	14,1	;volatile
  4406  0044  2846               	goto	u711
  4407  0045  2847               	goto	u710
  4408  0046                     u711:
  4409  0046  28C4               	goto	l284
  4410  0047                     u710:
  4411  0047                     l1358:
  4412  0047  1D0E               	btfss	14,2	;volatile
  4413  0048  284A               	goto	u721
  4414  0049  284B               	goto	u720
  4415  004A                     u721:
  4416  004A  28C4               	goto	l284
  4417  004B                     u720:
  4418  004B                     l1360:
  4419                           
  4420                           ;mainfunctions.c: 159:         {;mainfunctions.c: 160:             for (int i = 0; i <= 
      +                          5; i++)
  4421  004B  01D8               	clrf	CheckIF@i
  4422  004C  01D9               	clrf	CheckIF@i+1
  4423  004D                     l1366:
  4424                           
  4425                           ;mainfunctions.c: 161:             {;mainfunctions.c: 162:                 rx_reg[i] = r
      +                          x_reg_50[i];
  4426  004D  0140               	movlb	0	; select bank0
  4427  004E  0858               	movf	CheckIF@i,w
  4428  004F  00D2               	movwf	??_CheckIF
  4429  0050  3001               	movlw	1
  4430  0051                     u735:
  4431  0051  35D2               	lslf	??_CheckIF,f
  4432  0052  3EFF               	addlw	-1
  4433  0053  1D03               	skipz
  4434  0054  2851               	goto	u735
  4435  0055  3552               	lslf	??_CheckIF,w
  4436  0056  3EA0               	addlw	(low (_rx_reg_50| 0))& (0+255)
  4437  0057  0086               	movwf	6
  4438  0058  0187               	clrf	7
  4439  0059  3F40               	moviw [0]fsr1
  4440  005A  00D3               	movwf	??_CheckIF+1
  4441  005B  3F41               	moviw [1]fsr1
  4442  005C  00D4               	movwf	??_CheckIF+2
  4443  005D  3F42               	moviw [2]fsr1
  4444  005E  00D5               	movwf	??_CheckIF+3
  4445  005F  3F43               	moviw [3]fsr1
  4446  0060  00D6               	movwf	??_CheckIF+4
  4447  0061  0858               	movf	CheckIF@i,w
  4448  0062  00D7               	movwf	??_CheckIF+5
  4449  0063  3001               	movlw	1
  4450  0064                     u745:
  4451  0064  35D7               	lslf	??_CheckIF+5,f
  4452  0065  3EFF               	addlw	-1
  4453  0066  1D03               	skipz
  4454  0067  2864               	goto	u745
  4455  0068  3557               	lslf	??_CheckIF+5,w
  4456  0069  3E38               	addlw	(low (_rx_reg| 0))& (0+255)
  4457  006A  0086               	movwf	6
  4458  006B  0187               	clrf	7
  4459  006C  0853               	movf	??_CheckIF+1,w
  4460  006D  3FC0               	movwi [0]fsr1
  4461  006E  0854               	movf	??_CheckIF+2,w
  4462  006F  3FC1               	movwi [1]fsr1
  4463  0070  0855               	movf	??_CheckIF+3,w
  4464  0071  3FC2               	movwi [2]fsr1
  4465  0072  0856               	movf	??_CheckIF+4,w
  4466  0073  3FC3               	movwi [3]fsr1
  4467                           
  4468                           ;mainfunctions.c: 163:                 tx_reg[i] = tx_reg_50[i];
  4469  0074  0858               	movf	CheckIF@i,w
  4470  0075  00D2               	movwf	??_CheckIF
  4471  0076  3001               	movlw	1
  4472  0077                     u755:
  4473  0077  35D2               	lslf	??_CheckIF,f
  4474  0078  3EFF               	addlw	-1
  4475  0079  1D03               	skipz
  4476  007A  2877               	goto	u755
  4477  007B  3552               	lslf	??_CheckIF,w
  4478  007C  3E50               	addlw	(low (_tx_reg_50| (0+256)))& (0+255)
  4479  007D  0086               	movwf	6
  4480  007E  3001               	movlw	1	; select bank2/3
  4481  007F  0087               	movwf	7
  4482  0080  3F40               	moviw [0]fsr1
  4483  0081  00D3               	movwf	??_CheckIF+1
  4484  0082  3F41               	moviw [1]fsr1
  4485  0083  00D4               	movwf	??_CheckIF+2
  4486  0084  3F42               	moviw [2]fsr1
  4487  0085  00D5               	movwf	??_CheckIF+3
  4488  0086  3F43               	moviw [3]fsr1
  4489  0087  00D6               	movwf	??_CheckIF+4
  4490  0088  0858               	movf	CheckIF@i,w
  4491  0089  00D7               	movwf	??_CheckIF+5
  4492  008A  3001               	movlw	1
  4493  008B                     u765:
  4494  008B  35D7               	lslf	??_CheckIF+5,f
  4495  008C  3EFF               	addlw	-1
  4496  008D  1D03               	skipz
  4497  008E  288B               	goto	u765
  4498  008F  3557               	lslf	??_CheckIF+5,w
  4499  0090  3E20               	addlw	(low (_tx_reg| 0))& (0+255)
  4500  0091  0086               	movwf	6
  4501  0092  0187               	clrf	7
  4502  0093  0853               	movf	??_CheckIF+1,w
  4503  0094  3FC0               	movwi [0]fsr1
  4504  0095  0854               	movf	??_CheckIF+2,w
  4505  0096  3FC1               	movwi [1]fsr1
  4506  0097  0855               	movf	??_CheckIF+3,w
  4507  0098  3FC2               	movwi [2]fsr1
  4508  0099  0856               	movf	??_CheckIF+4,w
  4509  009A  3FC3               	movwi [3]fsr1
  4510  009B                     l1368:
  4511                           
  4512                           ;mainfunctions.c: 164:             }
  4513  009B  3001               	movlw	1
  4514  009C  07D8               	addwf	CheckIF@i,f
  4515  009D  3000               	movlw	0
  4516  009E  3DD9               	addwfc	CheckIF@i+1,f
  4517  009F                     l1370:
  4518  009F  0859               	movf	CheckIF@i+1,w
  4519  00A0  3A80               	xorlw	128
  4520  00A1  00D2               	movwf	??_CheckIF
  4521  00A2  3080               	movlw	128
  4522  00A3  0252               	subwf	??_CheckIF,w
  4523  00A4  1D03               	skipz
  4524  00A5  28A8               	goto	u775
  4525  00A6  3006               	movlw	6
  4526  00A7  0258               	subwf	CheckIF@i,w
  4527  00A8                     u775:
  4528  00A8  1C03               	skipc
  4529  00A9  28AB               	goto	u771
  4530  00AA  28AC               	goto	u770
  4531  00AB                     u771:
  4532  00AB  284D               	goto	l1366
  4533  00AC                     u770:
  4534  00AC                     l1372:
  4535                           
  4536                           ;mainfunctions.c: 165:             blink_status_rx(1, 'S');
  4537  00AC  3001               	movlw	1
  4538  00AD  00F0               	movwf	blink_status_rx@count_val
  4539  00AE  3000               	movlw	0
  4540  00AF  00F1               	movwf	blink_status_rx@count_val+1
  4541  00B0  3053               	movlw	83
  4542  00B1  0140               	movlb	0	; select bank0
  4543  00B2  00D2               	movwf	??_CheckIF
  4544  00B3  0852               	movf	??_CheckIF,w
  4545  00B4  00F2               	movwf	blink_status_rx@duration_val
  4546  00B5  3182  228D  3180   	fcall	_blink_status_rx
  4547                           
  4548                           ;mainfunctions.c: 166:             blink_status_tx(1, 'S');
  4549  00B8  3001               	movlw	1
  4550  00B9  00F0               	movwf	blink_status_tx@count_val
  4551  00BA  3000               	movlw	0
  4552  00BB  00F1               	movwf	blink_status_tx@count_val+1
  4553  00BC  3053               	movlw	83
  4554  00BD  00F2               	movwf	blink_status_tx@duration_val
  4555  00BE  3000               	movlw	0
  4556  00BF  00F3               	movwf	blink_status_tx@duration_val+1
  4557  00C0  3182  224E  3180   	fcall	_blink_status_tx
  4558                           
  4559                           ;mainfunctions.c: 167:         }
  4560  00C3  2990               	goto	l1402
  4561  00C4                     l284:	
  4562                           ;mainfunctions.c: 168:         else if (PORTCbits.RC1 == 0)
  4563                           
  4564  00C4  188E               	btfsc	14,1	;volatile
  4565  00C5  28C7               	goto	u781
  4566  00C6  28C8               	goto	u780
  4567  00C7                     u781:
  4568  00C7  2929               	goto	l288
  4569  00C8                     u780:
  4570  00C8                     l1374:
  4571                           
  4572                           ;mainfunctions.c: 169:         {;mainfunctions.c: 170:             for (int i = 0; i <= 
      +                          5; i++)
  4573  00C8  01DA               	clrf	CheckIF@i_434
  4574  00C9  01DB               	clrf	CheckIF@i_434+1
  4575  00CA                     l1380:
  4576                           
  4577                           ;mainfunctions.c: 171:             {;mainfunctions.c: 172:                 rx_reg[i] = r
      +                          x_reg_28[i];
  4578  00CA  0140               	movlb	0	; select bank0
  4579  00CB  085A               	movf	CheckIF@i_434,w
  4580  00CC  00D2               	movwf	??_CheckIF
  4581  00CD  3001               	movlw	1
  4582  00CE                     u795:
  4583  00CE  35D2               	lslf	??_CheckIF,f
  4584  00CF  3EFF               	addlw	-1
  4585  00D0  1D03               	skipz
  4586  00D1  28CE               	goto	u795
  4587  00D2  3552               	lslf	??_CheckIF,w
  4588  00D3  3ED0               	addlw	(low (_rx_reg_28| 0))& (0+255)
  4589  00D4  0086               	movwf	6
  4590  00D5  0187               	clrf	7
  4591  00D6  3F40               	moviw [0]fsr1
  4592  00D7  00D3               	movwf	??_CheckIF+1
  4593  00D8  3F41               	moviw [1]fsr1
  4594  00D9  00D4               	movwf	??_CheckIF+2
  4595  00DA  3F42               	moviw [2]fsr1
  4596  00DB  00D5               	movwf	??_CheckIF+3
  4597  00DC  3F43               	moviw [3]fsr1
  4598  00DD  00D6               	movwf	??_CheckIF+4
  4599  00DE  085A               	movf	CheckIF@i_434,w
  4600  00DF  00D7               	movwf	??_CheckIF+5
  4601  00E0  3001               	movlw	1
  4602  00E1                     u805:
  4603  00E1  35D7               	lslf	??_CheckIF+5,f
  4604  00E2  3EFF               	addlw	-1
  4605  00E3  1D03               	skipz
  4606  00E4  28E1               	goto	u805
  4607  00E5  3557               	lslf	??_CheckIF+5,w
  4608  00E6  3E38               	addlw	(low (_rx_reg| 0))& (0+255)
  4609  00E7  0086               	movwf	6
  4610  00E8  0187               	clrf	7
  4611  00E9  0853               	movf	??_CheckIF+1,w
  4612  00EA  3FC0               	movwi [0]fsr1
  4613  00EB  0854               	movf	??_CheckIF+2,w
  4614  00EC  3FC1               	movwi [1]fsr1
  4615  00ED  0855               	movf	??_CheckIF+3,w
  4616  00EE  3FC2               	movwi [2]fsr1
  4617  00EF  0856               	movf	??_CheckIF+4,w
  4618  00F0  3FC3               	movwi [3]fsr1
  4619                           
  4620                           ;mainfunctions.c: 173:                 tx_reg[i] = tx_reg_28[i];
  4621  00F1  085A               	movf	CheckIF@i_434,w
  4622  00F2  00D2               	movwf	??_CheckIF
  4623  00F3  3001               	movlw	1
  4624  00F4                     u815:
  4625  00F4  35D2               	lslf	??_CheckIF,f
  4626  00F5  3EFF               	addlw	-1
  4627  00F6  1D03               	skipz
  4628  00F7  28F4               	goto	u815
  4629  00F8  3552               	lslf	??_CheckIF,w
  4630  00F9  3EB8               	addlw	(low (_tx_reg_28| 0))& (0+255)
  4631  00FA  0086               	movwf	6
  4632  00FB  0187               	clrf	7
  4633  00FC  3F40               	moviw [0]fsr1
  4634  00FD  00D3               	movwf	??_CheckIF+1
  4635  00FE  3F41               	moviw [1]fsr1
  4636  00FF  00D4               	movwf	??_CheckIF+2
  4637  0100  3F42               	moviw [2]fsr1
  4638  0101  00D5               	movwf	??_CheckIF+3
  4639  0102  3F43               	moviw [3]fsr1
  4640  0103  00D6               	movwf	??_CheckIF+4
  4641  0104  085A               	movf	CheckIF@i_434,w
  4642  0105  00D7               	movwf	??_CheckIF+5
  4643  0106  3001               	movlw	1
  4644  0107                     u825:
  4645  0107  35D7               	lslf	??_CheckIF+5,f
  4646  0108  3EFF               	addlw	-1
  4647  0109  1D03               	skipz
  4648  010A  2907               	goto	u825
  4649  010B  3557               	lslf	??_CheckIF+5,w
  4650  010C  3E20               	addlw	(low (_tx_reg| 0))& (0+255)
  4651  010D  0086               	movwf	6
  4652  010E  0187               	clrf	7
  4653  010F  0853               	movf	??_CheckIF+1,w
  4654  0110  3FC0               	movwi [0]fsr1
  4655  0111  0854               	movf	??_CheckIF+2,w
  4656  0112  3FC1               	movwi [1]fsr1
  4657  0113  0855               	movf	??_CheckIF+3,w
  4658  0114  3FC2               	movwi [2]fsr1
  4659  0115  0856               	movf	??_CheckIF+4,w
  4660  0116  3FC3               	movwi [3]fsr1
  4661  0117                     l1382:
  4662                           
  4663                           ;mainfunctions.c: 174:             }
  4664  0117  3001               	movlw	1
  4665  0118  07DA               	addwf	CheckIF@i_434,f
  4666  0119  3000               	movlw	0
  4667  011A  3DDB               	addwfc	CheckIF@i_434+1,f
  4668  011B                     l1384:
  4669  011B  085B               	movf	CheckIF@i_434+1,w
  4670  011C  3A80               	xorlw	128
  4671  011D  00D2               	movwf	??_CheckIF
  4672  011E  3080               	movlw	128
  4673  011F  0252               	subwf	??_CheckIF,w
  4674  0120  1D03               	skipz
  4675  0121  2924               	goto	u835
  4676  0122  3006               	movlw	6
  4677  0123  025A               	subwf	CheckIF@i_434,w
  4678  0124                     u835:
  4679  0124  1C03               	skipc
  4680  0125  2927               	goto	u831
  4681  0126  2928               	goto	u830
  4682  0127                     u831:
  4683  0127  28CA               	goto	l1380
  4684  0128                     u830:
  4685  0128  28AC               	goto	l1372
  4686  0129                     l288:	
  4687                           ;mainfunctions.c: 178:         else if (PORTCbits.RC2 == 0)
  4688                           
  4689  0129  190E               	btfsc	14,2	;volatile
  4690  012A  292C               	goto	u841
  4691  012B  292D               	goto	u840
  4692  012C                     u841:
  4693  012C  2990               	goto	l1402
  4694  012D                     u840:
  4695  012D                     l1388:
  4696                           
  4697                           ;mainfunctions.c: 179:         {;mainfunctions.c: 180:             for (int i = 0; i <= 
      +                          5; i++)
  4698  012D  01DC               	clrf	CheckIF@i_435
  4699  012E  01DD               	clrf	CheckIF@i_435+1
  4700  012F                     l1394:
  4701                           
  4702                           ;mainfunctions.c: 181:             {;mainfunctions.c: 182:                 rx_reg[i] = r
      +                          x_reg_144[i];
  4703  012F  0140               	movlb	0	; select bank0
  4704  0130  085C               	movf	CheckIF@i_435,w
  4705  0131  00D2               	movwf	??_CheckIF
  4706  0132  3001               	movlw	1
  4707  0133                     u855:
  4708  0133  35D2               	lslf	??_CheckIF,f
  4709  0134  3EFF               	addlw	-1
  4710  0135  1D03               	skipz
  4711  0136  2933               	goto	u855
  4712  0137  3552               	lslf	??_CheckIF,w
  4713  0138  3E38               	addlw	(low (_rx_reg_144| (0+256)))& (0+255)
  4714  0139  0086               	movwf	6
  4715  013A  3001               	movlw	1	; select bank2/3
  4716  013B  0087               	movwf	7
  4717  013C  3F40               	moviw [0]fsr1
  4718  013D  00D3               	movwf	??_CheckIF+1
  4719  013E  3F41               	moviw [1]fsr1
  4720  013F  00D4               	movwf	??_CheckIF+2
  4721  0140  3F42               	moviw [2]fsr1
  4722  0141  00D5               	movwf	??_CheckIF+3
  4723  0142  3F43               	moviw [3]fsr1
  4724  0143  00D6               	movwf	??_CheckIF+4
  4725  0144  085C               	movf	CheckIF@i_435,w
  4726  0145  00D7               	movwf	??_CheckIF+5
  4727  0146  3001               	movlw	1
  4728  0147                     u865:
  4729  0147  35D7               	lslf	??_CheckIF+5,f
  4730  0148  3EFF               	addlw	-1
  4731  0149  1D03               	skipz
  4732  014A  2947               	goto	u865
  4733  014B  3557               	lslf	??_CheckIF+5,w
  4734  014C  3E38               	addlw	(low (_rx_reg| 0))& (0+255)
  4735  014D  0086               	movwf	6
  4736  014E  0187               	clrf	7
  4737  014F  0853               	movf	??_CheckIF+1,w
  4738  0150  3FC0               	movwi [0]fsr1
  4739  0151  0854               	movf	??_CheckIF+2,w
  4740  0152  3FC1               	movwi [1]fsr1
  4741  0153  0855               	movf	??_CheckIF+3,w
  4742  0154  3FC2               	movwi [2]fsr1
  4743  0155  0856               	movf	??_CheckIF+4,w
  4744  0156  3FC3               	movwi [3]fsr1
  4745                           
  4746                           ;mainfunctions.c: 183:                 tx_reg[i] = tx_reg_144[i];
  4747  0157  085C               	movf	CheckIF@i_435,w
  4748  0158  00D2               	movwf	??_CheckIF
  4749  0159  3001               	movlw	1
  4750  015A                     u875:
  4751  015A  35D2               	lslf	??_CheckIF,f
  4752  015B  3EFF               	addlw	-1
  4753  015C  1D03               	skipz
  4754  015D  295A               	goto	u875
  4755  015E  3552               	lslf	??_CheckIF,w
  4756  015F  3E20               	addlw	(low (_tx_reg_144| (0+256)))& (0+255)
  4757  0160  0086               	movwf	6
  4758  0161  3001               	movlw	1	; select bank2/3
  4759  0162  0087               	movwf	7
  4760  0163  3F40               	moviw [0]fsr1
  4761  0164  00D3               	movwf	??_CheckIF+1
  4762  0165  3F41               	moviw [1]fsr1
  4763  0166  00D4               	movwf	??_CheckIF+2
  4764  0167  3F42               	moviw [2]fsr1
  4765  0168  00D5               	movwf	??_CheckIF+3
  4766  0169  3F43               	moviw [3]fsr1
  4767  016A  00D6               	movwf	??_CheckIF+4
  4768  016B  085C               	movf	CheckIF@i_435,w
  4769  016C  00D7               	movwf	??_CheckIF+5
  4770  016D  3001               	movlw	1
  4771  016E                     u885:
  4772  016E  35D7               	lslf	??_CheckIF+5,f
  4773  016F  3EFF               	addlw	-1
  4774  0170  1D03               	skipz
  4775  0171  296E               	goto	u885
  4776  0172  3557               	lslf	??_CheckIF+5,w
  4777  0173  3E20               	addlw	(low (_tx_reg| 0))& (0+255)
  4778  0174  0086               	movwf	6
  4779  0175  0187               	clrf	7
  4780  0176  0853               	movf	??_CheckIF+1,w
  4781  0177  3FC0               	movwi [0]fsr1
  4782  0178  0854               	movf	??_CheckIF+2,w
  4783  0179  3FC1               	movwi [1]fsr1
  4784  017A  0855               	movf	??_CheckIF+3,w
  4785  017B  3FC2               	movwi [2]fsr1
  4786  017C  0856               	movf	??_CheckIF+4,w
  4787  017D  3FC3               	movwi [3]fsr1
  4788  017E                     l1396:
  4789                           
  4790                           ;mainfunctions.c: 184:             }
  4791  017E  3001               	movlw	1
  4792  017F  07DC               	addwf	CheckIF@i_435,f
  4793  0180  3000               	movlw	0
  4794  0181  3DDD               	addwfc	CheckIF@i_435+1,f
  4795  0182                     l1398:
  4796  0182  085D               	movf	CheckIF@i_435+1,w
  4797  0183  3A80               	xorlw	128
  4798  0184  00D2               	movwf	??_CheckIF
  4799  0185  3080               	movlw	128
  4800  0186  0252               	subwf	??_CheckIF,w
  4801  0187  1D03               	skipz
  4802  0188  298B               	goto	u895
  4803  0189  3006               	movlw	6
  4804  018A  025C               	subwf	CheckIF@i_435,w
  4805  018B                     u895:
  4806  018B  1C03               	skipc
  4807  018C  298E               	goto	u891
  4808  018D  298F               	goto	u890
  4809  018E                     u891:
  4810  018E  292F               	goto	l1394
  4811  018F                     u890:
  4812  018F  28AC               	goto	l1372
  4813  0190                     l1402:
  4814                           
  4815                           ;mainfunctions.c: 190:         SetADF4351_Rx();
  4816  0190  3182  22FE  3180   	fcall	_SetADF4351_Rx
  4817  0193                     l1404:
  4818                           
  4819                           ;mainfunctions.c: 191:         blink_status_rx(1, 'L');
  4820  0193  3001               	movlw	1
  4821  0194  00F0               	movwf	blink_status_rx@count_val
  4822  0195  3000               	movlw	0
  4823  0196  00F1               	movwf	blink_status_rx@count_val+1
  4824  0197  304C               	movlw	76
  4825  0198  0140               	movlb	0	; select bank0
  4826  0199  00D2               	movwf	??_CheckIF
  4827  019A  0852               	movf	??_CheckIF,w
  4828  019B  00F2               	movwf	blink_status_rx@duration_val
  4829  019C  3182  228D  3180   	fcall	_blink_status_rx
  4830  019F                     l1406:
  4831                           
  4832                           ;mainfunctions.c: 194:         if ((PORTAbits.RA3 == 1) && (G_STBY_STATE == 1))
  4833  019F  0140               	movlb	0	; select bank0
  4834  01A0  1D8C               	btfss	12,3	;volatile
  4835  01A1  29A3               	goto	u901
  4836  01A2  29A4               	goto	u900
  4837  01A3                     u901:
  4838  01A3  29B7               	goto	l1414
  4839  01A4                     u900:
  4840  01A4                     l1408:
  4841  01A4  0351               	decf	_G_STBY_STATE,w
  4842  01A5  1D03               	btfss	3,2
  4843  01A6  29A8               	goto	u911
  4844  01A7  29A9               	goto	u910
  4845  01A8                     u911:
  4846  01A8  29B7               	goto	l1414
  4847  01A9                     u910:
  4848  01A9                     l1410:
  4849                           
  4850                           ;mainfunctions.c: 195:         {;mainfunctions.c: 196:             SetADF4351_Tx();
  4851  01A9  3182  22CB  3180   	fcall	_SetADF4351_Tx
  4852  01AC                     l1412:
  4853                           
  4854                           ;mainfunctions.c: 197:             blink_status_tx(1, 'L');
  4855  01AC  3001               	movlw	1
  4856  01AD  00F0               	movwf	blink_status_tx@count_val
  4857  01AE  3000               	movlw	0
  4858  01AF  00F1               	movwf	blink_status_tx@count_val+1
  4859  01B0  304C               	movlw	76
  4860  01B1  00F2               	movwf	blink_status_tx@duration_val
  4861  01B2  3000               	movlw	0
  4862  01B3  00F3               	movwf	blink_status_tx@duration_val+1
  4863  01B4  3182  224E  3180   	fcall	_blink_status_tx
  4864  01B7                     l1414:
  4865                           
  4866                           ;mainfunctions.c: 200:         G_PORTC_OLD = PORTC;
  4867  01B7  0140               	movlb	0	; select bank0
  4868  01B8  080E               	movf	14,w	;volatile
  4869  01B9  00D2               	movwf	??_CheckIF
  4870  01BA  0852               	movf	??_CheckIF,w
  4871  01BB  00D0               	movwf	_G_PORTC_OLD
  4872  01BC                     l1416:
  4873                           
  4874                           ;mainfunctions.c: 201:         _delay((unsigned long)((5)*(1000000/4000000.0)));
  4875  01BC  0000               	nop
  4876  01BD                     l297:	
  4877                           ;mainfunctions.c: 203:     }
  4878                           
  4879  01BD  0008               	return
  4880  01BE                     __end_of_CheckIF:
  4881                           
  4882                           	psect	text16
  4883  024E                     __ptext16:	
  4884 ;; *************** function _blink_status_tx *****************
  4885 ;; Defined at:
  4886 ;;		line 51 in file "mainfunctions.c"
  4887 ;; Parameters:    Size  Location     Type
  4888 ;;  count_val       2    0[COMMON] int 
  4889 ;;  duration_val    2    2[COMMON] int 
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;  i               2    5[COMMON] int 
  4892 ;; Return value:  Size  Location     Type
  4893 ;;                  1    wreg      void 
  4894 ;; Registers used:
  4895 ;;		wreg, status,2, status,0
  4896 ;; Tracked objects:
  4897 ;;		On entry : 0/0
  4898 ;;		On exit  : 0/0
  4899 ;;		Unchanged: 0/0
  4900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  4901 ;;      Params:         4       0       0       0       0       0       0       0
  4902 ;;      Locals:         2       0       0       0       0       0       0       0
  4903 ;;      Temps:          1       0       0       0       0       0       0       0
  4904 ;;      Totals:         7       0       0       0       0       0       0       0
  4905 ;;Total ram usage:        7 bytes
  4906 ;; Hardware stack levels used:    1
  4907 ;; Hardware stack levels required when called:    4
  4908 ;; This function calls:
  4909 ;;		Nothing
  4910 ;; This function is called by:
  4911 ;;		_CheckIF
  4912 ;; This function uses a non-reentrant model
  4913 ;;
  4914                           
  4915                           
  4916                           ;psect for function _blink_status_tx
  4917  024E                     _blink_status_tx:
  4918  024E                     l204:	
  4919                           ;incstack = 0
  4920                           ; Regs used in _blink_status_tx: [wreg+status,2+status,0]
  4921                           ;mainfunctions.c: 51: void blink_status_tx(int count_val, int duration_val);mainfunction
      +                          s.c: 52: {;mainfunctions.c: 53:     do { LATBbits.LATB5 = 0; } while(0);
  4922                           
  4923  024E  0140               	movlb	0	; select bank0
  4924  024F  1299               	bcf	25,5	;volatile
  4925  0250                     l205:
  4926                           
  4927                           ;mainfunctions.c: 54:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  4928  0250  3200               	nop2	;2 cycle nop
  4929  0251                     l1260:
  4930                           
  4931                           ;mainfunctions.c: 55:     for (int i = 0; i < count_val; i++)
  4932  0251  01F5               	clrf	blink_status_tx@i
  4933  0252  01F6               	clrf	blink_status_tx@i+1
  4934  0253  2A7C               	goto	l206
  4935  0254                     l1262:
  4936  0254  1003               	clrc
  4937  0255  0140               	movlb	0	; select bank0
  4938  0256  1E99               	btfss	25,5	;volatile
  4939  0257  1403               	setc
  4940  0258  1803               	btfsc	3,0
  4941  0259  2A5B               	goto	u601
  4942  025A  2A5E               	goto	u600
  4943  025B                     u601:
  4944  025B  0140               	movlb	0	; select bank0
  4945  025C  1699               	bsf	25,5	;volatile
  4946  025D  2A60               	goto	u614
  4947  025E                     u600:
  4948  025E  0140               	movlb	0	; select bank0
  4949  025F  1299               	bcf	25,5	;volatile
  4950  0260                     u614:
  4951  0260                     l1264:
  4952                           
  4953                           ;mainfunctions.c: 58:         if (duration_val == 'S')
  4954  0260  3053               	movlw	83
  4955  0261  0672               	xorwf	blink_status_tx@duration_val,w
  4956  0262  0473               	iorwf	blink_status_tx@duration_val+1,w
  4957  0263  1D03               	btfss	3,2
  4958  0264  2A66               	goto	u621
  4959  0265  2A67               	goto	u620
  4960  0266                     u621:
  4961  0266  2A70               	goto	l1268
  4962  0267                     u620:
  4963  0267                     l1266:
  4964                           
  4965                           ;mainfunctions.c: 59:             _delay((unsigned long)((50000)*(1000000/4000000.0)));
  4966  0267  3011               	movlw	17
  4967  0268  00F4               	movwf	??_blink_status_tx
  4968  0269  303A               	movlw	58
  4969  026A                     u1037:
  4970  026A  0B89               	decfsz	9,f
  4971  026B  2A6A               	goto	u1037
  4972  026C  0BF4               	decfsz	??_blink_status_tx,f
  4973  026D  2A6A               	goto	u1037
  4974  026E  3200               	nop2
  4975  026F  2A78               	goto	l211
  4976  0270                     l1268:
  4977                           
  4978                           ;mainfunctions.c: 61:             _delay((unsigned long)((500000)*(1000000/4000000.0)));
  4979  0270  30A3               	movlw	163
  4980  0271  00F4               	movwf	??_blink_status_tx
  4981  0272  3055               	movlw	85
  4982  0273                     u1047:
  4983  0273  0B89               	decfsz	9,f
  4984  0274  2A73               	goto	u1047
  4985  0275  0BF4               	decfsz	??_blink_status_tx,f
  4986  0276  2A73               	goto	u1047
  4987  0277  0000               	nop
  4988  0278                     l211:
  4989                           
  4990                           ;mainfunctions.c: 62:     }
  4991  0278  3001               	movlw	1
  4992  0279  07F5               	addwf	blink_status_tx@i,f
  4993  027A  3000               	movlw	0
  4994  027B  3DF6               	addwfc	blink_status_tx@i+1,f
  4995  027C                     l206:
  4996  027C  0876               	movf	blink_status_tx@i+1,w
  4997  027D  3A80               	xorlw	128
  4998  027E  00F4               	movwf	??_blink_status_tx
  4999  027F  0871               	movf	blink_status_tx@count_val+1,w
  5000  0280  3A80               	xorlw	128
  5001  0281  0274               	subwf	??_blink_status_tx,w
  5002  0282  1D03               	skipz
  5003  0283  2A86               	goto	u635
  5004  0284  0870               	movf	blink_status_tx@count_val,w
  5005  0285  0275               	subwf	blink_status_tx@i,w
  5006  0286                     u635:
  5007  0286  1C03               	skipc
  5008  0287  2A89               	goto	u631
  5009  0288  2A8A               	goto	u630
  5010  0289                     u631:
  5011  0289  2A54               	goto	l1262
  5012  028A                     u630:
  5013  028A                     l213:	
  5014                           ;mainfunctions.c: 63:     do { LATBbits.LATB5 = 0; } while(0);
  5015                           
  5016  028A  0140               	movlb	0	; select bank0
  5017  028B  1299               	bcf	25,5	;volatile
  5018  028C                     l215:
  5019  028C  0008               	return
  5020  028D                     __end_of_blink_status_tx:
  5021                           
  5022                           	psect	text17
  5023  028D                     __ptext17:	
  5024 ;; *************** function _blink_status_rx *****************
  5025 ;; Defined at:
  5026 ;;		line 36 in file "mainfunctions.c"
  5027 ;; Parameters:    Size  Location     Type
  5028 ;;  count_val       2    0[COMMON] int 
  5029 ;;  duration_val    1    2[COMMON] unsigned char 
  5030 ;; Auto vars:     Size  Location     Type
  5031 ;;  i               2    4[COMMON] int 
  5032 ;; Return value:  Size  Location     Type
  5033 ;;                  1    wreg      void 
  5034 ;; Registers used:
  5035 ;;		wreg, status,2, status,0
  5036 ;; Tracked objects:
  5037 ;;		On entry : 0/0
  5038 ;;		On exit  : 0/0
  5039 ;;		Unchanged: 0/0
  5040 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5041 ;;      Params:         3       0       0       0       0       0       0       0
  5042 ;;      Locals:         2       0       0       0       0       0       0       0
  5043 ;;      Temps:          1       0       0       0       0       0       0       0
  5044 ;;      Totals:         6       0       0       0       0       0       0       0
  5045 ;;Total ram usage:        6 bytes
  5046 ;; Hardware stack levels used:    1
  5047 ;; Hardware stack levels required when called:    4
  5048 ;; This function calls:
  5049 ;;		Nothing
  5050 ;; This function is called by:
  5051 ;;		_CheckIF
  5052 ;; This function uses a non-reentrant model
  5053 ;;
  5054                           
  5055                           
  5056                           ;psect for function _blink_status_rx
  5057  028D                     _blink_status_rx:
  5058  028D                     l190:	
  5059                           ;incstack = 0
  5060                           ; Regs used in _blink_status_rx: [wreg+status,2+status,0]
  5061                           ;mainfunctions.c: 36: void blink_status_rx(int count_val, char duration_val);mainfunctio
      +                          ns.c: 37: {;mainfunctions.c: 38:     do { LATBbits.LATB4 = 0; } while(0);
  5062                           
  5063  028D  0140               	movlb	0	; select bank0
  5064  028E  1219               	bcf	25,4	;volatile
  5065  028F                     l191:
  5066                           
  5067                           ;mainfunctions.c: 39:     _delay((unsigned long)((10)*(1000000/4000000.0)));
  5068  028F  3200               	nop2	;2 cycle nop
  5069  0290                     l1250:
  5070                           
  5071                           ;mainfunctions.c: 40:     for (int i = 0; i < count_val; i++)
  5072  0290  01F4               	clrf	blink_status_rx@i
  5073  0291  01F5               	clrf	blink_status_rx@i+1
  5074  0292  2ABA               	goto	l192
  5075  0293                     l1252:
  5076  0293  1003               	clrc
  5077  0294  0140               	movlb	0	; select bank0
  5078  0295  1E19               	btfss	25,4	;volatile
  5079  0296  1403               	setc
  5080  0297  1803               	btfsc	3,0
  5081  0298  2A9A               	goto	u561
  5082  0299  2A9D               	goto	u560
  5083  029A                     u561:
  5084  029A  0140               	movlb	0	; select bank0
  5085  029B  1619               	bsf	25,4	;volatile
  5086  029C  2A9F               	goto	u574
  5087  029D                     u560:
  5088  029D  0140               	movlb	0	; select bank0
  5089  029E  1219               	bcf	25,4	;volatile
  5090  029F                     u574:
  5091  029F                     l1254:
  5092                           
  5093                           ;mainfunctions.c: 43:         if (duration_val == 'S')
  5094  029F  3053               	movlw	83
  5095  02A0  0672               	xorwf	blink_status_rx@duration_val,w
  5096  02A1  1D03               	btfss	3,2
  5097  02A2  2AA4               	goto	u581
  5098  02A3  2AA5               	goto	u580
  5099  02A4                     u581:
  5100  02A4  2AAE               	goto	l1258
  5101  02A5                     u580:
  5102  02A5                     l1256:
  5103                           
  5104                           ;mainfunctions.c: 44:             _delay((unsigned long)((50000)*(1000000/4000000.0)));
  5105  02A5  3011               	movlw	17
  5106  02A6  00F3               	movwf	??_blink_status_rx
  5107  02A7  303A               	movlw	58
  5108  02A8                     u1057:
  5109  02A8  0B89               	decfsz	9,f
  5110  02A9  2AA8               	goto	u1057
  5111  02AA  0BF3               	decfsz	??_blink_status_rx,f
  5112  02AB  2AA8               	goto	u1057
  5113  02AC  3200               	nop2
  5114  02AD  2AB6               	goto	l197
  5115  02AE                     l1258:
  5116                           
  5117                           ;mainfunctions.c: 46:             _delay((unsigned long)((500000)*(1000000/4000000.0)));
  5118  02AE  30A3               	movlw	163
  5119  02AF  00F3               	movwf	??_blink_status_rx
  5120  02B0  3055               	movlw	85
  5121  02B1                     u1067:
  5122  02B1  0B89               	decfsz	9,f
  5123  02B2  2AB1               	goto	u1067
  5124  02B3  0BF3               	decfsz	??_blink_status_rx,f
  5125  02B4  2AB1               	goto	u1067
  5126  02B5  0000               	nop
  5127  02B6                     l197:
  5128                           
  5129                           ;mainfunctions.c: 47:     }
  5130  02B6  3001               	movlw	1
  5131  02B7  07F4               	addwf	blink_status_rx@i,f
  5132  02B8  3000               	movlw	0
  5133  02B9  3DF5               	addwfc	blink_status_rx@i+1,f
  5134  02BA                     l192:
  5135  02BA  0875               	movf	blink_status_rx@i+1,w
  5136  02BB  3A80               	xorlw	128
  5137  02BC  00F3               	movwf	??_blink_status_rx
  5138  02BD  0871               	movf	blink_status_rx@count_val+1,w
  5139  02BE  3A80               	xorlw	128
  5140  02BF  0273               	subwf	??_blink_status_rx,w
  5141  02C0  1D03               	skipz
  5142  02C1  2AC4               	goto	u595
  5143  02C2  0870               	movf	blink_status_rx@count_val,w
  5144  02C3  0274               	subwf	blink_status_rx@i,w
  5145  02C4                     u595:
  5146  02C4  1C03               	skipc
  5147  02C5  2AC7               	goto	u591
  5148  02C6  2AC8               	goto	u590
  5149  02C7                     u591:
  5150  02C7  2A93               	goto	l1252
  5151  02C8                     u590:
  5152  02C8                     l199:	
  5153                           ;mainfunctions.c: 48:     do { LATBbits.LATB4 = 0; } while(0);
  5154                           
  5155  02C8  0140               	movlb	0	; select bank0
  5156  02C9  1219               	bcf	25,4	;volatile
  5157  02CA                     l201:
  5158  02CA  0008               	return
  5159  02CB                     __end_of_blink_status_rx:
  5160                           
  5161                           	psect	text18
  5162  02CB                     __ptext18:	
  5163 ;; *************** function _SetADF4351_Tx *****************
  5164 ;; Defined at:
  5165 ;;		line 121 in file "mainfunctions.c"
  5166 ;; Parameters:    Size  Location     Type
  5167 ;;		None
  5168 ;; Auto vars:     Size  Location     Type
  5169 ;;  i               2    7[COMMON] int 
  5170 ;; Return value:  Size  Location     Type
  5171 ;;                  1    wreg      void 
  5172 ;; Registers used:
  5173 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5174 ;; Tracked objects:
  5175 ;;		On entry : 0/0
  5176 ;;		On exit  : 0/0
  5177 ;;		Unchanged: 0/0
  5178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5179 ;;      Params:         0       0       0       0       0       0       0       0
  5180 ;;      Locals:         2       0       0       0       0       0       0       0
  5181 ;;      Temps:          1       0       0       0       0       0       0       0
  5182 ;;      Totals:         3       0       0       0       0       0       0       0
  5183 ;;Total ram usage:        3 bytes
  5184 ;; Hardware stack levels used:    1
  5185 ;; Hardware stack levels required when called:    5
  5186 ;; This function calls:
  5187 ;;		_WriteRegister32
  5188 ;; This function is called by:
  5189 ;;		_CheckIF
  5190 ;;		_CheckStandBy
  5191 ;; This function uses a non-reentrant model
  5192 ;;
  5193                           
  5194                           
  5195                           ;psect for function _SetADF4351_Tx
  5196  02CB                     _SetADF4351_Tx:
  5197  02CB                     l1296:	
  5198                           ;incstack = 0
  5199                           ; Regs used in _SetADF4351_Tx: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5200                           
  5201                           
  5202                           ;mainfunctions.c: 123:     for (int i = 5; i >= 0; i--)
  5203  02CB  3005               	movlw	5
  5204  02CC  00F7               	movwf	SetADF4351_Tx@i
  5205  02CD  3000               	movlw	0
  5206  02CE  00F8               	movwf	SetADF4351_Tx@i+1
  5207  02CF                     l266:	
  5208                           ;mainfunctions.c: 124:     {;mainfunctions.c: 125:         do { LATCbits.LATC0 = 0; } wh
      +                          ile(0);
  5209                           
  5210  02CF  0140               	movlb	0	; select bank0
  5211  02D0  101A               	bcf	26,0	;volatile
  5212  02D1                     l267:
  5213                           
  5214                           ;mainfunctions.c: 126:         _delay((unsigned long)((10)*(1000000/4000000.0)));
  5215  02D1  3200               	nop2	;2 cycle nop
  5216  02D2                     l1302:
  5217                           
  5218                           ;mainfunctions.c: 127:         WriteRegister32(tx_reg[i]);
  5219  02D2  0877               	movf	SetADF4351_Tx@i,w
  5220  02D3  00F6               	movwf	??_SetADF4351_Tx
  5221  02D4  3001               	movlw	1
  5222  02D5                     u665:
  5223  02D5  35F6               	lslf	??_SetADF4351_Tx,f
  5224  02D6  3EFF               	addlw	-1
  5225  02D7  1D03               	skipz
  5226  02D8  2AD5               	goto	u665
  5227  02D9  3576               	lslf	??_SetADF4351_Tx,w
  5228  02DA  3E20               	addlw	(low (_tx_reg| 0))& (0+255)
  5229  02DB  0086               	movwf	6
  5230  02DC  0187               	clrf	7
  5231  02DD  3F40               	moviw [0]fsr1
  5232  02DE  00F0               	movwf	WriteRegister32@value
  5233  02DF  3F41               	moviw [1]fsr1
  5234  02E0  00F1               	movwf	WriteRegister32@value+1
  5235  02E1  3F42               	moviw [2]fsr1
  5236  02E2  00F2               	movwf	WriteRegister32@value+2
  5237  02E3  3F43               	moviw [3]fsr1
  5238  02E4  00F3               	movwf	WriteRegister32@value+3
  5239  02E5  3183  235E  3182   	fcall	_WriteRegister32
  5240  02E8                     l1304:
  5241  02E8  0140               	movlb	0	; select bank0
  5242  02E9  141A               	bsf	26,0	;volatile
  5243  02EA                     l1306:
  5244                           
  5245                           ;mainfunctions.c: 129:         _delay((unsigned long)((10)*(1000000/4000000.0)));
  5246  02EA  3200               	nop2	;2 cycle nop
  5247  02EB                     l1308:
  5248  02EB  0140               	movlb	0	; select bank0
  5249  02EC  101A               	bcf	26,0	;volatile
  5250  02ED                     l1310:
  5251                           
  5252                           ;mainfunctions.c: 131:         _delay((unsigned long)((10)*(1000000/4000000.0)));
  5253  02ED  3200               	nop2	;2 cycle nop
  5254  02EE                     l1312:
  5255  02EE  0140               	movlb	0	; select bank0
  5256  02EF  1018               	bcf	24,0	;volatile
  5257  02F0                     l1314:
  5258                           
  5259                           ;mainfunctions.c: 133:         _delay((unsigned long)((10)*(1000000/4000000.0)));
  5260  02F0  3200               	nop2	;2 cycle nop
  5261  02F1                     l1316:
  5262                           
  5263                           ;mainfunctions.c: 134:     }
  5264  02F1  30FF               	movlw	255
  5265  02F2  07F7               	addwf	SetADF4351_Tx@i,f
  5266  02F3  30FF               	movlw	255
  5267  02F4  3DF8               	addwfc	SetADF4351_Tx@i+1,f
  5268  02F5                     l1318:
  5269  02F5  1FF8               	btfss	SetADF4351_Tx@i+1,7
  5270  02F6  2AF8               	goto	u671
  5271  02F7  2AF9               	goto	u670
  5272  02F8                     u671:
  5273  02F8  2ACF               	goto	l266
  5274  02F9                     u670:
  5275  02F9                     l1320:
  5276                           
  5277                           ;mainfunctions.c: 135:     _delay((unsigned long)((500)*(1000000/4000000.0)));
  5278  02F9  3029               	movlw	41
  5279  02FA                     u1077:
  5280  02FA  0B89               	decfsz	9,f
  5281  02FB  2AFA               	goto	u1077
  5282  02FC  3200               	nop2
  5283  02FD                     l274:
  5284  02FD  0008               	return
  5285  02FE                     __end_of_SetADF4351_Tx:
  5286                           
  5287                           	psect	text19
  5288  02FE                     __ptext19:	
  5289 ;; *************** function _SetADF4351_Rx *****************
  5290 ;; Defined at:
  5291 ;;		line 104 in file "mainfunctions.c"
  5292 ;; Parameters:    Size  Location     Type
  5293 ;;		None
  5294 ;; Auto vars:     Size  Location     Type
  5295 ;;  i               2    7[COMMON] int 
  5296 ;; Return value:  Size  Location     Type
  5297 ;;                  1    wreg      void 
  5298 ;; Registers used:
  5299 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5300 ;; Tracked objects:
  5301 ;;		On entry : 0/0
  5302 ;;		On exit  : 0/0
  5303 ;;		Unchanged: 0/0
  5304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5305 ;;      Params:         0       0       0       0       0       0       0       0
  5306 ;;      Locals:         2       0       0       0       0       0       0       0
  5307 ;;      Temps:          1       0       0       0       0       0       0       0
  5308 ;;      Totals:         3       0       0       0       0       0       0       0
  5309 ;;Total ram usage:        3 bytes
  5310 ;; Hardware stack levels used:    1
  5311 ;; Hardware stack levels required when called:    5
  5312 ;; This function calls:
  5313 ;;		_WriteRegister32
  5314 ;; This function is called by:
  5315 ;;		_CheckIF
  5316 ;; This function uses a non-reentrant model
  5317 ;;
  5318                           
  5319                           
  5320                           ;psect for function _SetADF4351_Rx
  5321  02FE                     _SetADF4351_Rx:
  5322  02FE                     l1270:	
  5323                           ;incstack = 0
  5324                           ; Regs used in _SetADF4351_Rx: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5325                           
  5326                           
  5327                           ;mainfunctions.c: 106:     for (int i = 5; i >= 0; i--)
  5328  02FE  3005               	movlw	5
  5329  02FF  00F7               	movwf	SetADF4351_Rx@i
  5330  0300  3000               	movlw	0
  5331  0301  00F8               	movwf	SetADF4351_Rx@i+1
  5332  0302                     l253:	
  5333                           ;mainfunctions.c: 107:     {;mainfunctions.c: 108:         do { LATAbits.LATA2 = 0; } wh
      +                          ile(0);
  5334                           
  5335  0302  0140               	movlb	0	; select bank0
  5336  0303  1118               	bcf	24,2	;volatile
  5337  0304                     l254:
  5338                           
  5339                           ;mainfunctions.c: 109:         _delay((unsigned long)((10)*(1000000/4000000.0)));
  5340  0304  3200               	nop2	;2 cycle nop
  5341  0305                     l1276:
  5342                           
  5343                           ;mainfunctions.c: 110:         WriteRegister32(rx_reg[i]);
  5344  0305  0877               	movf	SetADF4351_Rx@i,w
  5345  0306  00F6               	movwf	??_SetADF4351_Rx
  5346  0307  3001               	movlw	1
  5347  0308                     u645:
  5348  0308  35F6               	lslf	??_SetADF4351_Rx,f
  5349  0309  3EFF               	addlw	-1
  5350  030A  1D03               	skipz
  5351  030B  2B08               	goto	u645
  5352  030C  3576               	lslf	??_SetADF4351_Rx,w
  5353  030D  3E38               	addlw	(low (_rx_reg| 0))& (0+255)
  5354  030E  0086               	movwf	6
  5355  030F  0187               	clrf	7
  5356  0310  3F40               	moviw [0]fsr1
  5357  0311  00F0               	movwf	WriteRegister32@value
  5358  0312  3F41               	moviw [1]fsr1
  5359  0313  00F1               	movwf	WriteRegister32@value+1
  5360  0314  3F42               	moviw [2]fsr1
  5361  0315  00F2               	movwf	WriteRegister32@value+2
  5362  0316  3F43               	moviw [3]fsr1
  5363  0317  00F3               	movwf	WriteRegister32@value+3
  5364  0318  3183  235E  3182   	fcall	_WriteRegister32
  5365  031B                     l1278:
  5366  031B  0140               	movlb	0	; select bank0
  5367  031C  1518               	bsf	24,2	;volatile
  5368  031D                     l1280:
  5369                           
  5370                           ;mainfunctions.c: 112:         _delay((unsigned long)((10)*(1000000/4000000.0)));
  5371  031D  3200               	nop2	;2 cycle nop
  5372  031E                     l1282:
  5373  031E  0140               	movlb	0	; select bank0
  5374  031F  1118               	bcf	24,2	;volatile
  5375  0320                     l1284:
  5376                           
  5377                           ;mainfunctions.c: 114:         _delay((unsigned long)((10)*(1000000/4000000.0)));
  5378  0320  3200               	nop2	;2 cycle nop
  5379  0321                     l1286:
  5380  0321  0140               	movlb	0	; select bank0
  5381  0322  1018               	bcf	24,0	;volatile
  5382  0323                     l1288:
  5383                           
  5384                           ;mainfunctions.c: 116:         _delay((unsigned long)((10)*(1000000/4000000.0)));
  5385  0323  3200               	nop2	;2 cycle nop
  5386  0324                     l1290:
  5387                           
  5388                           ;mainfunctions.c: 117:     }
  5389  0324  30FF               	movlw	255
  5390  0325  07F7               	addwf	SetADF4351_Rx@i,f
  5391  0326  30FF               	movlw	255
  5392  0327  3DF8               	addwfc	SetADF4351_Rx@i+1,f
  5393  0328                     l1292:
  5394  0328  1FF8               	btfss	SetADF4351_Rx@i+1,7
  5395  0329  2B2B               	goto	u651
  5396  032A  2B2C               	goto	u650
  5397  032B                     u651:
  5398  032B  2B02               	goto	l253
  5399  032C                     u650:
  5400  032C                     l1294:
  5401                           
  5402                           ;mainfunctions.c: 118:     _delay((unsigned long)((500)*(1000000/4000000.0)));
  5403  032C  3029               	movlw	41
  5404  032D                     u1087:
  5405  032D  0B89               	decfsz	9,f
  5406  032E  2B2D               	goto	u1087
  5407  032F  3200               	nop2
  5408  0330                     l261:
  5409  0330  0008               	return
  5410  0331                     __end_of_SetADF4351_Rx:
  5411                           
  5412                           	psect	text20
  5413  035E                     __ptext20:	
  5414 ;; *************** function _WriteRegister32 *****************
  5415 ;; Defined at:
  5416 ;;		line 90 in file "mainfunctions.c"
  5417 ;; Parameters:    Size  Location     Type
  5418 ;;  value           4    0[COMMON] unsigned long 
  5419 ;; Auto vars:     Size  Location     Type
  5420 ;;  i               2    4[COMMON] int 
  5421 ;; Return value:  Size  Location     Type
  5422 ;;                  1    wreg      void 
  5423 ;; Registers used:
  5424 ;;		wreg, status,2, status,0
  5425 ;; Tracked objects:
  5426 ;;		On entry : 0/0
  5427 ;;		On exit  : 0/0
  5428 ;;		Unchanged: 0/0
  5429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5430 ;;      Params:         4       0       0       0       0       0       0       0
  5431 ;;      Locals:         2       0       0       0       0       0       0       0
  5432 ;;      Temps:          0       0       0       0       0       0       0       0
  5433 ;;      Totals:         6       0       0       0       0       0       0       0
  5434 ;;Total ram usage:        6 bytes
  5435 ;; Hardware stack levels used:    1
  5436 ;; Hardware stack levels required when called:    4
  5437 ;; This function calls:
  5438 ;;		Nothing
  5439 ;; This function is called by:
  5440 ;;		_SetADF4351_Rx
  5441 ;;		_SetADF4351_Tx
  5442 ;; This function uses a non-reentrant model
  5443 ;;
  5444                           
  5445                           
  5446                           ;psect for function _WriteRegister32
  5447  035E                     _WriteRegister32:
  5448  035E                     l1206:	
  5449                           ;incstack = 0
  5450                           ; Regs used in _WriteRegister32: [wreg+status,2+status,0]
  5451                           
  5452                           
  5453                           ;mainfunctions.c: 90: void WriteRegister32(unsigned long value);mainfunctions.c: 91: {;m
      +                          ainfunctions.c: 92:     for (int i = 31; i >= 0; i--)
  5454  035E  301F               	movlw	31
  5455  035F  00F4               	movwf	WriteRegister32@i
  5456  0360  3000               	movlw	0
  5457  0361  00F5               	movwf	WriteRegister32@i+1
  5458  0362                     l242:
  5459                           
  5460                           ;mainfunctions.c: 93:     {;mainfunctions.c: 94:         PORTAbits.RA0 = (value & 0x8000
      +                          0000) ? 1 : 0;
  5461  0362  1BF3               	btfsc	WriteRegister32@value+3,7
  5462  0363  2B65               	goto	u521
  5463  0364  2B68               	goto	u520
  5464  0365                     u521:
  5465  0365  0140               	movlb	0	; select bank0
  5466  0366  140C               	bsf	12,0	;volatile
  5467  0367  2B6A               	goto	u534
  5468  0368                     u520:
  5469  0368  0140               	movlb	0	; select bank0
  5470  0369  100C               	bcf	12,0	;volatile
  5471  036A                     u534:
  5472                           
  5473                           ;mainfunctions.c: 95:         _delay((unsigned long)((5)*(1000000/4000000.0)));
  5474  036A  0000               	nop
  5475  036B                     l244:	
  5476                           ;mainfunctions.c: 96:         do { LATAbits.LATA1 = 1; } while(0);
  5477                           
  5478  036B  0140               	movlb	0	; select bank0
  5479  036C  1498               	bsf	24,1	;volatile
  5480  036D                     l245:
  5481                           
  5482                           ;mainfunctions.c: 97:         _delay((unsigned long)((5)*(1000000/4000000.0)));
  5483  036D  0000               	nop
  5484  036E                     l246:	
  5485                           ;mainfunctions.c: 98:         do { LATAbits.LATA1 = 0; } while(0);
  5486                           
  5487  036E  0140               	movlb	0	; select bank0
  5488  036F  1098               	bcf	24,1	;volatile
  5489  0370                     l247:
  5490                           
  5491                           ;mainfunctions.c: 99:         _delay((unsigned long)((5)*(1000000/4000000.0)));
  5492  0370  0000               	nop
  5493  0371                     l1212:
  5494                           
  5495                           ;mainfunctions.c: 100:         value <<= 1;
  5496  0371  3001               	movlw	1
  5497  0372                     u545:
  5498  0372  35F0               	lslf	WriteRegister32@value,f
  5499  0373  0DF1               	rlf	WriteRegister32@value+1,f
  5500  0374  0DF2               	rlf	WriteRegister32@value+2,f
  5501  0375  0DF3               	rlf	WriteRegister32@value+3,f
  5502  0376  0B89               	decfsz	9,f
  5503  0377  2B72               	goto	u545
  5504  0378                     l1214:
  5505                           
  5506                           ;mainfunctions.c: 101:     }
  5507  0378  30FF               	movlw	255
  5508  0379  07F4               	addwf	WriteRegister32@i,f
  5509  037A  30FF               	movlw	255
  5510  037B  3DF5               	addwfc	WriteRegister32@i+1,f
  5511  037C                     l1216:
  5512  037C  1FF5               	btfss	WriteRegister32@i+1,7
  5513  037D  2B7F               	goto	u551
  5514  037E  2B80               	goto	u550
  5515  037F                     u551:
  5516  037F  2B62               	goto	l242
  5517  0380                     u550:
  5518  0380                     l248:
  5519  0380  0008               	return
  5520  0381                     __end_of_WriteRegister32:
  5521                           
  5522                           	psect	intentry
  5523  0004                     __pintentry:	
  5524 ;; *************** function _INTERRUPT_InterruptManager *****************
  5525 ;; Defined at:
  5526 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  5527 ;; Parameters:    Size  Location     Type
  5528 ;;		None
  5529 ;; Auto vars:     Size  Location     Type
  5530 ;;		None
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  1    wreg      void 
  5533 ;; Registers used:
  5534 ;;		wreg, status,2, status,0, pclath, cstack
  5535 ;; Tracked objects:
  5536 ;;		On entry : 0/0
  5537 ;;		On exit  : 0/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5540 ;;      Params:         0       0       0       0       0       0       0       0
  5541 ;;      Locals:         0       0       0       0       0       0       0       0
  5542 ;;      Temps:          0       0       0       0       0       0       0       0
  5543 ;;      Totals:         0       0       0       0       0       0       0       0
  5544 ;;Total ram usage:        0 bytes
  5545 ;; Hardware stack levels used:    1
  5546 ;; Hardware stack levels required when called:    3
  5547 ;; This function calls:
  5548 ;;		_PIN_MANAGER_IOC
  5549 ;; This function is called by:
  5550 ;;		Interrupt level 1
  5551 ;; This function uses a non-reentrant model
  5552 ;;
  5553                           
  5554  0004                     _INTERRUPT_InterruptManager:
  5555                           
  5556                           ;incstack = 0
  5557  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5558                           
  5559                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  5560  0005  3180               	pagesel	$
  5561  0006                     i1l1188:
  5562                           
  5563                           ;mcc_generated_files/interrupt_manager.c: 55:     if(PIE0bits.IOCIE == 1 && PIR0bits.IOC
      +                          IF == 1)
  5564  0006  014E               	movlb	14	; select bank14
  5565  0007  1E16               	btfss	22,4	;volatile
  5566  0008  280A               	goto	u50_21
  5567  0009  280B               	goto	u50_20
  5568  000A                     u50_21:
  5569  000A  2812               	goto	i1l54
  5570  000B                     u50_20:
  5571  000B                     i1l1190:
  5572  000B  1E0C               	btfss	12,4	;volatile
  5573  000C  280E               	goto	u51_21
  5574  000D  280F               	goto	u51_20
  5575  000E                     u51_21:
  5576  000E  2812               	goto	i1l54
  5577  000F                     u51_20:
  5578  000F                     i1l1192:
  5579                           
  5580                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         PIN_MANAGER_IOC();
  5581  000F  3184  242B  3180   	fcall	_PIN_MANAGER_IOC
  5582  0012                     i1l54:	
  5583                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  5584                           
  5585  0012  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5586  0013  0009               	retfie
  5587  0014                     __end_of_INTERRUPT_InterruptManager:
  5588                           
  5589                           	psect	text22
  5590  042B                     __ptext22:	
  5591 ;; *************** function _PIN_MANAGER_IOC *****************
  5592 ;; Defined at:
  5593 ;;		line 129 in file "mcc_generated_files/pin_manager.c"
  5594 ;; Parameters:    Size  Location     Type
  5595 ;;		None
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;		None
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  1    wreg      void 
  5600 ;; Registers used:
  5601 ;;		wreg, status,2, status,0, pclath, cstack
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5607 ;;      Params:         0       0       0       0       0       0       0       0
  5608 ;;      Locals:         0       0       0       0       0       0       0       0
  5609 ;;      Temps:          0       0       0       0       0       0       0       0
  5610 ;;      Totals:         0       0       0       0       0       0       0       0
  5611 ;;Total ram usage:        0 bytes
  5612 ;; Hardware stack levels used:    1
  5613 ;; Hardware stack levels required when called:    2
  5614 ;; This function calls:
  5615 ;;		_IOCAF5_ISR
  5616 ;; This function is called by:
  5617 ;;		_INTERRUPT_InterruptManager
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           
  5622                           ;psect for function _PIN_MANAGER_IOC
  5623  042B                     _PIN_MANAGER_IOC:
  5624  042B                     i1l1082:	
  5625                           ;incstack = 0
  5626                           ; Regs used in _PIN_MANAGER_IOC: [wreg+status,2+status,0+pclath+cstack]
  5627                           
  5628                           
  5629                           ;mcc_generated_files/pin_manager.c: 132:     if(IOCAFbits.IOCAF5 == 1)
  5630  042B  017E               	movlb	62	; select bank62
  5631  042C  1EBF               	btfss	63,5	;volatile
  5632  042D  2C2F               	goto	u18_21
  5633  042E  2C30               	goto	u18_20
  5634  042F                     u18_21:
  5635  042F  2C33               	goto	i1l139
  5636  0430                     u18_20:
  5637  0430                     i1l1084:
  5638                           
  5639                           ;mcc_generated_files/pin_manager.c: 133:     {;mcc_generated_files/pin_manager.c: 134:  
      +                                 IOCAF5_ISR();
  5640  0430  3184  2400  3184   	fcall	_IOCAF5_ISR
  5641  0433                     i1l139:
  5642  0433  0008               	return
  5643  0434                     __end_of_PIN_MANAGER_IOC:
  5644                           
  5645                           	psect	text23
  5646  0400                     __ptext23:	
  5647 ;; *************** function _IOCAF5_ISR *****************
  5648 ;; Defined at:
  5649 ;;		line 141 in file "mcc_generated_files/pin_manager.c"
  5650 ;; Parameters:    Size  Location     Type
  5651 ;;		None
  5652 ;; Auto vars:     Size  Location     Type
  5653 ;;		None
  5654 ;; Return value:  Size  Location     Type
  5655 ;;                  1    wreg      void 
  5656 ;; Registers used:
  5657 ;;		wreg, status,2, status,0, pclath, cstack
  5658 ;; Tracked objects:
  5659 ;;		On entry : 0/0
  5660 ;;		On exit  : 0/0
  5661 ;;		Unchanged: 0/0
  5662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5663 ;;      Params:         0       0       0       0       0       0       0       0
  5664 ;;      Locals:         0       0       0       0       0       0       0       0
  5665 ;;      Temps:          0       0       0       0       0       0       0       0
  5666 ;;      Totals:         0       0       0       0       0       0       0       0
  5667 ;;Total ram usage:        0 bytes
  5668 ;; Hardware stack levels used:    1
  5669 ;; Hardware stack levels required when called:    1
  5670 ;; This function calls:
  5671 ;;		Absolute function
  5672 ;;		_IOCAF5_DefaultInterruptHandler
  5673 ;; This function is called by:
  5674 ;;		_PIN_MANAGER_IOC
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           
  5679                           ;psect for function _IOCAF5_ISR
  5680  0400                     _IOCAF5_ISR:
  5681  0400                     i1l986:	
  5682                           ;incstack = 0
  5683                           ; Regs used in _IOCAF5_ISR: [wreg+status,2+status,0+pclath+cstack]
  5684                           
  5685                           
  5686                           ;mcc_generated_files/pin_manager.c: 146:     if(IOCAF5_InterruptHandler)
  5687  0400  0879               	movf	_IOCAF5_InterruptHandler,w
  5688  0401  047A               	iorwf	_IOCAF5_InterruptHandler+1,w
  5689  0402  1903               	btfsc	3,2
  5690  0403  2C05               	goto	u5_21
  5691  0404  2C06               	goto	u5_20
  5692  0405                     u5_21:
  5693  0405  2C0B               	goto	i1l990
  5694  0406                     u5_20:
  5695  0406                     i1l988:
  5696                           
  5697                           ;mcc_generated_files/pin_manager.c: 147:     {;mcc_generated_files/pin_manager.c: 148:  
      +                                 IOCAF5_InterruptHandler();
  5698  0406  087A               	movf	_IOCAF5_InterruptHandler+1,w
  5699  0407  008A               	movwf	10
  5700  0408  0879               	movf	_IOCAF5_InterruptHandler,w
  5701  0409  000A               	callw
  5702  040A  3184               	pagesel	$
  5703  040B                     i1l990:
  5704                           
  5705                           ;mcc_generated_files/pin_manager.c: 150:     IOCAFbits.IOCAF5 = 0;
  5706  040B  017E               	movlb	62	; select bank62
  5707  040C  12BF               	bcf	63,5	;volatile
  5708  040D                     i1l143:
  5709  040D  0008               	return
  5710  040E                     __end_of_IOCAF5_ISR:
  5711                           
  5712                           	psect	text24
  5713  0455                     __ptext24:	
  5714 ;; *************** function _IOCAF5_DefaultInterruptHandler *****************
  5715 ;; Defined at:
  5716 ;;		line 163 in file "mcc_generated_files/pin_manager.c"
  5717 ;; Parameters:    Size  Location     Type
  5718 ;;		None
  5719 ;; Auto vars:     Size  Location     Type
  5720 ;;		None
  5721 ;; Return value:  Size  Location     Type
  5722 ;;                  1    wreg      void 
  5723 ;; Registers used:
  5724 ;;		None
  5725 ;; Tracked objects:
  5726 ;;		On entry : 0/0
  5727 ;;		On exit  : 0/0
  5728 ;;		Unchanged: 0/0
  5729 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  5730 ;;      Params:         0       0       0       0       0       0       0       0
  5731 ;;      Locals:         0       0       0       0       0       0       0       0
  5732 ;;      Temps:          0       0       0       0       0       0       0       0
  5733 ;;      Totals:         0       0       0       0       0       0       0       0
  5734 ;;Total ram usage:        0 bytes
  5735 ;; Hardware stack levels used:    1
  5736 ;; This function calls:
  5737 ;;		Nothing
  5738 ;; This function is called by:
  5739 ;;		_PIN_MANAGER_Initialize
  5740 ;;		_IOCAF5_ISR
  5741 ;; This function uses a non-reentrant model
  5742 ;;
  5743                           
  5744                           
  5745                           ;psect for function _IOCAF5_DefaultInterruptHandler
  5746  0455                     _IOCAF5_DefaultInterruptHandler:
  5747  0455                     i1l149:	
  5748                           ;incstack = 0
  5749                           ; Regs used in _IOCAF5_DefaultInterruptHandler: []
  5750                           
  5751  0455  0008               	return
  5752  0456                     __end_of_IOCAF5_DefaultInterruptHandler:
  5753  007E                     btemp	set	126	;btemp
  5754  007E                     int$flags	set	126
  5755  007E                     wtemp0	set	126
  5756                           
  5757                           	psect	config
  5758                           
  5759                           ;Config register CONFIG1 @ 0x8007
  5760                           ;	External Oscillator mode selection bits
  5761                           ;	FEXTOSC = OFF, Oscillator not enabled
  5762                           ;	Power-up default value for COSC bits
  5763                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
  5764                           ;	Clock Out Enable bit
  5765                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; i/o or oscillator function on OSC2
  5766                           ;	Clock Switch Enable bit
  5767                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5768                           ;	Fail-Safe Clock Monitor Enable bit
  5769                           ;	FCMEN = ON, FSCM timer enabled
  5770  8007                     	org	32775
  5771  8007  3FEC               	dw	16364
  5772                           
  5773                           ;Config register CONFIG2 @ 0x8008
  5774                           ;	Master Clear Enable bit
  5775                           ;	MCLRE = OFF, MCLR pin function is port defined function
  5776                           ;	Power-up Timer Enable bit
  5777                           ;	PWRTS = OFF, PWRT disabled
  5778                           ;	Low-Power BOR enable bit
  5779                           ;	LPBOREN = OFF, ULPBOR disabled
  5780                           ;	Brown-out reset enable bits
  5781                           ;	BOREN = ON, Brown-out Reset Enabled, SBOREN bit is ignored
  5782                           ;	Brown-out Reset Voltage Selection
  5783                           ;	BORV = LO, Brown-out Reset Voltage (VBOR) set to 2.45V
  5784                           ;	Zero-cross detect disable
  5785                           ;	ZCD = OFF, Zero-cross detect circuit is disabled at POR.
  5786                           ;	Peripheral Pin Select one-way control
  5787                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once in software
  5788                           ;	Stack Overflow/Underflow Reset Enable bit
  5789                           ;	STVREN = ON, Stack Overflow or Underflow will cause a reset
  5790  8008                     	org	32776
  5791  8008  3FFE               	dw	16382
  5792                           
  5793                           ;Config register CONFIG3 @ 0x8009
  5794                           ;	WDT Period Select bits
  5795                           ;	WDTCPS = WDTCPS_31, Divider ratio 1:65536; software control of WDTPS
  5796                           ;	WDT operating mode
  5797                           ;	WDTE = OFF, WDT Disabled, SWDTEN is ignored
  5798                           ;	WDT Window Select bits
  5799                           ;	WDTCWS = WDTCWS_7, window always open (100%); software control; keyed access not requi
      +                          red
  5800                           ;	WDT input clock selector
  5801                           ;	WDTCCS = SC, Software Control
  5802  8009                     	org	32777
  5803  8009  3F9F               	dw	16287
  5804                           
  5805                           ;Config register CONFIG4 @ 0x800A
  5806                           ;	Boot Block Size Selection bits
  5807                           ;	BBSIZE = BB512, 512 words boot block size
  5808                           ;	Boot Block Enable bit
  5809                           ;	BBEN = OFF, Boot Block disabled
  5810                           ;	SAF Enable bit
  5811                           ;	SAFEN = OFF, SAF disabled
  5812                           ;	Application Block Write Protection bit
  5813                           ;	WRTAPP = OFF, Application Block not write protected
  5814                           ;	Boot Block Write Protection bit
  5815                           ;	WRTB = OFF, Boot Block not write protected
  5816                           ;	Configuration Register Write Protection bit
  5817                           ;	WRTC = OFF, Configuration Register not write protected
  5818                           ;	Data EEPROM write protection bit
  5819                           ;	WRTD = OFF, Data EEPROM NOT write protected
  5820                           ;	Storage Area Flash Write Protection bit
  5821                           ;	WRTSAF = OFF, SAF not write protected
  5822                           ;	Low Voltage Programming Enable bit
  5823                           ;	LVP = OFF, High Voltage on MCLR/Vpp must be used for programming
  5824  800A                     	org	32778
  5825  800A  1FFF               	dw	8191
  5826                           
  5827                           ;Config register CONFIG5 @ 0x800B
  5828                           ;	UserNVM Program memory code protection bit
  5829                           ;	CP = OFF, UserNVM code protection disabled
  5830  800B                     	org	32779
  5831  800B  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        144
    BSS         52
    Persistent  34
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      13
    BANK0            80     12      62
    BANK1            80      0      72
    BANK2            80      0      72
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    IOCAF5_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCAF5_DefaultInterruptHandler(), 

    IOCAF5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), IOCAF5_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _PIN_MANAGER_Initialize->_IOCAF5_SetInterruptHandler
    _CheckStandBy->_SetADF4351_Tx
    _CheckIF->_SetADF4351_Rx
    _CheckIF->_SetADF4351_Tx
    _SetADF4351_Tx->_WriteRegister32
    _SetADF4351_Rx->_WriteRegister32

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_CheckIF

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2719
                            _CheckIF
                           _CheckPTT
                       _CheckStandBy
                  _SYSTEM_Initialize
                          _app_setup
 ---------------------------------------------------------------------------------
 (1) _app_setup                                            0     0      0       0
                         _SwitchToRx
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0      98
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0      98
         _IOCAF5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCAF5_SetInterruptHandler                           2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CheckStandBy                                         0     0      0     289
                      _SetADF4351_Tx
                         _SwitchToRx
 ---------------------------------------------------------------------------------
 (1) _CheckPTT                                             0     0      0       0
                         _SwitchToRx
                         _SwitchToTx
 ---------------------------------------------------------------------------------
 (2) _SwitchToTx                                           0     0      0       0
                        _SetRelay_Tx
                    _SetTxInhibit_ON
 ---------------------------------------------------------------------------------
 (3) _SetTxInhibit_ON                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SetRelay_Tx                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SwitchToRx                                           0     0      0       0
                        _SetRelay_Rx
                   _SetTxInhibit_OFF
 ---------------------------------------------------------------------------------
 (3) _SetTxInhibit_OFF                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SetRelay_Rx                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _CheckIF                                             12    12      0    2332
                                              0 BANK0     12    12      0
                      _SetADF4351_Rx
                      _SetADF4351_Tx
                    _blink_status_rx
                    _blink_status_tx
 ---------------------------------------------------------------------------------
 (2) _blink_status_tx                                      7     3      4     676
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _blink_status_rx                                      6     3      3     676
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (2) _SetADF4351_Tx                                        3     3      0     289
                                              6 COMMON     3     3      0
                    _WriteRegister32
 ---------------------------------------------------------------------------------
 (2) _SetADF4351_Rx                                        3     3      0     289
                                              6 COMMON     3     3      0
                    _WriteRegister32
 ---------------------------------------------------------------------------------
 (3) _WriteRegister32                                      6     2      4     221
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                    _PIN_MANAGER_IOC
 ---------------------------------------------------------------------------------
 (5) _PIN_MANAGER_IOC                                      0     0      0       0
                         _IOCAF5_ISR
 ---------------------------------------------------------------------------------
 (6) _IOCAF5_ISR                                           0     0      0       0
                   Absolute function *
     _IOCAF5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (7) _IOCAF5_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CheckIF
     _SetADF4351_Rx
       _WriteRegister32
     _SetADF4351_Tx
       _WriteRegister32
     _blink_status_rx
     _blink_status_tx
   _CheckPTT
     _SwitchToRx
       _SetRelay_Rx
       _SetTxInhibit_OFF
     _SwitchToTx
       _SetRelay_Tx
       _SetTxInhibit_ON
   _CheckStandBy
     _SetADF4351_Tx
       _WriteRegister32
     _SwitchToRx
       _SetRelay_Rx
       _SetTxInhibit_OFF
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCAF5_SetInterruptHandler
     _PMD_Initialize
   _app_setup
     _SwitchToRx
       _SetRelay_Rx
       _SetTxInhibit_OFF

 _INTERRUPT_InterruptManager (ROOT)
   _PIN_MANAGER_IOC
     _IOCAF5_ISR
       Absolute function(Fake) *
       _IOCAF5_DefaultInterruptHandler *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      9       D       2       92.9%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      C      3E       5       77.5%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0      48       7       90.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0      48       9       90.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
ABS                  0      0      DB      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      DB      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Aug 27 23:24:15 2021

                                        l41 0421                                          l35 0417  
                                        l38 042A                                         l201 02CA  
                                       l211 0278                                         l204 024E  
                                       l220 044C                                         l300 0391  
                                       l213 028A                                         l205 0250  
                                       l221 044D                                         l206 027C  
                                       l222 044E                                         l310 03B7  
                                       l215 028C                                         l303 03A0  
                                       l135 035D                                         l232 044F  
                                       l320 03CD                                         l225 0445  
                                       l313 03C2                                         l242 0362  
                                       l218 044A                                         l234 0451  
                                       l146 0444                                         l227 0447  
                                       l307 03AF                                         l244 036B  
                                       l228 0448                                         l245 036D  
                                       l261 0330                                         l253 0302  
                                       l237 0452                                         l229 0449  
                                       l246 036E                                         l254 0304  
                                       l190 028D                                         l247 0370  
                                       l191 028F                                         l239 0454  
                                       l248 0380                                         l192 02BA  
                                       l280 03F0                                         l274 02FD  
                                       l266 02CF                                         l267 02D1  
                                       l284 00C4                                         l197 02B6  
                                       l277 03FF                                         l199 02C8  
                                       l288 0129                                         l297 01BD  
                                       l944 0418                                         l980 0425  
                                       l982 0426                                         l984 0429  
                                       l978 0422                                         u520 0368  
                                       u600 025E                                         u521 0365  
                                       u601 025B                                         u620 0267  
                                       u700 0043                                         u621 0266  
                                       u701 0042                                         u550 0380  
                                       u534 036A                                         u630 028A  
                                       u614 0260                                         u710 0047  
                                       u551 037F                                         u631 0289  
                                       u711 0046                                         u560 029D  
                                       u720 004B                                         u545 0372  
                                       u561 029A                                         u721 004A  
                                       u650 032C                                         u651 032B  
                                       u635 0286                                         u580 02A5  
                                       u900 01A4                                         u645 0308  
                                       u581 02A4                                         u901 01A3  
                                       u805 00E1                                         u670 02F9  
                                       u590 02C8                                         u574 029F  
                                       u910 01A9                                         u830 0128  
                                       u671 02F8                                         u591 02C7  
                                       u911 01A8                                         u831 0127  
                                       u815 00F4                                         u735 0051  
                                       u840 012D                                         u920 0386  
                                       u680 03BF                                         u665 02D5  
                                       u841 012C                                         u825 0107  
                                       u745 0064                                         u921 0385  
                                       u681 03BE                                         u770 00AC  
                                       u930 038B                                         u690 03C6  
                                       u595 02C4                                         u835 0124  
                                       u771 00AB                                         u755 0077  
                                       u931 038A                                         u691 03C5  
                                       u780 00C8                                         u940 0395  
                                       u781 00C7                                         u765 008B  
                                       u941 0394                                         u950 039A  
                                       u855 0133                                         u775 00A8  
                                       u951 0399                                         u960 03A7  
                                       u865 0147                                         u961 03A6  
                                       u890 018F                                         u970 03AB  
                                       u891 018E                                         u875 015A  
                                       u795 00CE                                         u971 03AA  
                                       u980 03B3                                         u885 016E  
                                       u981 03B2                                         u895 018B  
                                       u997 03E6                            ?_WriteRegister32 0070  
                   __size_of_PMD_Initialize 000A                                         wreg 0009  
                            ?_SetADF4351_Rx 0070                              ?_SetADF4351_Tx 0070  
                           _blink_status_rx 028D          __end_of_IOCAF5_SetInterruptHandler 0445  
                           _blink_status_tx 024E                  _IOCAF5_SetInterruptHandler 0440  
                                      l1212 0371                                        l1204 0440  
                                      l1220 0335                                        l1214 0378  
                                      l1206 035E                                        l1310 02ED  
                                      l1302 02D2                                        l1230 0340  
                                      l1222 0337                                        l1216 037C  
                                      l1320 02F9                                        l1312 02EE  
                                      l1304 02E8                                        l1240 0351  
                                      l1232 0341                                        l1224 033D  
                                      l1314 02F0                                        l1306 02EA  
                                      l1250 0290                                        l1410 01A9  
                                      l1402 0190                                        l1322 03F1  
                                      l1330 03E5                                        l1242 0352  
                                      l1234 0342                                        l1226 033E  
                                      l1218 0331                                        l1316 02F1  
                                      l1308 02EB                                        l1252 0293  
                                      l1260 0251                                        l1412 01AC  
                                      l1404 0193                                        l1324 03F4  
                                      l1332 03E9                                        l1420 0386  
                                      l1244 0353                                        l1236 0343  
                                      l1228 033F                                        l1340 03B8  
                                      l1270 02FE                                        l1318 02F5  
                                      l1254 029F                                        l1262 0254  
                                      l1414 01B7                                        l1406 019F  
                                      l1326 03F8                                        l1430 039D  
                                      l1422 038B                                        l1246 0354  
                                      l1238 0344                                        l1334 040E  
                                      l1350 03CB                                        l1342 03BB  
                                      l1280 031D                                        l1256 02A5  
                                      l1264 0260                                        l1416 01BC  
                                      l1408 01A4                                        l1360 004B  
                                      l1328 03E2                                        l1440 03B6  
                                      l1432 03A1                                        l1424 038E  
                                      l1248 035B                                        l1336 0411  
                                      l1352 03CC                                        l1344 03BF  
                                      l1290 0324                                        l1282 031E  
                                      l1258 02AE                                        l1266 0267  
                                      l1370 009F                                        l1354 003C  
                                      l1434 03A7                                        l1426 0395  
                                      l1418 0381                                        l1338 0414  
                                      l1346 03C6                                        l1450 03D9  
                                      l1442 03CE                                        l1292 0328  
                                      l1284 0320                                        l1276 0305  
                                      l1268 0270                                        l1380 00CA  
                                      l1372 00AC                                        l1356 0043  
                                      l1436 03AB                                        l1428 039A  
                                      l1348 03C9                                        l1444 03D1  
                                      l1294 032C                                        l1286 0321  
                                      l1278 031B                                        l1382 0117  
                                      l1374 00C8                                        l1366 004D  
                                      l1358 0047                                        l1438 03B3  
                                      l1446 03D2                                        l1288 0323  
                                      l1296 02CB                                        l1384 011B  
                                      l1368 009B                                        l1448 03D6  
                                      l1394 012F                                        l1396 017E  
                                      l1388 012D                                        l1398 0182  
                                      u1007 03ED                                        u1017 03F5  
                                      u1027 03FC                                        u1037 026A  
                                      u1047 0273                                        u1057 02A8  
                                      u1067 02B1                                        u1077 02FA  
                                      _LATA 0018                                        _LATB 0019  
                                      u1087 032D                                        _LATC 001A  
                                      _PMD0 0796                                        _PMD1 0797  
                                      _PMD2 0798                                        _PMD3 0799  
                                      _PMD4 079A                                        _PMD5 079B  
                                      _PMD6 079C                                        _PMD7 079D  
                                      i1l54 0012                                        _WPUA 1F39  
                                      _WPUB 1F44                                        _WPUC 1F4F  
                                      u5_20 0406                                        u5_21 0405  
                                      _main 03CE                                        fsr0h 0005  
                                      fsr1h 0007                                        indf0 0000  
                                      fsr0l 0004                                        fsr1l 0006  
                                      btemp 007E                             __end_of_CheckIF 01BE  
                                      start 0014              __size_of_OSCILLATOR_Initialize 0009  
                       __size_of_IOCAF5_ISR 000E               __end_of_OSCILLATOR_Initialize 042B  
                                     ?_main 0070                                       i1l143 040D  
                                     i1l139 0433                                       i1l149 0455  
                                     i1l990 040B                                       i1l986 0400  
                                     i1l988 0406                                       _OSCEN 0891  
                                     u18_20 0430                                       u50_20 000B  
                                     u18_21 042F                                       u50_21 000A  
                                     u51_20 000F                                       u51_21 000E  
                                     _PORTC 000E                                       _TRISA 0012  
                                     _TRISB 0013                                       _TRISC 0014  
                   __end_of_PIN_MANAGER_IOC 0434                                       pclath 000A  
                     __size_of_CheckStandBy 0020                            __end_of_CheckPTT 03B8  
                                     status 0003                            ?_SetTxInhibit_ON 0070  
                                     wtemp0 007E                        WriteRegister32@value 0070  
                           __initialization 0016                                __end_of_main 03E2  
               ?_INTERRUPT_InterruptManager 0070                     __end_of_blink_status_rx 02CB  
                   __end_of_blink_status_tx 028D                                      ??_main 0079  
                             ??_SetRelay_Rx 0070                               ??_SetRelay_Tx 0070  
                           ??_SetADF4351_Rx 0076                             ??_SetADF4351_Tx 0076  
                              _CheckStandBy 0381                                      _ANSELA 1F38  
                                    _ANSELB 1F43                                      _ANSELC 1F4E  
                                 ??_CheckIF 0052                                      i1l1082 042B  
                                    i1l1084 0430                                      i1l1190 000B  
                                    i1l1192 000F                                      _ODCONA 1F3A  
                                    _ODCONB 1F45                                      _ODCONC 1F50  
                                    i1l1188 0006                                      _INLVLA 1F3C  
                                    _INLVLB 1F47                                      _INLVLC 1F52  
                                    _OSCFRQ 0893                                      _rx_reg 0038  
                                    _tx_reg 0020                              _PMD_Initialize 0418  
                         ?_SetTxInhibit_OFF 0070  IOCAF5_SetInterruptHandler@InterruptHandler 0070  
                          ?_PIN_MANAGER_IOC 0070                         __end_of_SetRelay_Rx 044F  
                       __end_of_SetRelay_Tx 044A                                ??_IOCAF5_ISR 0070  
                        ??_SetTxInhibit_OFF 0070                           _SYSTEM_Initialize 040E  
                   __end_of__initialization 0038                          ?_SYSTEM_Initialize 0070  
                          WriteRegister32@i 0074                                  _SwitchToRx 03F1  
                                _SwitchToTx 03E2                    blink_status_rx@count_val 0070  
                            __pcstackCOMMON 0070                                __pidataBANK1 01BE  
                              __pidataBANK2 0206                         ??_SYSTEM_Initialize 0072  
               blink_status_tx@duration_val 0072                      __end_of_PMD_Initialize 0422  
                          ?_blink_status_rx 0070                            ?_blink_status_tx 0070  
                        __end_of_IOCAF5_ISR 040E                            blink_status_rx@i 0074  
                          blink_status_tx@i 0075                                   ?_CheckPTT 0070  
                        __size_of_app_setup 0016                 ?_IOCAF5_SetInterruptHandler 0070  
                 __end_of_SYSTEM_Initialize 0418                                  __pbssBANK0 0020  
                                __pnvCOMMON 0079            ??_IOCAF5_DefaultInterruptHandler 0070  
           ?_IOCAF5_DefaultInterruptHandler 0070                     _IOCAF5_InterruptHandler 0079  
                                __pmaintext 03CE                    blink_status_tx@count_val 0070  
                                __pintentry 0004                             ?_PMD_Initialize 0070  
                                ??_CheckPTT 0070                                 _SetRelay_Rx 044A  
                               _SetRelay_Tx 0445                                     _OSCCON1 088D  
                                   _OSCCON3 088F                                CheckIF@i_434 005A  
                              CheckIF@i_435 005C                                     _OSCTUNE 0892  
                                   _SLRCONA 1F3B                                     _SLRCONB 1F46  
                                   _SLRCONC 1F51                                     _CheckIF 003C  
                  __size_of_WriteRegister32 0023                                 ?_SwitchToRx 0070  
                               ?_SwitchToTx 0070                           __end_of_app_setup 03CE  
                            SetADF4351_Rx@i 0077                              SetADF4351_Tx@i 0077  
                                   __ptext1 03B8                                     __ptext2 040E  
                                   __ptext3 0418                                     __ptext4 0331  
                                   __ptext5 0440                                     __ptext6 0422  
                                   __ptext7 0381                                     __ptext8 03A1  
                                   __ptext9 03E2                       _OSCILLATOR_Initialize 0422  
                  ??_PIN_MANAGER_Initialize 0072                                   _IOCAFbits 1F3F  
                                 _IOCANbits 1F3E                                   _IOCAPbits 1F3D  
                __size_of_SYSTEM_Initialize 000A                                     clrloop0 043B  
                      end_of_initialization 0038                                     init_ram 0434  
                                   initloop 0435                    __size_of_SetTxInhibit_ON 0003  
                                 _PORTAbits 000C                                   _PORTCbits 000E  
                     __end_of_SetADF4351_Rx 0331                       __end_of_SetADF4351_Tx 02FE  
                       __size_of_SwitchToRx 000F                         __size_of_SwitchToTx 000F  
                                _rx_reg_144 0138                                  _tx_reg_144 0120  
                         ??_WriteRegister32 0074                   __size_of_SetTxInhibit_OFF 0003  
                    ?_OSCILLATOR_Initialize 0070                         start_initialization 0016  
           __size_of_PIN_MANAGER_Initialize 002D                           __size_of_CheckPTT 0017  
                  __size_of_PIN_MANAGER_IOC 0009                            ??_PMD_Initialize 0070  
                               __pdataBANK1 00A0                                 __pdataBANK2 0120  
    __end_of_IOCAF5_DefaultInterruptHandler 0456     __size_of_IOCAF5_DefaultInterruptHandler 0001  
            _IOCAF5_DefaultInterruptHandler 0455                           ??_SetTxInhibit_ON 0070  
                              ?_SetRelay_Rx 0070                                ?_SetRelay_Tx 0070  
                               __pbssCOMMON 007B                                   ___latbits 0001  
                             __pcstackBANK0 0052                    __size_of_blink_status_rx 003E  
                  __size_of_blink_status_tx 003F                                    ?_CheckIF 0070  
                              ??_SwitchToRx 0070                                ??_SwitchToTx 0070  
                    _PIN_MANAGER_Initialize 0331                                   _app_setup 03B8  
              ??_INTERRUPT_InterruptManager 0070                               ?_CheckStandBy 0070  
                        __end_of_SwitchToRx 0400                          __end_of_SwitchToTx 03F1  
                                  CheckIF@i 0058                                    _LATAbits 0018  
                                  _LATBbits 0019                                    _LATCbits 001A  
                                 clear_ram0 043A                                    _PIE0bits 0716  
       __size_of_INTERRUPT_InterruptManager 0010                                    _PIR0bits 070C  
               blink_status_rx@duration_val 0072                            _SetTxInhibit_OFF 0452  
                         ??_PIN_MANAGER_IOC 0070                                  ?_app_setup 0070  
                                 _rx_reg_50 00A0                                   _rx_reg_28 00D0  
                            ??_CheckStandBy 0079                                    _CheckPTT 03A1  
                                 _tx_reg_50 0150                                   _tx_reg_28 00B8  
                           _WriteRegister32 035E                            __size_of_CheckIF 0182  
                         ??_blink_status_rx 0073                           ??_blink_status_tx 0074  
                   ??_OSCILLATOR_Initialize 0070                                _G_STBY_STATE 0051  
                      __size_of_SetRelay_Rx 0005                        __size_of_SetRelay_Tx 0005  
                                  __ptext10 044F                                    __ptext11 0445  
                                  __ptext20 035E                                    __ptext12 03F1  
                                  __ptext13 0452                                    __ptext22 042B  
                                  __ptext14 044A                                    __ptext23 0400  
                                  __ptext15 003C                                    __ptext24 0455  
                                  __ptext16 024E                                    __ptext17 028D  
                                  __ptext18 02CB                                    __ptext19 02FE  
              ??_IOCAF5_SetInterruptHandler 0072                                  _IOCAF5_ISR 0400  
                             __size_of_main 0014                             _SetTxInhibit_ON 044F  
                    __size_of_SetADF4351_Rx 0033                      __size_of_SetADF4351_Tx 0033  
                                  int$flags 007E          __end_of_INTERRUPT_InterruptManager 0014  
                _INTERRUPT_InterruptManager 0004                                 ??_app_setup 0070  
       __size_of_IOCAF5_SetInterruptHandler 0005                     __end_of_WriteRegister32 0381  
                                _INTCONbits 000B                                 _G_PORTC_OLD 0050  
                            _G_IF_SEL_STATE 007B                                    intlevel1 0000  
                   ?_PIN_MANAGER_Initialize 0070                                 _G_PTT_STATE 007C  
                      __end_of_CheckStandBy 03A1                               _SetADF4351_Rx 02FE  
                             _SetADF4351_Tx 02CB                    __end_of_SetTxInhibit_OFF 0455  
                               ?_IOCAF5_ISR 0070              __end_of_PIN_MANAGER_Initialize 035E  
                   __end_of_SetTxInhibit_ON 0452                             _PIN_MANAGER_IOC 042B  
